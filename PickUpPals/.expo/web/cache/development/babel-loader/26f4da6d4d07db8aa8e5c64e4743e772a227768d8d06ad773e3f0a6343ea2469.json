{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Card/CardCover.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { withTheme } from \"../../core/theming\";\nimport { grey200 } from \"../../styles/colors\";\nvar CardCover = function (_React$Component) {\n  _inherits(CardCover, _React$Component);\n  function CardCover() {\n    _classCallCheck(this, CardCover);\n    return _possibleConstructorReturn(this, _getPrototypeOf(CardCover).apply(this, arguments));\n  }\n  _createClass(CardCover, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        index = _this$props.index,\n        total = _this$props.total,\n        style = _this$props.style,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"index\", \"total\", \"style\", \"theme\"]);\n      var roundness = theme.roundness;\n      var coverStyle;\n      if (index === 0) {\n        if (total === 1) {\n          coverStyle = {\n            borderRadius: roundness\n          };\n        } else {\n          coverStyle = {\n            borderTopLeftRadius: roundness,\n            borderTopRightRadius: roundness\n          };\n        }\n      } else if (typeof total === 'number' && index === total - 1) {\n        coverStyle = {\n          borderBottomLeftRadius: roundness\n        };\n      }\n      return React.createElement(View, {\n        style: [styles.container, coverStyle, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      }, React.createElement(Image, _extends({}, rest, {\n        style: [styles.image, coverStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      })));\n    }\n  }]);\n  return CardCover;\n}(React.Component);\nCardCover.displayName = 'Card.Cover';\nvar styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden'\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover'\n  }\n});\nexport default withTheme(CardCover);\nexport { CardCover };","map":{"version":3,"names":["React","StyleSheet","View","Image","withTheme","grey200","CardCover","_this$props","props","index","total","style","theme","rest","_objectWithoutProperties","roundness","coverStyle","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","createElement","styles","container","__source","fileName","_jsxFileName","lineNumber","_extends","image","Component","displayName","create","height","backgroundColor","overflow","flex","undefined","width","padding","justifyContent","resizeMode"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Card/CardCover.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle, Image, StyleProp } from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { grey200 } from '../../styles/colors';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof Image> & {\n  /**\n   * @internal\n   */\n  index?: number;\n  /**\n   * @internal\n   */\n  total?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to show a cover image inside a Card.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Card } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Card>\n *     <Card.Cover source={{ uri: 'https://picsum.photos/700' }} />\n *   </Card>\n * );\n *\n * export default MyComponent;\n * ```\n *\n * @extends Image props https://facebook.github.io/react-native/docs/image.html#props\n */\nclass CardCover extends React.Component<Props> {\n  static displayName = 'Card.Cover';\n\n  render() {\n    const { index, total, style, theme, ...rest } = this.props;\n    const { roundness } = theme;\n\n    let coverStyle;\n\n    if (index === 0) {\n      if (total === 1) {\n        coverStyle = {\n          borderRadius: roundness,\n        };\n      } else {\n        coverStyle = {\n          borderTopLeftRadius: roundness,\n          borderTopRightRadius: roundness,\n        };\n      }\n    } else if (typeof total === 'number' && index === total - 1) {\n      coverStyle = {\n        borderBottomLeftRadius: roundness,\n      };\n    }\n\n    return (\n      <View style={[styles.container, coverStyle, style]}>\n        <Image {...rest} style={[styles.image, coverStyle]} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 195,\n    backgroundColor: grey200,\n    overflow: 'hidden',\n  },\n  image: {\n    flex: 1,\n    height: undefined,\n    width: undefined,\n    padding: 16,\n    justifyContent: 'flex-end',\n    resizeMode: 'cover',\n  },\n});\n\nexport default withTheme(CardCover);\n\n// @component-docs ignore-next-line\nexport { CardCover };\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AACA,SAASC,SAAT;AACA,SAASC,OAAT;IAsCMC,S;;;;;;;;6BAGK;MAAA,IAAAC,WAAA,GACyC,KAAKC,KAD9C;QACCC,KADD,GAAAF,WAAA,CACCE,KADD;QACQC,KADR,GAAAH,WAAA,CACQG,KADR;QACeC,KADf,GAAAJ,WAAA,CACeI,KADf;QACsBC,KADtB,GAAAL,WAAA,CACsBK,KADtB;QACgCC,IADhC,GAAAC,wBAAA,CAAAP,WAAA;MAAA,IAECQ,SAFD,GAEeH,KAFf,CAECG,SAFD;MAIP,IAAIC,UAAJ;MAEA,IAAIP,KAAK,KAAK,CAAd,EAAiB;QACf,IAAIC,KAAK,KAAK,CAAd,EAAiB;UACfM,UAAU,GAAG;YACXC,YAAY,EAAEF;UADH,CAAb;QAGD,CAJD,MAIO;UACLC,UAAU,GAAG;YACXE,mBAAmB,EAAEH,SADV;YAEXI,oBAAoB,EAAEJ;UAFX,CAAb;QAID;MACF,CAXD,MAWO,IAAI,OAAOL,KAAP,KAAiB,QAAjB,IAA6BD,KAAK,KAAKC,KAAK,GAAG,CAAnD,EAAsD;QAC3DM,UAAU,GAAG;UACXI,sBAAsB,EAAEL;QADb,CAAb;MAGD;MAED,OACEf,KAAA,CAAAqB,aAAA,CAACnB,IAAD;QAAMS,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmBP,UAAnB,EAA+BL,KAA/B,CAAb;QAAAa,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GACE3B,KAAA,CAAAqB,aAAA,CAAClB,KAAD,EAAAyB,QAAA,KAAWf,IAAX;QAAiBF,KAAK,EAAE,CAACW,MAAM,CAACO,KAAR,EAAeb,UAAf,CAAxB;QAAAQ,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GADF,CADF;IAKD;;;EA/BqB3B,KAAK,CAAC8B,S;AAAxBxB,S,CACGyB,W,GAAc,Y;AAiCvB,IAAMT,MAAM,GAAGrB,UAAU,CAAC+B,MAAX,CAAkB;EAC/BT,SAAS,EAAE;IACTU,MAAM,EAAE,GADC;IAETC,eAAe,EAAE7B,OAFR;IAGT8B,QAAQ,EAAE;EAHD,CADoB;EAM/BN,KAAK,EAAE;IACLO,IAAI,EAAE,CADD;IAELH,MAAM,EAAEI,SAFH;IAGLC,KAAK,EAAED,SAHF;IAILE,OAAO,EAAE,EAJJ;IAKLC,cAAc,EAAE,UALX;IAMLC,UAAU,EAAE;EANP;AANwB,CAAlB,CAAf;AAgBA,eAAerC,SAAS,CAACE,SAAD,CAAxB;AAGA,SAASA,SAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}