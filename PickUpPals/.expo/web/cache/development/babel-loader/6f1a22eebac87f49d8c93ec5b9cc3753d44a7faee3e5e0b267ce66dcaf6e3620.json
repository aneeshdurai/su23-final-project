{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Switch.tsx\";\nimport * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from \"../styles/colors\";\nimport NativeModules from \"react-native-web/dist/exports/NativeModules\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport NativeSwitch from \"react-native-web/dist/exports/Switch\";\nimport setColor from 'color';\nimport { withTheme } from \"../core/theming\";\nvar version = NativeModules.PlatformConstants ? NativeModules.PlatformConstants.reactNativeVersion : undefined;\nvar Switch = function (_React$Component) {\n  _inherits(Switch, _React$Component);\n  function Switch() {\n    _classCallCheck(this, Switch);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Switch).apply(this, arguments));\n  }\n  _createClass(Switch, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        value = _this$props.value,\n        disabled = _this$props.disabled,\n        onValueChange = _this$props.onValueChange,\n        color = _this$props.color,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"value\", \"disabled\", \"onValueChange\", \"color\", \"theme\"]);\n      var checkedColor = color || theme.colors.accent;\n      var onTintColor = Platform.OS === 'ios' ? checkedColor : disabled ? theme.dark ? setColor(white).alpha(0.1).rgb().string() : setColor(black).alpha(0.12).rgb().string() : setColor(checkedColor).alpha(0.5).rgb().string();\n      var thumbTintColor = Platform.OS === 'ios' ? undefined : disabled ? theme.dark ? grey800 : grey400 : value ? checkedColor : theme.dark ? grey400 : grey50;\n      var props = version && version.major === 0 && version.minor <= 56 ? {\n        onTintColor: onTintColor,\n        thumbTintColor: thumbTintColor\n      } : {\n        thumbColor: thumbTintColor,\n        trackColor: {\n          true: onTintColor,\n          false: ''\n        }\n      };\n      return React.createElement(NativeSwitch, _extends({\n        value: value,\n        disabled: disabled,\n        onValueChange: disabled ? undefined : onValueChange\n      }, props, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        }\n      }));\n    }\n  }]);\n  return Switch;\n}(React.Component);\nexport default withTheme(Switch);","map":{"version":3,"names":["React","grey400","grey800","grey50","white","black","NativeModules","Platform","NativeSwitch","setColor","withTheme","version","PlatformConstants","reactNativeVersion","undefined","Switch","_this$props","props","value","disabled","onValueChange","color","theme","rest","_objectWithoutProperties","checkedColor","colors","accent","onTintColor","OS","dark","alpha","rgb","string","thumbTintColor","major","minor","thumbColor","trackColor","true","false","createElement","_extends","__source","fileName","_jsxFileName","lineNumber","Component"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Switch.tsx"],"sourcesContent":["import * as React from 'react';\nimport { grey400, grey800, grey50, white, black } from '../styles/colors';\nimport {\n  NativeModules,\n  Platform,\n  StyleProp,\n  Switch as NativeSwitch,\n  ViewStyle,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\nconst version = NativeModules.PlatformConstants\n  ? NativeModules.PlatformConstants.reactNativeVersion\n  : undefined;\n\ntype Props = React.ComponentProps<typeof NativeSwitch> & {\n  /**\n   * Disable toggling the switch.\n   */\n  disabled?: boolean;\n  /**\n   * Value of the switch, true means 'on', false means 'off'.\n   */\n  value?: boolean;\n  /**\n   * Custom color for switch.\n   */\n  color?: string;\n  /**\n   * Callback called with the new value when it changes.\n   */\n  onValueChange?: Function;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Switch is a visual toggle between two mutually exclusive states â€” on and off.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/switch-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Switch } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     isSwitchOn: false,\n *   };\n *\n *   render() {\n *     const { isSwitchOn } = this.state;\n *     return (\n *       <Switch\n *         value={isSwitchOn}\n *         onValueChange={() =>\n *           { this.setState({ isSwitchOn: !isSwitchOn }); }\n *         }\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Switch extends React.Component<Props> {\n  render() {\n    const {\n      value,\n      disabled,\n      onValueChange,\n      color,\n      theme,\n      ...rest\n    } = this.props;\n\n    const checkedColor = color || theme.colors.accent;\n\n    const onTintColor =\n      Platform.OS === 'ios'\n        ? checkedColor\n        : disabled\n        ? theme.dark\n          ? setColor(white)\n              .alpha(0.1)\n              .rgb()\n              .string()\n          : setColor(black)\n              .alpha(0.12)\n              .rgb()\n              .string()\n        : setColor(checkedColor)\n            .alpha(0.5)\n            .rgb()\n            .string();\n\n    const thumbTintColor =\n      Platform.OS === 'ios'\n        ? undefined\n        : disabled\n        ? theme.dark\n          ? grey800\n          : grey400\n        : value\n        ? checkedColor\n        : theme.dark\n        ? grey400\n        : grey50;\n\n    const props =\n      version && version.major === 0 && version.minor <= 56\n        ? {\n            onTintColor,\n            thumbTintColor,\n          }\n        : {\n            thumbColor: thumbTintColor,\n            trackColor: {\n              true: onTintColor,\n              false: '',\n            },\n          };\n\n    return (\n      <NativeSwitch\n        value={value}\n        disabled={disabled}\n        onValueChange={disabled ? undefined : onValueChange}\n        {...props}\n        {...rest}\n      />\n    );\n  }\n}\n\nexport default withTheme(Switch);\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT,EAAkBC,OAAlB,EAA2BC,MAA3B,EAAmCC,KAAnC,EAA0CC,KAA1C;AACA,OAAAC,aAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,YAAA;AAOA,OAAOC,QAAP,MAAqB,OAArB;AACA,SAASC,SAAT;AAGA,IAAMC,OAAO,GAAGL,aAAa,CAACM,iBAAd,GACZN,aAAa,CAACM,iBAAd,CAAgCC,kBADpB,GAEZC,SAFJ;IA0EMC,M;;;;;;;;6BACK;MAAA,IAAAC,WAAA,GAQH,KAAKC,KARF;QAELC,KAFK,GAAAF,WAAA,CAELE,KAFK;QAGLC,QAHK,GAAAH,WAAA,CAGLG,QAHK;QAILC,aAJK,GAAAJ,WAAA,CAILI,aAJK;QAKLC,KALK,GAAAL,WAAA,CAKLK,KALK;QAMLC,KANK,GAAAN,WAAA,CAMLM,KANK;QAOFC,IAPE,GAAAC,wBAAA,CAAAR,WAAA;MAUP,IAAMS,YAAY,GAAGJ,KAAK,IAAIC,KAAK,CAACI,MAAN,CAAaC,MAA3C;MAEA,IAAMC,WAAW,GACfrB,QAAQ,CAACsB,EAAT,KAAgB,KAAhB,GACIJ,YADJ,GAEIN,QAAQ,GACRG,KAAK,CAACQ,IAAN,GACErB,QAAQ,CAACL,KAAD,CAAR,CACG2B,KADH,CACS,GADT,EAEGC,GAFH,GAGGC,MAHH,EADF,GAKExB,QAAQ,CAACJ,KAAD,CAAR,CACG0B,KADH,CACS,IADT,EAEGC,GAFH,GAGGC,MAHH,EANM,GAURxB,QAAQ,CAACgB,YAAD,CAAR,CACGM,KADH,CACS,GADT,EAEGC,GAFH,GAGGC,MAHH,EAbN;MAkBA,IAAMC,cAAc,GAClB3B,QAAQ,CAACsB,EAAT,KAAgB,KAAhB,GACIf,SADJ,GAEIK,QAAQ,GACRG,KAAK,CAACQ,IAAN,GACE5B,OADF,GAEED,OAHM,GAIRiB,KAAK,GACLO,YADK,GAELH,KAAK,CAACQ,IAAN,GACA7B,OADA,GAEAE,MAXN;MAaA,IAAMc,KAAK,GACTN,OAAO,IAAIA,OAAO,CAACwB,KAAR,KAAkB,CAA7B,IAAkCxB,OAAO,CAACyB,KAAR,IAAiB,EAAnD,GACI;QACER,WAAW,EAAXA,WADF;QAEEM,cAAc,EAAdA;MAFF,CADJ,GAKI;QACEG,UAAU,EAAEH,cADd;QAEEI,UAAU,EAAE;UACVC,IAAI,EAAEX,WADI;UAEVY,KAAK,EAAE;QAFG;MAFd,CANN;MAcA,OACExC,KAAA,CAAAyC,aAAA,CAACjC,YAAD,EAAAkC,QAAA;QACExB,KAAK,EAAEA,KADT;QAEEC,QAAQ,EAAEA,QAFZ;QAGEC,aAAa,EAAED,QAAQ,GAAGL,SAAH,GAAeM;MAHxC,GAIMH,KAJN,EAKMM,IALN;QAAAoB,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GADF;IASD;;;EAnEkB9C,KAAK,CAAC+C,S;AAsE3B,eAAerC,SAAS,CAACK,MAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}