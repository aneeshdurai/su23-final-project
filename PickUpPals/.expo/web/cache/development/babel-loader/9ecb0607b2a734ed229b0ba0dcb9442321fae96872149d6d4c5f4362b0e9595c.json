{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/List/ListSection.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ListSubheader from \"./ListSubheader\";\nimport { withTheme } from \"../../core/theming\";\nvar ListSection = function (_React$Component) {\n  _inherits(ListSection, _React$Component);\n  function ListSection() {\n    _classCallCheck(this, ListSection);\n    return _possibleConstructorReturn(this, _getPrototypeOf(ListSection).apply(this, arguments));\n  }\n  _createClass(ListSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        title = _this$props.title,\n        titleStyle = _this$props.titleStyle,\n        style = _this$props.style,\n        rest = _objectWithoutProperties(_this$props, [\"children\", \"title\", \"titleStyle\", \"style\"]);\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      }), title && React.createElement(ListSubheader, {\n        style: titleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, title), children);\n    }\n  }]);\n  return ListSection;\n}(React.Component);\nListSection.displayName = 'List.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginVertical: 8\n  }\n});\nexport default withTheme(ListSection);","map":{"version":3,"names":["React","View","StyleSheet","ListSubheader","withTheme","ListSection","_this$props","props","children","title","titleStyle","style","rest","_objectWithoutProperties","createElement","_extends","styles","container","__source","fileName","_jsxFileName","lineNumber","Component","displayName","create","marginVertical"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/List/ListSection.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n  TextStyle,\n} from 'react-native';\nimport ListSubheader from './ListSubheader';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Title text for the section.\n   */\n  title?: string;\n  /**\n   * Content of the section.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Style that is passed to Title element.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to group list items.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/list-section.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <List.Section>\n *         <List.Subheader>Some title</List.Subheader>\n *         <List.Item\n *           title=\"First Item\"\n *           left={() => <List.Icon icon=\"folder\" />}\n *        />\n *         <List.Item\n *           title=\"Second Item\"\n *           left={() => <List.Icon color=\"#000\" icon=\"folder\" />}\n *        />\n *      </List.Section>\n *     );\n *   }\n * }\n *\n * export default MyComponent;\n * ```\n */\nclass ListSection extends React.Component<Props> {\n  static displayName = 'List.Section';\n\n  render() {\n    const { children, title, titleStyle, style, ...rest } = this.props;\n\n    return (\n      <View {...rest} style={[styles.container, style]}>\n        {title && <ListSubheader style={titleStyle}>{title}</ListSubheader>}\n        {children}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 8,\n  },\n});\n\nexport default withTheme(ListSection);\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAOA,OAAOC,aAAP;AACA,SAASC,SAAT;IAwDMC,W;;;;;;;;6BAGK;MAAA,IAAAC,WAAA,GACiD,KAAKC,KADtD;QACCC,QADD,GAAAF,WAAA,CACCE,QADD;QACWC,KADX,GAAAH,WAAA,CACWG,KADX;QACkBC,UADlB,GAAAJ,WAAA,CACkBI,UADlB;QAC8BC,KAD9B,GAAAL,WAAA,CAC8BK,KAD9B;QACwCC,IADxC,GAAAC,wBAAA,CAAAP,WAAA;MAGP,OACEN,KAAA,CAAAc,aAAA,CAACb,IAAD,EAAAc,QAAA,KAAUH,IAAV;QAAgBD,KAAK,EAAE,CAACK,MAAM,CAACC,SAAR,EAAmBN,KAAnB,CAAvB;QAAAO,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,IACGZ,KAAK,IAAIT,KAAA,CAAAc,aAAA,CAACX,aAAD;QAAeQ,KAAK,EAAED,UAAtB;QAAAQ,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAAmCZ,KAAnC,CADZ,EAEGD,QAFH,CADF;IAMD;;;EAZuBR,KAAK,CAACsB,S;AAA1BjB,W,CACGkB,W,GAAc,c;AAcvB,IAAMP,MAAM,GAAGd,UAAU,CAACsB,MAAX,CAAkB;EAC/BP,SAAS,EAAE;IACTQ,cAAc,EAAE;EADP;AADoB,CAAlB,CAAf;AAMA,eAAerB,SAAS,CAACC,WAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}