{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Avatar/AvatarImage.tsx\";\nimport * as React from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withTheme } from \"../../core/theming\";\nvar defaultSize = 64;\nvar AvatarImage = function (_React$Component) {\n  _inherits(AvatarImage, _React$Component);\n  function AvatarImage() {\n    _classCallCheck(this, AvatarImage);\n    return _possibleConstructorReturn(this, _getPrototypeOf(AvatarImage).apply(this, arguments));\n  }\n  _createClass(AvatarImage, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        _this$props$size = _this$props.size,\n        size = _this$props$size === void 0 ? defaultSize : _this$props$size,\n        source = _this$props.source,\n        style = _this$props.style,\n        theme = _this$props.theme;\n      var colors = theme.colors;\n      var _ref = StyleSheet.flatten(style) || {},\n        _ref$backgroundColor = _ref.backgroundColor,\n        backgroundColor = _ref$backgroundColor === void 0 ? colors.primary : _ref$backgroundColor;\n      return React.createElement(View, {\n        style: [{\n          width: size,\n          height: size,\n          borderRadius: size / 2,\n          backgroundColor: backgroundColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        }\n      }, React.createElement(Image, {\n        source: source,\n        style: {\n          width: size,\n          height: size,\n          borderRadius: size / 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        }\n      }));\n    }\n  }]);\n  return AvatarImage;\n}(React.Component);\nAvatarImage.displayName = 'Avatar.Image';\nAvatarImage.defaultProps = {\n  size: defaultSize\n};\nexport default withTheme(AvatarImage);","map":{"version":3,"names":["React","Image","StyleSheet","View","withTheme","defaultSize","AvatarImage","_this$props","props","_this$props$size","size","source","style","theme","colors","_ref","flatten","_ref$backgroundColor","backgroundColor","primary","createElement","width","height","borderRadius","__source","fileName","_jsxFileName","lineNumber","Component","displayName","defaultProps"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Avatar/AvatarImage.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  ImageSourcePropType,\n} from 'react-native';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\nconst defaultSize = 64;\n\ntype Props = {\n  /**\n   * Image to display for the `Avatar`.\n   */\n  source: ImageSourcePropType;\n  /**\n   * Size of the avatar.\n   */\n  size?: number;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Avatars can be used to represent people in a graphical way.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/avatar-image.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Avatar } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Avatar.Image size={24} source={require('../assets/avatar.png')} />\n * );\n * ```\n */\nclass AvatarImage extends React.Component<Props> {\n  static displayName = 'Avatar.Image';\n\n  static defaultProps = {\n    size: defaultSize,\n  };\n\n  render() {\n    const { size = defaultSize, source, style, theme } = this.props;\n    const { colors } = theme;\n\n    const { backgroundColor = colors.primary } =\n      StyleSheet.flatten(style) || {};\n\n    return (\n      <View\n        style={[\n          {\n            width: size,\n            height: size,\n            borderRadius: size / 2,\n            backgroundColor,\n          },\n          style,\n        ]}\n      >\n        <Image\n          source={source}\n          style={{ width: size, height: size, borderRadius: size / 2 }}\n        />\n      </View>\n    );\n  }\n}\n\nexport default withTheme(AvatarImage);\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,KAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAQA,SAASC,SAAT;AAGA,IAAMC,WAAW,GAAG,EAApB;IAqCMC,W;;;;;;;;6BAOK;MAAA,IAAAC,WAAA,GAC8C,KAAKC,KADnD;QAAAC,gBAAA,GAAAF,WAAA,CACCG,IADD;QACCA,IADD,GAAAD,gBAAA,cACQJ,WADR,GAAAI,gBAAA;QACqBE,MADrB,GAAAJ,WAAA,CACqBI,MADrB;QAC6BC,KAD7B,GAAAL,WAAA,CAC6BK,KAD7B;QACoCC,KADpC,GAAAN,WAAA,CACoCM,KADpC;MAAA,IAECC,MAFD,GAEYD,KAFZ,CAECC,MAFD;MAAA,IAAAC,IAAA,GAKLb,UAAU,CAACc,OAAX,CAAmBJ,KAAnB,KAA6B,EALxB;QAAAK,oBAAA,GAAAF,IAAA,CAICG,eAJD;QAICA,eAJD,GAAAD,oBAAA,cAImBH,MAAM,CAACK,OAJ1B,GAAAF,oBAAA;MAOP,OACEjB,KAAA,CAAAoB,aAAA,CAACjB,IAAD;QACES,KAAK,EAAE,CACL;UACES,KAAK,EAAEX,IADT;UAEEY,MAAM,EAAEZ,IAFV;UAGEa,YAAY,EAAEb,IAAI,GAAG,CAHvB;UAIEQ,eAAe,EAAfA;QAJF,CADK,EAOLN,KAPK,CADT;QAAAY,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAWE3B,KAAA,CAAAoB,aAAA,CAACnB,KAAD;QACEU,MAAM,EAAEA,MADV;QAEEC,KAAK,EAAE;UAAES,KAAK,EAAEX,IAAT;UAAeY,MAAM,EAAEZ,IAAvB;UAA6Ba,YAAY,EAAEb,IAAI,GAAG;QAAlD,CAFT;QAAAc,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,EAXF,CADF;IAkBD;;;EAhCuB3B,KAAK,CAAC4B,S;AAA1BtB,W,CACGuB,W,GAAc,c;AADjBvB,W,CAGGwB,Y,GAAe;EACpBpB,IAAI,EAAEL;AADc,C;AAgCxB,eAAeD,SAAS,CAACE,WAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}