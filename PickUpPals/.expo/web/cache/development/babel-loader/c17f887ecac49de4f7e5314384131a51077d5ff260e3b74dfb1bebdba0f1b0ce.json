{"ast":null,"code":"export var calculateLabelTopPosition = function calculateLabelTopPosition(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var optionalPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var customHeight = height > 0 ? height : 0;\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\nexport var calculateInputHeight = function calculateInputHeight(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var minHeight = arguments.length > 2 ? arguments[2] : undefined;\n  var finalHeight = height > 0 ? height : labelHeight;\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\nexport var calculatePadding = function calculatePadding(props) {\n  var height = props.height,\n    _props$multiline = props.multiline,\n    multiline = _props$multiline === void 0 ? false : _props$multiline;\n  var result = 0;\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n  return Math.max(0, result);\n};\nvar calculateTextAreaPadding = function calculateTextAreaPadding(props) {\n  var dense = props.dense;\n  return dense ? 10 : 20;\n};\nvar calculateInputPadding = function calculateInputPadding(_ref) {\n  var topPosition = _ref.topPosition,\n    fontSize = _ref.fontSize,\n    multiline = _ref.multiline,\n    scale = _ref.scale,\n    dense = _ref.dense,\n    offset = _ref.offset,\n    isAndroid = _ref.isAndroid;\n  var refFontSize = scale * fontSize;\n  var result = Math.floor(topPosition / 2);\n  result = result + Math.floor((refFontSize - fontSize) / 2) - (scale < 1 ? offset / 2 : 0);\n  if (multiline && isAndroid) result = Math.min(dense ? offset / 2 : offset, result);\n  return result;\n};\nexport var adjustPaddingOut = function adjustPaddingOut(_ref2) {\n  var pad = _ref2.pad,\n    multiline = _ref2.multiline,\n    label = _ref2.label,\n    scale = _ref2.scale,\n    height = _ref2.height,\n    fontSize = _ref2.fontSize,\n    dense = _ref2.dense,\n    offset = _ref2.offset,\n    isAndroid = _ref2.isAndroid;\n  var refFontSize = scale * fontSize;\n  var result = pad;\n  if (height) {\n    return {\n      paddingTop: Math.max(0, (height - fontSize) / 2),\n      paddingBottom: Math.max(0, (height - fontSize) / 2)\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontSize / 2 * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontSize * scale) : Math.min(offset / 2, refFontSize * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return {\n    paddingTop: result,\n    paddingBottom: result\n  };\n};\nexport var adjustPaddingFlat = function adjustPaddingFlat(_ref3) {\n  var pad = _ref3.pad,\n    scale = _ref3.scale,\n    multiline = _ref3.multiline,\n    label = _ref3.label,\n    height = _ref3.height,\n    offset = _ref3.offset,\n    dense = _ref3.dense,\n    fontSize = _ref3.fontSize,\n    isAndroid = _ref3.isAndroid,\n    styles = _ref3.styles;\n  var result = pad;\n  var topResult = result;\n  var bottomResult = result;\n  var paddingTop = styles.paddingTop,\n    paddingBottom = styles.paddingBottom;\n  var refFontSize = scale * fontSize;\n  if (!multiline) {\n    if (label) {\n      return {\n        paddingTop: paddingTop,\n        paddingBottom: paddingBottom\n      };\n    }\n    return {\n      paddingTop: result,\n      paddingBottom: result\n    };\n  }\n  if (label) {\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n    if (!isAndroid) {\n      if (dense) {\n        topResult += scale < 1 ? Math.min(result, refFontSize * scale) - result / 2 : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2)\n      };\n    }\n    if (!isAndroid) {\n      if (dense) {\n        result += scale < 1 ? Math.min(offset / 2, fontSize / 2 * scale) : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result += scale < 1 ? Math.min(offset, fontSize * scale) : Math.min(fontSize, offset / 2 * scale);\n      }\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult)\n  };\n};\nexport var interpolatePlaceholder = function interpolatePlaceholder(labeled, hasActiveOutline) {\n  return labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1]\n  });\n};","map":{"version":3,"names":["calculateLabelTopPosition","labelHeight","height","arguments","length","undefined","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","_props$multiline","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","_ref","topPosition","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","_ref2","pad","label","paddingTop","paddingBottom","adjustPaddingFlat","_ref3","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/TextInput/helpers.tsx"],"sourcesContent":["import { Animated } from 'react-native';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  label?: string | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const refFontSize = scale * fontSize;\n  let result = pad;\n\n  if (height) {\n    return {\n      paddingTop: Math.max(0, (height - fontSize) / 2),\n      paddingBottom: Math.max(0, (height - fontSize) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontSize / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontSize * scale)\n            : Math.min(offset / 2, refFontSize * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}