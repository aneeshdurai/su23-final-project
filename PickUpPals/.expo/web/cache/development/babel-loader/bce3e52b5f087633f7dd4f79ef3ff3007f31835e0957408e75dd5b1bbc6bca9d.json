{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Searchbar.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport color from 'color';\nimport IconButton from \"./IconButton\";\nimport Surface from \"./Surface\";\nimport { withTheme } from \"../core/theming\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nvar Searchbar = function (_React$Component) {\n  _inherits(Searchbar, _React$Component);\n  function Searchbar() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Searchbar);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Searchbar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this._handleClearPress = function () {\n      _this.clear();\n      _this.props.onChangeText && _this.props.onChangeText('');\n    };\n    return _this;\n  }\n  _createClass(Searchbar, [{\n    key: \"setNativeProps\",\n    value: function setNativeProps(args) {\n      return this._root && this._root.setNativeProps(args);\n    }\n  }, {\n    key: \"isFocused\",\n    value: function isFocused() {\n      return this._root && this._root.isFocused();\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      return this._root && this._root.clear();\n    }\n  }, {\n    key: \"focus\",\n    value: function focus() {\n      return this._root && this._root.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      return this._root && this._root.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        placeholder = _this$props.placeholder,\n        onIconPress = _this$props.onIconPress,\n        icon = _this$props.icon,\n        value = _this$props.value,\n        theme = _this$props.theme,\n        style = _this$props.style,\n        customIconColor = _this$props.iconColor,\n        clearIcon = _this$props.clearIcon,\n        inputStyle = _this$props.inputStyle,\n        rest = _objectWithoutProperties(_this$props, [\"placeholder\", \"onIconPress\", \"icon\", \"value\", \"theme\", \"style\", \"iconColor\", \"clearIcon\", \"inputStyle\"]);\n      var colors = theme.colors,\n        roundness = theme.roundness,\n        dark = theme.dark,\n        fonts = theme.fonts;\n      var textColor = colors.text;\n      var font = fonts.regular;\n      var iconColor = customIconColor || (dark ? textColor : color(textColor).alpha(0.54).rgb().string());\n      var rippleColor = color(textColor).alpha(0.32).rgb().string();\n      return React.createElement(Surface, {\n        style: [{\n          borderRadius: roundness,\n          elevation: 4\n        }, styles.container, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        }\n      }, React.createElement(IconButton, {\n        borderless: true,\n        rippleColor: rippleColor,\n        onPress: onIconPress,\n        color: iconColor,\n        icon: icon || function (_ref) {\n          var size = _ref.size,\n            color = _ref.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"magnify\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            }\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      }), React.createElement(TextInput, _extends({\n        style: [styles.input, _objectSpread({\n          color: textColor\n        }, font), inputStyle],\n        placeholder: placeholder || '',\n        placeholderTextColor: colors.placeholder,\n        selectionColor: colors.primary,\n        underlineColorAndroid: \"transparent\",\n        returnKeyType: \"search\",\n        keyboardAppearance: dark ? 'dark' : 'light',\n        accessibilityTraits: \"search\",\n        accessibilityRole: \"search\",\n        ref: function ref(c) {\n          _this2._root = c;\n        },\n        value: value\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        }\n      })), React.createElement(IconButton, {\n        borderless: true,\n        disabled: !value,\n        color: value ? iconColor : 'rgba(255, 255, 255, 0)',\n        rippleColor: rippleColor,\n        onPress: this._handleClearPress,\n        icon: clearIcon || function (_ref2) {\n          var size = _ref2.size,\n            color = _ref2.color;\n          return React.createElement(MaterialCommunityIcon, {\n            name: \"close\",\n            color: color,\n            size: size,\n            direction: I18nManager.isRTL ? 'rtl' : 'ltr',\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 211\n            }\n          });\n        },\n        accessibilityTraits: \"button\",\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        }\n      }));\n    }\n  }]);\n  return Searchbar;\n}(React.Component);\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0\n  }\n});\nexport default withTheme(Searchbar);","map":{"version":3,"names":["React","StyleSheet","TextInput","I18nManager","color","IconButton","Surface","withTheme","MaterialCommunityIcon","Searchbar","_handleClearPress","_this","clear","props","onChangeText","args","_root","setNativeProps","isFocused","focus","blur","_this2","_this$props","placeholder","onIconPress","icon","value","theme","style","customIconColor","iconColor","clearIcon","inputStyle","rest","_objectWithoutProperties","colors","roundness","dark","fonts","textColor","text","font","regular","alpha","rgb","string","rippleColor","createElement","borderRadius","elevation","styles","container","__source","fileName","_jsxFileName","lineNumber","borderless","onPress","_ref","size","name","direction","isRTL","_extends","input","_objectSpread","placeholderTextColor","selectionColor","primary","underlineColorAndroid","returnKeyType","keyboardAppearance","accessibilityTraits","accessibilityRole","ref","c","disabled","_ref2","accessibilityComponentType","Component","create","flexDirection","alignItems","flex","fontSize","paddingLeft","alignSelf","textAlign","minWidth"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Searchbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  StyleProp,\n  TextInput,\n  I18nManager,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport IconButton from './IconButton';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\nimport { IconSource } from './Icon';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\n\ntype Props = React.ComponentProps<typeof TextInput> & {\n  /**\n   * Hint text shown when the input is empty.\n   */\n  placeholder?: string;\n  /**\n   * The value of the text input.\n   */\n  value: string;\n  /**\n   * Icon name for the left icon button (see `onIconPress`).\n   */\n  icon?: IconSource;\n  /**\n   * Callback that is called when the text input's text changes.\n   */\n  onChangeText?: (query: string) => void;\n  /**\n   * Callback to execute if we want the left icon to act as button.\n   */\n  onIconPress?: () => void;\n  /**\n   * Set style of the TextInput component inside the searchbar\n   */\n  inputStyle?: StyleProp<TextStyle>;\n  style?: StyleProp<ViewStyle>;\n\n  /**\n   * @optional\n   */\n  theme: Theme;\n  /**\n   * Custom color for icon, default will be derived from theme\n   */\n  iconColor?: string;\n  /**\n   * Custom icon for clear button, default will be icon close\n   */\n  clearIcon?: IconSource;\n};\n\n/**\n * Searchbar is a simple input box where users can type search queries.\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/searchbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Searchbar } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     firstQuery: '',\n *   };\n *\n *   render() {\n *     const { firstQuery } = this.state;\n *     return (\n *       <Searchbar\n *         placeholder=\"Search\"\n *         onChangeText={query => { this.setState({ firstQuery: query }); }}\n *         value={firstQuery}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Searchbar extends React.Component<Props> {\n  _handleClearPress = () => {\n    this.clear();\n    this.props.onChangeText && this.props.onChangeText('');\n  };\n\n  _root: TextInput | undefined | null;\n\n  /**\n   * @internal\n   */ setNativeProps(args: Object) {\n    return this._root && this._root.setNativeProps(args);\n  }\n\n  /**\n   * Returns `true` if the input is currently focused, `false` otherwise.\n   */\n  isFocused() {\n    return this._root && this._root.isFocused();\n  }\n\n  /**\n   * Removes all text from the TextInput.\n   */\n  clear() {\n    return this._root && this._root.clear();\n  }\n\n  /**\n   * Focuses the input.\n   */\n  focus() {\n    return this._root && this._root.focus();\n  }\n\n  /**\n   * Removes focus from the input.\n   */\n  blur() {\n    return this._root && this._root.blur();\n  }\n\n  render() {\n    const {\n      placeholder,\n      onIconPress,\n      icon,\n      value,\n      theme,\n      style,\n      iconColor: customIconColor,\n      clearIcon,\n      inputStyle,\n      ...rest\n    } = this.props;\n    const { colors, roundness, dark, fonts } = theme;\n    const textColor = colors.text;\n    const font = fonts.regular;\n    const iconColor =\n      customIconColor ||\n      (dark\n        ? textColor\n        : color(textColor)\n            .alpha(0.54)\n            .rgb()\n            .string());\n    const rippleColor = color(textColor)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    return (\n      <Surface\n        style={[\n          { borderRadius: roundness, elevation: 4 },\n          styles.container,\n          style,\n        ]}\n      >\n        <IconButton\n          borderless\n          rippleColor={rippleColor}\n          onPress={onIconPress}\n          color={iconColor}\n          icon={\n            icon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"magnify\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n        />\n        <TextInput\n          style={[styles.input, { color: textColor, ...font }, inputStyle]}\n          placeholder={placeholder || ''}\n          placeholderTextColor={colors.placeholder}\n          selectionColor={colors.primary}\n          underlineColorAndroid=\"transparent\"\n          returnKeyType=\"search\"\n          keyboardAppearance={dark ? 'dark' : 'light'}\n          accessibilityTraits=\"search\"\n          accessibilityRole=\"search\"\n          ref={c => {\n            this._root = c;\n          }}\n          value={value}\n          {...rest}\n        />\n        <IconButton\n          borderless\n          disabled={!value}\n          color={value ? iconColor : 'rgba(255, 255, 255, 0)'}\n          rippleColor={rippleColor}\n          onPress={this._handleClearPress}\n          icon={\n            clearIcon ||\n            (({ size, color }) => (\n              <MaterialCommunityIcon\n                name=\"close\"\n                color={color}\n                size={size}\n                direction={I18nManager.isRTL ? 'rtl' : 'ltr'}\n              />\n            ))\n          }\n          accessibilityTraits=\"button\"\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n        />\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  input: {\n    flex: 1,\n    fontSize: 18,\n    paddingLeft: 8,\n    alignSelf: 'stretch',\n    textAlign: I18nManager.isRTL ? 'right' : 'left',\n    minWidth: 0,\n  },\n});\n\nexport default withTheme(Searchbar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}