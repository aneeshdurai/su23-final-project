{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport BackButton from \"./components/BackButton\";\nimport { theme } from \"./core/theme\";\nimport Toast from \"./components/Toast\";\nimport firebase from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { string } from \"prop-types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var auth = getAuth();\n  function newAccount(username, password) {\n    if (loading) return;\n    setLoading(true);\n    createUserWithEmailAndPassword(auth, username, password).then(function (userCredential) {\n      updateProfile(userCredential.user, {\n        displayName: name.value\n      });\n      var user = userCredential.user;\n      navigation.navigate('DashBoard');\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      setError(errorMessage);\n      setLoading(false);\n    });\n  }\n  return _jsxs(Background, {\n    children: [_jsx(Text, {\n      style: styles.bigText,\n      children: \"Sign Up / Log In\"\n    }), _jsx(Text, {\n      style: styles.subText,\n      children: \"To access all games!\"\n    }), _jsx(Logo, {}), _jsx(Header, {\n      children: \" Create your account \"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true,\n      autoCapitalize: \"none\"\n    }), _jsx(Button, {\n      loading: loading,\n      mode: \"contained\",\n      onPress: function onPress() {\n        return newAccount(email.value, password.value);\n      },\n      style: styles.button,\n      children: \"Register\"\n    }), _jsx(View, {\n      style: styles.row,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"LoginScreen\");\n        }\n      })\n    }), _jsx(Toast, {\n      message: error,\n      onDismiss: function onDismiss() {\n        return setError(\"\");\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  subText: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 10\n  }\n});\nexport default memo(RegisterScreen);","map":{"version":3,"names":["React","memo","useState","View","Text","StyleSheet","TouchableOpacity","Background","Logo","Header","Button","TextInput","BackButton","theme","Toast","firebase","getAuth","createUserWithEmailAndPassword","updateProfile","string","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","_useState9","_useState10","setError","auth","newAccount","username","then","userCredential","user","displayName","navigate","catch","errorCode","code","errorMessage","message","children","style","styles","bigText","subText","label","returnKeyType","onChangeText","text","errorText","autoCapitalize","autoCompleteType","textContentType","keyboardType","secureTextEntry","mode","onPress","button","row","onDismiss","create","color","colors","secondary","marginTop","flexDirection","link","fontWeight","primary","fontSize","textAlign"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/RegisterScreen.js"],"sourcesContent":["import React, { memo, useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport BackButton from \"./components/BackButton\";\nimport { theme } from \"./core/theme\";\nimport Toast from \"./components/Toast\";\nimport firebase from \"firebase/app\";\nimport { getAuth, createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport { string } from \"prop-types\";\n\nconst RegisterScreen = ({ navigation }) => {\n  const [name, setName] = useState({ value: \"\", error: \"\" });\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const auth = getAuth();\n\n  function newAccount(username, password) {\n    if (loading) return;\n\n    setLoading(true);\n    createUserWithEmailAndPassword(auth, username, password).then((userCredential) => {\n      // Signed in\n      updateProfile(userCredential.user, { displayName: name.value });\n      const user = userCredential.user;\n      navigation.navigate('DashBoard');\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      setError(errorMessage);\n      setLoading(false);\n    });\n  }\n\n  return (\n    <Background>\n\n      <Text style={styles.bigText}>Sign Up / Log In</Text>\n      <Text style={styles.subText}>To access all games!</Text>\n\n      <Logo />\n\n      <Header> Create your account </Header>\n\n\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        autoCapitalize=\"none\"\n      />\n\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        onPress={() => newAccount(email.value, password.value)}\n        style={styles.button}\n      >\n        Register\n      </Button>\n\n      <View style={styles.row}>\n        <TouchableOpacity onPress={() => navigation.navigate(\"LoginScreen\")}>\n        </TouchableOpacity>\n      </View>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  subText: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 10\n  }\n});\n\nexport default memo(RegisterScreen);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}