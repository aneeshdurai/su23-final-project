{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarContent.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { white } from \"../../styles/colors\";\nvar AppbarContent = function (_React$Component) {\n  _inherits(AppbarContent, _React$Component);\n  function AppbarContent() {\n    _classCallCheck(this, AppbarContent);\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppbarContent).apply(this, arguments));\n  }\n  _createClass(AppbarContent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        _this$props$color = _this$props.color,\n        titleColor = _this$props$color === void 0 ? white : _this$props$color,\n        subtitle = _this$props.subtitle,\n        subtitleStyle = _this$props.subtitleStyle,\n        onPress = _this$props.onPress,\n        style = _this$props.style,\n        titleStyle = _this$props.titleStyle,\n        theme = _this$props.theme,\n        title = _this$props.title,\n        rest = _objectWithoutProperties(_this$props, [\"color\", \"subtitle\", \"subtitleStyle\", \"onPress\", \"style\", \"titleStyle\", \"theme\", \"title\"]);\n      var fonts = theme.fonts;\n      var subtitleColor = color(titleColor).alpha(0.7).rgb().string();\n      return React.createElement(TouchableWithoutFeedback, {\n        onPress: onPress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }), React.createElement(Text, {\n        style: [_objectSpread({\n          color: titleColor\n        }, Platform.OS === 'ios' ? fonts.regular : fonts.medium), styles.title, titleStyle],\n        numberOfLines: 1,\n        accessibilityTraits: \"header\",\n        accessibilityRole: Platform.OS === 'web' ? 'heading' : 'header',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, title), subtitle ? React.createElement(Text, {\n        style: [styles.subtitle, {\n          color: subtitleColor\n        }, subtitleStyle],\n        numberOfLines: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, subtitle) : null));\n    }\n  }]);\n  return AppbarContent;\n}(React.Component);\nAppbarContent.displayName = 'Appbar.Content';\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14\n  }\n});\nexport default withTheme(AppbarContent);\nexport { AppbarContent };","map":{"version":3,"names":["React","Platform","StyleSheet","TouchableWithoutFeedback","View","color","Text","withTheme","white","AppbarContent","_this$props","props","_this$props$color","titleColor","subtitle","subtitleStyle","onPress","style","titleStyle","theme","title","rest","_objectWithoutProperties","fonts","subtitleColor","alpha","rgb","string","createElement","__source","fileName","_jsxFileName","lineNumber","_extends","styles","container","_objectSpread","OS","regular","medium","numberOfLines","accessibilityTraits","accessibilityRole","Component","displayName","create","flex","paddingHorizontal","fontSize"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Appbar/AppbarContent.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Platform,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport color from 'color';\n\nimport Text from '../Typography/Text';\n\nimport { withTheme } from '../../core/theming';\nimport { white } from '../../styles/colors';\n\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof View> & {\n  /**\n   * Custom color for the text.\n   */\n  color?: string;\n  /**\n   * Text for the title.\n   */\n  title: React.ReactNode;\n  /**\n   * Style for the title.\n   */\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * Text for the subtitle.\n   */\n  subtitle?: React.ReactNode;\n  /**\n   * Style for the subtitle.\n   */\n  subtitleStyle?: StyleProp<TextStyle>;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to display a title and optional subtitle in a appbar.\n */\nclass AppbarContent extends React.Component<Props> {\n  static displayName = 'Appbar.Content';\n\n  render() {\n    const {\n      color: titleColor = white,\n      subtitle,\n      subtitleStyle,\n      onPress,\n      style,\n      titleStyle,\n      theme,\n      title,\n      ...rest\n    } = this.props;\n    const { fonts } = theme;\n\n    const subtitleColor = color(titleColor)\n      .alpha(0.7)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableWithoutFeedback onPress={onPress}>\n        <View style={[styles.container, style]} {...rest}>\n          <Text\n            style={[\n              {\n                color: titleColor,\n                ...(Platform.OS === 'ios' ? fonts.regular : fonts.medium),\n              },\n              styles.title,\n              titleStyle,\n            ]}\n            numberOfLines={1}\n            accessibilityTraits=\"header\"\n            // @ts-ignore\n            accessibilityRole={Platform.OS === 'web' ? 'heading' : 'header'}\n          >\n            {title}\n          </Text>\n          {subtitle ? (\n            <Text\n              style={[styles.subtitle, { color: subtitleColor }, subtitleStyle]}\n              numberOfLines={1}\n            >\n              {subtitle}\n            </Text>\n          ) : null}\n        </View>\n      </TouchableWithoutFeedback>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingHorizontal: 12,\n  },\n  title: {\n    fontSize: Platform.OS === 'ios' ? 17 : 20,\n  },\n  subtitle: {\n    fontSize: Platform.OS === 'ios' ? 11 : 14,\n  },\n});\n\nexport default withTheme(AppbarContent);\n\n// @component-docs ignore-next-line\nexport { AppbarContent };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}