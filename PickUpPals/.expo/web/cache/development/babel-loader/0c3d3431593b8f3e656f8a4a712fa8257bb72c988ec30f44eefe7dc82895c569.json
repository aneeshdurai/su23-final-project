{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Checkbox.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport CheckboxAndroid from \"./CheckboxAndroid\";\nimport CheckboxIOS from \"./CheckboxIOS\";\nimport { withTheme } from \"../core/theming\";\nvar Checkbox = function (_React$Component) {\n  _inherits(Checkbox, _React$Component);\n  function Checkbox() {\n    _classCallCheck(this, Checkbox);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Checkbox).apply(this, arguments));\n  }\n  _createClass(Checkbox, [{\n    key: \"render\",\n    value: function render() {\n      return Platform.OS === 'ios' ? React.createElement(CheckboxIOS, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        }\n      })) : React.createElement(CheckboxAndroid, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        }\n      }));\n    }\n  }]);\n  return Checkbox;\n}(React.Component);\nCheckbox.Android = CheckboxAndroid;\nCheckbox.IOS = CheckboxIOS;\nexport default withTheme(Checkbox);","map":{"version":3,"names":["React","Platform","CheckboxAndroid","CheckboxIOS","withTheme","Checkbox","OS","createElement","_extends","props","__source","fileName","_jsxFileName","lineNumber","Component","Android","IOS"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Checkbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport CheckboxAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  CheckboxAndroid as _CheckboxAndroid,\n} from './CheckboxAndroid';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport CheckboxIOS, { CheckboxIOS as _CheckboxIOS } from './CheckboxIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Status of checkbox.\n   */\n  status: 'checked' | 'unchecked' | 'indeterminate';\n  /**\n   * Whether checkbox is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked checkbox.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for checkbox.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Checkboxes allow the selection of multiple options from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/checkbox-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Checkbox } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: false,\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *     return (\n *       <Checkbox\n *         status={checked ? 'checked' : 'unchecked'}\n *         onPress={() => { this.setState({ checked: !checked }); }}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass Checkbox extends React.Component<Props> {\n  // @component ./CheckboxAndroid.tsx\n  static Android = CheckboxAndroid;\n\n  // @component ./CheckboxIOS.tsx\n  static IOS = CheckboxIOS;\n\n  render() {\n    return Platform.OS === 'ios' ? (\n      <CheckboxIOS {...this.props} />\n    ) : (\n      <CheckboxAndroid {...this.props} />\n    );\n  }\n}\n\nexport default withTheme(Checkbox);\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,QAAA;AACA,OAAOC,eAAP;AAKA,OAAOC,WAAP;AACA,SAASC,SAAT;IA0EMC,Q;;;;;;;;6BAOK;MACP,OAAOJ,QAAQ,CAACK,EAAT,KAAgB,KAAhB,GACLN,KAAA,CAAAO,aAAA,CAACJ,WAAD,EAAAK,QAAA,KAAiB,KAAKC,KAAtB;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GADK,GAGLb,KAAA,CAAAO,aAAA,CAACL,eAAD,EAAAM,QAAA,KAAqB,KAAKC,KAA1B;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAHF;IAKD;;;EAboBb,KAAK,CAACc,S;AAAvBT,Q,CAEGU,O,GAAUb,e;AAFbG,Q,CAKGW,G,GAAMb,W;AAWf,eAAeC,SAAS,CAACC,QAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}