{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Menu/MenuItem.tsx\";\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { withTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/colors\";\nvar MenuItem = function (_React$Component) {\n  _inherits(MenuItem, _React$Component);\n  function MenuItem() {\n    _classCallCheck(this, MenuItem);\n    return _possibleConstructorReturn(this, _getPrototypeOf(MenuItem).apply(this, arguments));\n  }\n  _createClass(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        icon = _this$props.icon,\n        title = _this$props.title,\n        disabled = _this$props.disabled,\n        onPress = _this$props.onPress,\n        theme = _this$props.theme,\n        style = _this$props.style;\n      var disabledColor = color(theme.dark ? white : black).alpha(0.32).rgb().string();\n      var titleColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.87).rgb().string();\n      var iconColor = disabled ? disabledColor : color(theme.colors.text).alpha(0.54).rgb().string();\n      return React.createElement(TouchableRipple, {\n        style: [styles.container, style],\n        onPress: onPress,\n        disabled: disabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(View, {\n        style: styles.row,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, icon ? React.createElement(View, {\n        style: [styles.item, styles.icon],\n        pointerEvents: \"box-none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        }\n      }, React.createElement(Icon, {\n        source: icon,\n        size: 24,\n        color: iconColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      })) : null, React.createElement(View, {\n        style: [styles.item, styles.content, icon ? styles.widthWithIcon : null],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.title, {\n          color: titleColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, title))));\n    }\n  }]);\n  return MenuItem;\n}(React.Component);\nMenuItem.displayName = 'Menu.Item';\nvar minWidth = 112;\nvar maxWidth = 280;\nvar iconWidth = 40;\nvar styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    minWidth: minWidth,\n    maxWidth: maxWidth\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  icon: {\n    width: iconWidth\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    margin: 8\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48)\n  }\n});\nexport default withTheme(MenuItem);\nexport { MenuItem };","map":{"version":3,"names":["color","React","View","StyleSheet","Icon","TouchableRipple","Text","withTheme","black","white","MenuItem","_this$props","props","icon","title","disabled","onPress","theme","style","disabledColor","dark","alpha","rgb","string","titleColor","colors","text","iconColor","createElement","styles","container","__source","fileName","_jsxFileName","lineNumber","row","item","pointerEvents","source","size","content","widthWithIcon","numberOfLines","Component","displayName","minWidth","maxWidth","iconWidth","create","padding","flexDirection","width","fontSize","margin","justifyContent"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Menu/MenuItem.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport Text from '../Typography/Text';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport { Theme } from '../../types';\n\ntype Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * Icon to display for the `MenuItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: any;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n */\n\nclass MenuItem extends React.Component<Props> {\n  static displayName = 'Menu.Item';\n\n  render() {\n    const { icon, title, disabled, onPress, theme, style } = this.props;\n\n    const disabledColor = color(theme.dark ? white : black)\n      .alpha(0.32)\n      .rgb()\n      .string();\n\n    const titleColor = disabled\n      ? disabledColor\n      : color(theme.colors.text)\n          .alpha(0.87)\n          .rgb()\n          .string();\n\n    const iconColor = disabled\n      ? disabledColor\n      : color(theme.colors.text)\n          .alpha(0.54)\n          .rgb()\n          .string();\n\n    return (\n      <TouchableRipple\n        style={[styles.container, style]}\n        onPress={onPress}\n        disabled={disabled}\n      >\n        <View style={styles.row}>\n          {icon ? (\n            <View style={[styles.item, styles.icon]} pointerEvents=\"box-none\">\n              <Icon source={icon} size={24} color={iconColor} />\n            </View>\n          ) : null}\n          <View\n            style={[\n              styles.item,\n              styles.content,\n              icon ? styles.widthWithIcon : null,\n            ]}\n            pointerEvents=\"none\"\n          >\n            <Text\n              numberOfLines={1}\n              style={[styles.title, { color: titleColor }]}\n            >\n              {title}\n            </Text>\n          </View>\n        </View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst minWidth = 112;\nconst maxWidth = 280;\nconst iconWidth = 40;\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 8,\n    minWidth,\n    maxWidth,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  icon: {\n    width: iconWidth,\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    margin: 8,\n  },\n  content: {\n    justifyContent: 'center',\n    minWidth: minWidth - 16,\n    maxWidth: maxWidth - 16,\n  },\n  widthWithIcon: {\n    maxWidth: maxWidth - (iconWidth + 48),\n  },\n});\n\nexport default withTheme(MenuItem);\n\n// @component-docs ignore-next-line\nexport { MenuItem };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}