{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ProgressBar.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport setColor from 'color';\nimport { withTheme } from \"../core/theming\";\nvar INDETERMINATE_DURATION = 2000;\nvar INDETERMINATE_MAX_WIDTH = 0.6;\nvar ProgressBar = function (_React$Component) {\n  _inherits(ProgressBar, _React$Component);\n  function ProgressBar() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, ProgressBar);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProgressBar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      width: 0,\n      timer: new Animated.Value(0),\n      fade: new Animated.Value(0)\n    };\n    _this.indeterminateAnimation = null;\n    _this._onLayout = function (event) {\n      var visible = _this.props.visible;\n      var previousWidth = _this.state.width;\n      _this.setState({\n        width: event.nativeEvent.layout.width\n      }, function () {\n        if (visible && previousWidth === 0) {\n          _this._startAnimation();\n        }\n      });\n    };\n    return _this;\n  }\n  _createClass(ProgressBar, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$props = this.props,\n        visible = _this$props.visible,\n        progress = _this$props.progress;\n      if (progress !== prevProps.progress || visible !== prevProps.visible) {\n        if (visible) {\n          this._startAnimation();\n        } else {\n          this._stopAnimation();\n        }\n      }\n    }\n  }, {\n    key: \"_startAnimation\",\n    value: function _startAnimation() {\n      var _this$props2 = this.props,\n        indeterminate = _this$props2.indeterminate,\n        progress = _this$props2.progress;\n      var _this$state = this.state,\n        fade = _this$state.fade,\n        timer = _this$state.timer;\n      Animated.timing(fade, {\n        duration: 200,\n        toValue: 1,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n      if (indeterminate) {\n        if (!this.indeterminateAnimation) {\n          this.indeterminateAnimation = Animated.timing(timer, {\n            duration: INDETERMINATE_DURATION,\n            toValue: 1,\n            useNativeDriver: Platform.OS !== 'web',\n            isInteraction: false\n          });\n        }\n        timer.setValue(0);\n        Animated.loop(this.indeterminateAnimation).start();\n      } else {\n        Animated.timing(timer, {\n          duration: 200,\n          toValue: progress ? progress : 0,\n          useNativeDriver: true,\n          isInteraction: false\n        }).start();\n      }\n    }\n  }, {\n    key: \"_stopAnimation\",\n    value: function _stopAnimation() {\n      var fade = this.state.fade;\n      if (this.indeterminateAnimation) {\n        this.indeterminateAnimation.stop();\n      }\n      Animated.timing(fade, {\n        duration: 200,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n        color = _this$props3.color,\n        indeterminate = _this$props3.indeterminate,\n        style = _this$props3.style,\n        theme = _this$props3.theme;\n      var _this$state2 = this.state,\n        fade = _this$state2.fade,\n        timer = _this$state2.timer,\n        width = _this$state2.width;\n      var tintColor = color || theme.colors.primary;\n      var trackTintColor = setColor(tintColor).alpha(0.38).rgb().string();\n      return React.createElement(View, {\n        onLayout: this._onLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.container, {\n          backgroundColor: trackTintColor,\n          opacity: fade\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.progressBar, {\n          backgroundColor: tintColor,\n          width: width,\n          transform: [{\n            translateX: timer.interpolate(indeterminate ? {\n              inputRange: [0, 0.5, 1],\n              outputRange: [-0.5 * width, -0.5 * INDETERMINATE_MAX_WIDTH * width, 0.7 * width]\n            } : {\n              inputRange: [0, 1],\n              outputRange: [-0.5 * width, 0]\n            })\n          }, {\n            scaleX: timer.interpolate(indeterminate ? {\n              inputRange: [0, 0.5, 1],\n              outputRange: [0.0001, INDETERMINATE_MAX_WIDTH, 0.0001]\n            } : {\n              inputRange: [0, 1],\n              outputRange: [0.0001, 1]\n            })\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        }\n      })));\n    }\n  }]);\n  return ProgressBar;\n}(React.Component);\nProgressBar.defaultProps = {\n  visible: true,\n  progress: 0\n};\nvar styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden'\n  },\n  progressBar: {\n    flex: 1\n  }\n});\nexport default withTheme(ProgressBar);","map":{"version":3,"names":["React","Animated","Platform","StyleSheet","View","setColor","withTheme","INDETERMINATE_DURATION","INDETERMINATE_MAX_WIDTH","ProgressBar","state","width","timer","Value","fade","indeterminateAnimation","_onLayout","event","visible","_this","props","previousWidth","setState","nativeEvent","layout","_startAnimation","prevProps","_this$props","progress","_stopAnimation","_this$props2","indeterminate","_this$state","timing","duration","toValue","useNativeDriver","isInteraction","start","OS","setValue","loop","stop","_this$props3","color","style","theme","_this$state2","tintColor","colors","primary","trackTintColor","alpha","rgb","string","createElement","onLayout","__source","fileName","_jsxFileName","lineNumber","styles","container","backgroundColor","opacity","progressBar","transform","translateX","interpolate","inputRange","outputRange","scaleX","Component","defaultProps","create","height","overflow","flex"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/ProgressBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Platform,\n  StyleSheet,\n  View,\n  ViewStyle,\n  StyleProp,\n  LayoutChangeEvent,\n} from 'react-native';\nimport setColor from 'color';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Progress value (between 0 and 1).\n   */\n  progress?: number;\n  /**\n   * Color of the progress bar. The background color will be calculated based on this but you can change it by passing `backgroundColor` to `style` prop.\n   */\n  color?: string;\n  /**\n   * If the progress bar will show indeterminate progress.\n   */\n  indeterminate?: boolean;\n  /**\n   * Whether to show the ProgressBar (true, the default) or hide it (false).\n   */\n  visible?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  width: number;\n  fade: Animated.Value;\n  timer: Animated.Value;\n};\n\nconst INDETERMINATE_DURATION = 2000;\nconst INDETERMINATE_MAX_WIDTH = 0.6;\n\n/**\n * Progress bar is an indicator used to present progress of some activity in the app.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/progress-bar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ProgressBar, Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ProgressBar progress={0.5} color={Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass ProgressBar extends React.Component<Props, State> {\n  static defaultProps = {\n    visible: true,\n    progress: 0,\n  };\n\n  state = {\n    width: 0,\n    timer: new Animated.Value(0),\n    fade: new Animated.Value(0),\n  };\n\n  indeterminateAnimation: Animated.CompositeAnimation | null = null;\n\n  componentDidUpdate(prevProps: Props) {\n    const { visible, progress } = this.props;\n\n    if (progress !== prevProps.progress || visible !== prevProps.visible) {\n      if (visible) {\n        this._startAnimation();\n      } else {\n        this._stopAnimation();\n      }\n    }\n  }\n\n  _onLayout = (event: LayoutChangeEvent) => {\n    const { visible } = this.props;\n    const { width: previousWidth } = this.state;\n\n    this.setState({ width: event.nativeEvent.layout.width }, () => {\n      // Start animation the very first time when previously the width was unclear\n      if (visible && previousWidth === 0) {\n        this._startAnimation();\n      }\n    });\n  };\n\n  _startAnimation() {\n    const { indeterminate, progress } = this.props;\n    const { fade, timer } = this.state;\n\n    // Show progress bar\n    Animated.timing(fade, {\n      duration: 200,\n      toValue: 1,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n\n    // Animate progress bar\n    if (indeterminate) {\n      if (!this.indeterminateAnimation) {\n        this.indeterminateAnimation = Animated.timing(timer, {\n          duration: INDETERMINATE_DURATION,\n          toValue: 1,\n          // Animated.loop does not work if useNativeDriver is true on web\n          useNativeDriver: Platform.OS !== 'web',\n          isInteraction: false,\n        });\n      }\n\n      // Reset timer to the beginning\n      timer.setValue(0);\n\n      Animated.loop(this.indeterminateAnimation).start();\n    } else {\n      Animated.timing(timer, {\n        duration: 200,\n        toValue: progress ? progress : 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start();\n    }\n  }\n\n  _stopAnimation() {\n    const { fade } = this.state;\n\n    // Stop indeterminate animation\n    if (this.indeterminateAnimation) {\n      this.indeterminateAnimation.stop();\n    }\n\n    Animated.timing(fade, {\n      duration: 200,\n      toValue: 0,\n      useNativeDriver: true,\n      isInteraction: false,\n    }).start();\n  }\n\n  render() {\n    const { color, indeterminate, style, theme } = this.props;\n    const { fade, timer, width } = this.state;\n    const tintColor = color || theme.colors.primary;\n    const trackTintColor = setColor(tintColor)\n      .alpha(0.38)\n      .rgb()\n      .string();\n\n    return (\n      <View onLayout={this._onLayout}>\n        <Animated.View\n          style={[\n            styles.container,\n            { backgroundColor: trackTintColor, opacity: fade },\n            style,\n          ]}\n        >\n          <Animated.View\n            style={[\n              styles.progressBar,\n              {\n                backgroundColor: tintColor,\n                width,\n                transform: [\n                  {\n                    translateX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              -0.5 * width,\n                              -0.5 * INDETERMINATE_MAX_WIDTH * width,\n                              0.7 * width,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [-0.5 * width, 0],\n                          }\n                    ),\n                  },\n                  {\n                    // Workaround for workaround for https://github.com/facebook/react-native/issues/6278\n                    scaleX: timer.interpolate(\n                      indeterminate\n                        ? {\n                            inputRange: [0, 0.5, 1],\n                            outputRange: [\n                              0.0001,\n                              INDETERMINATE_MAX_WIDTH,\n                              0.0001,\n                            ],\n                          }\n                        : {\n                            inputRange: [0, 1],\n                            outputRange: [0.0001, 1],\n                          }\n                    ),\n                  },\n                ],\n              },\n            ]}\n          />\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 4,\n    overflow: 'hidden',\n  },\n\n  progressBar: {\n    flex: 1,\n  },\n});\n\nexport default withTheme(ProgressBar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}