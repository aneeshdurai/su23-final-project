{"ast":null,"code":"import React, { memo } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { TextInput as Input, HelperText } from \"react-native-paper\";\nimport { theme } from \"../core/theme\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar timeOptions = [\"12:00 AM PST\", \"01:00 AM PST\", \"02:00 AM PST\", \"03:00 AM PST\", \"04:00 AM PST\", \"05:00 AM PST\", \"06:00 AM PST\", \"07:00 AM PST\", \"08:00 AM PST\", \"09:00 AM PST\", \"10:00 AM PST\", \"11:00 AM PST\", \"12:00 PM PST\", \"01:00 PM PST\", \"02:00 PM PST\", \"03:00 PM PST\", \"04:00 PM PST\", \"05:00 PM PST\", \"06:00 PM PST\", \"07:00 PM PST\", \"08:00 PM PST\", \"09:00 PM PST\", \"10:00 PM PST\", \"11:00 PM PST\"];\nvar TextDropdown = function TextDropdown(_ref) {\n  var label = _ref.label,\n    value = _ref.value,\n    onChangeText = _ref.onChangeText,\n    error = _ref.error,\n    errorText = _ref.errorText;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Picker, {\n      selectedValue: value,\n      onValueChange: function onValueChange(itemValue) {\n        return onChangeText(itemValue);\n      },\n      children: timeOptions.map(function (time, index) {\n        return _jsx(Picker.Item, {\n          label: time,\n          value: time\n        }, index);\n      })\n    }), error ? _jsx(HelperText, {\n      type: \"error\",\n      children: errorText\n    }) : null]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginVertical: 12\n  }\n});\nexport default memo(TextDropdown);","map":{"version":3,"names":["React","memo","View","StyleSheet","Text","TextInput","Input","HelperText","theme","Picker","jsx","_jsx","jsxs","_jsxs","timeOptions","TextDropdown","_ref","label","value","onChangeText","error","errorText","style","styles","container","children","selectedValue","onValueChange","itemValue","map","time","index","Item","type","create","width","marginVertical"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/components/TextDropdown.js"],"sourcesContent":["import React, { memo } from \"react\";\nimport { View, StyleSheet, Text } from \"react-native\";\nimport { TextInput as Input, HelperText } from \"react-native-paper\";\nimport { theme } from \"../core/theme\";\nimport { Picker } from \"@react-native-picker/picker\";\n\nconst timeOptions = [\n  \"12:00 AM PST\",\n  \"01:00 AM PST\",\n  \"02:00 AM PST\",\n  \"03:00 AM PST\",\n  \"04:00 AM PST\",\n  \"05:00 AM PST\",\n  \"06:00 AM PST\",\n  \"07:00 AM PST\",\n  \"08:00 AM PST\",\n  \"09:00 AM PST\",\n  \"10:00 AM PST\",\n  \"11:00 AM PST\",\n  \"12:00 PM PST\",\n  \"01:00 PM PST\",\n  \"02:00 PM PST\",\n  \"03:00 PM PST\",\n  \"04:00 PM PST\",\n  \"05:00 PM PST\",\n  \"06:00 PM PST\",\n  \"07:00 PM PST\",\n  \"08:00 PM PST\",\n  \"09:00 PM PST\",\n  \"10:00 PM PST\",\n  \"11:00 PM PST\",\n  // Add more time options as needed\n];\n\nconst TextDropdown = ({ label, value, onChangeText, error, errorText }) => (\n  <View style={styles.container}>\n    <Picker\n      selectedValue={value}\n      onValueChange={(itemValue) => onChangeText(itemValue)}\n    >\n      {timeOptions.map((time, index) => (\n        <Picker.Item key={index} label={time} value={time} />\n      ))}\n    </Picker>\n    {error ? <HelperText type=\"error\">{errorText}</HelperText> : null}\n  </View>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    marginVertical: 12,\n  },\n});\n\nexport default memo(TextDropdown);"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAEpC,SAASC,SAAS,IAAIC,KAAK,EAAEC,UAAU,QAAQ,oBAAoB;AACnE,SAASC,KAAK;AACd,SAASC,MAAM,QAAQ,6BAA6B;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErD,IAAMC,WAAW,GAAG,CAClB,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,EACd,cAAc,CAEf;AAED,IAAMC,YAAY,GAAG,SAAfA,YAAYA,CAAAC,IAAA;EAAA,IAAMC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAEC,YAAY,GAAAH,IAAA,CAAZG,YAAY;IAAEC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IAAEC,SAAS,GAAAL,IAAA,CAATK,SAAS;EAAA,OAClER,KAAA,CAACX,IAAI;IAACoB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC5Bd,IAAA,CAACF,MAAM;MACLiB,aAAa,EAAER,KAAM;MACrBS,aAAa,EAAE,SAAAA,cAACC,SAAS;QAAA,OAAKT,YAAY,CAACS,SAAS,CAAC;MAAA,CAAC;MAAAH,QAAA,EAErDX,WAAW,CAACe,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK;QAAA,OAC3BpB,IAAA,CAACF,MAAM,CAACuB,IAAI;UAAaf,KAAK,EAAEa,IAAK;UAACZ,KAAK,EAAEY;QAAK,GAAhCC,KAAK,CAA8B;MAAA,CACtD;IAAC,EACK,EACRX,KAAK,GAAGT,IAAA,CAACJ,UAAU;MAAC0B,IAAI,EAAC,OAAO;MAAAR,QAAA,EAAEJ;IAAS,EAAc,GAAG,IAAI;EAAA,EAC5D;AAAA,CACR;AAED,IAAME,MAAM,GAAGpB,UAAU,CAAC+B,MAAM,CAAC;EAC/BV,SAAS,EAAE;IACTW,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AAEF,eAAenC,IAAI,CAACc,YAAY,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}