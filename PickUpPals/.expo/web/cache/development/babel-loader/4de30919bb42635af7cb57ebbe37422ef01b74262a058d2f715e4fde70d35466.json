{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButtonAndroid.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport TouchableRipple from \"./TouchableRipple\";\nimport { withTheme } from \"../core/theming\";\nvar BORDER_WIDTH = 2;\nvar RadioButtonAndroid = function (_React$Component) {\n  _inherits(RadioButtonAndroid, _React$Component);\n  function RadioButtonAndroid() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, RadioButtonAndroid);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RadioButtonAndroid)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      borderAnim: new Animated.Value(BORDER_WIDTH),\n      radioAnim: new Animated.Value(1)\n    };\n    return _this;\n  }\n  _createClass(RadioButtonAndroid, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.status === this.props.status) {\n        return;\n      }\n      if (this.props.status === 'checked') {\n        this.state.radioAnim.setValue(1.2);\n        Animated.timing(this.state.radioAnim, {\n          toValue: 1,\n          duration: 150\n        }).start();\n      } else {\n        this.state.borderAnim.setValue(10);\n        Animated.timing(this.state.borderAnim, {\n          toValue: BORDER_WIDTH,\n          duration: 150\n        }).start();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$props = this.props,\n        disabled = _this$props.disabled,\n        onPress = _this$props.onPress,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"disabled\", \"onPress\", \"theme\"]);\n      var checkedColor = this.props.color || theme.colors.accent;\n      var uncheckedColor = this.props.uncheckedColor || color(theme.colors.text).alpha(theme.dark ? 0.7 : 0.54).rgb().string();\n      var rippleColor, radioColor;\n      var checked = this.props.status === 'checked';\n      if (disabled) {\n        rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n        radioColor = theme.colors.disabled;\n      } else {\n        rippleColor = color(checkedColor).fade(0.32).rgb().string();\n        radioColor = checked ? checkedColor : uncheckedColor;\n      }\n      return React.createElement(TouchableRipple, _extends({}, rest, {\n        borderless: true,\n        rippleColor: rippleColor,\n        onPress: disabled ? undefined : function () {\n          onPress && onPress(_this2.props.value);\n        },\n        accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n        accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n        accessibilityRole: \"button\",\n        accessibilityStates: disabled ? ['disabled'] : [],\n        accessibilityLiveRegion: \"polite\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        }\n      }), React.createElement(Animated.View, {\n        style: [styles.radio, {\n          borderColor: radioColor,\n          borderWidth: this.state.borderAnim\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }, checked ? React.createElement(View, {\n        style: [StyleSheet.absoluteFill, styles.radioContainer],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.dot, {\n          backgroundColor: radioColor,\n          transform: [{\n            scale: this.state.radioAnim\n          }]\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      })) : null));\n    }\n  }]);\n  return RadioButtonAndroid;\n}(React.Component);\nRadioButtonAndroid.displayName = 'RadioButton.Android';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5\n  }\n});\nexport default withTheme(RadioButtonAndroid);\nexport { RadioButtonAndroid };","map":{"version":3,"names":["React","Animated","View","StyleSheet","color","TouchableRipple","withTheme","BORDER_WIDTH","RadioButtonAndroid","state","borderAnim","Value","radioAnim","prevProps","status","props","setValue","timing","toValue","duration","start","_this2","_this$props","disabled","onPress","theme","rest","_objectWithoutProperties","checkedColor","colors","accent","uncheckedColor","text","alpha","dark","rgb","string","rippleColor","radioColor","checked","fade","createElement","_extends","borderless","undefined","value","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityLiveRegion","style","styles","container","__source","fileName","_jsxFileName","lineNumber","radio","borderColor","borderWidth","absoluteFill","radioContainer","dot","backgroundColor","transform","scale","Component","displayName","create","borderRadius","alignItems","justifyContent","height","width","margin"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/RadioButtonAndroid.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport color from 'color';\nimport TouchableRipple from './TouchableRipple';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (param?: any) => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  borderAnim: Animated.Value;\n  radioAnim: Animated.Value;\n};\n\nconst BORDER_WIDTH = 2;\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for Android.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass RadioButtonAndroid extends React.Component<Props, State> {\n  static displayName = 'RadioButton.Android';\n\n  state = {\n    borderAnim: new Animated.Value(BORDER_WIDTH),\n    radioAnim: new Animated.Value(1),\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.status === this.props.status) {\n      return;\n    }\n\n    if (this.props.status === 'checked') {\n      this.state.radioAnim.setValue(1.2);\n\n      Animated.timing(this.state.radioAnim, {\n        toValue: 1,\n        duration: 150,\n      }).start();\n    } else {\n      this.state.borderAnim.setValue(10);\n\n      Animated.timing(this.state.borderAnim, {\n        toValue: BORDER_WIDTH,\n        duration: 150,\n      }).start();\n    }\n  }\n\n  render() {\n    const { disabled, onPress, theme, ...rest } = this.props;\n    const checkedColor = this.props.color || theme.colors.accent;\n    const uncheckedColor =\n      this.props.uncheckedColor ||\n      color(theme.colors.text)\n        .alpha(theme.dark ? 0.7 : 0.54)\n        .rgb()\n        .string();\n\n    let rippleColor, radioColor;\n\n    const checked = this.props.status === 'checked';\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text)\n        .alpha(0.16)\n        .rgb()\n        .string();\n      radioColor = theme.colors.disabled;\n    } else {\n      rippleColor = color(checkedColor)\n        .fade(0.32)\n        .rgb()\n        .string();\n      radioColor = checked ? checkedColor : uncheckedColor;\n    }\n\n    return (\n      <TouchableRipple\n        {...rest}\n        borderless\n        rippleColor={rippleColor}\n        onPress={\n          disabled\n            ? undefined\n            : () => {\n                onPress && onPress(this.props.value);\n              }\n        }\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType={\n          checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n        }\n        accessibilityRole=\"button\"\n        accessibilityStates={disabled ? ['disabled'] : []}\n        accessibilityLiveRegion=\"polite\"\n        style={styles.container}\n      >\n        <Animated.View\n          style={[\n            styles.radio,\n            {\n              borderColor: radioColor,\n              borderWidth: this.state.borderAnim,\n            },\n          ]}\n        >\n          {checked ? (\n            <View style={[StyleSheet.absoluteFill, styles.radioContainer]}>\n              <Animated.View\n                style={[\n                  styles.dot,\n                  {\n                    backgroundColor: radioColor,\n                    transform: [{ scale: this.state.radioAnim }],\n                  },\n                ]}\n              />\n            </View>\n          ) : null}\n        </Animated.View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n  },\n  radioContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  radio: {\n    height: 20,\n    width: 20,\n    borderRadius: 10,\n    margin: 8,\n  },\n  dot: {\n    height: 10,\n    width: 10,\n    borderRadius: 5,\n  },\n});\n\nexport default withTheme(RadioButtonAndroid);\n\n// @component-docs ignore-next-line\nexport { RadioButtonAndroid };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}