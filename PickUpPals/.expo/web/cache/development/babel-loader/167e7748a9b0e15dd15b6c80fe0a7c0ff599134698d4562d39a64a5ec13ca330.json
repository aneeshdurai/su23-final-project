{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Appbar/AppbarAction.tsx\";\nimport * as React from 'react';\nimport color from 'color';\nimport { black } from \"../../styles/colors\";\nimport IconButton from \"../IconButton\";\nvar AppbarAction = function (_React$Component) {\n  _inherits(AppbarAction, _React$Component);\n  function AppbarAction() {\n    _classCallCheck(this, AppbarAction);\n    return _possibleConstructorReturn(this, _getPrototypeOf(AppbarAction).apply(this, arguments));\n  }\n  _createClass(AppbarAction, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        _this$props$color = _this$props.color,\n        iconColor = _this$props$color === void 0 ? color(black).alpha(0.54).rgb().string() : _this$props$color,\n        icon = _this$props.icon,\n        disabled = _this$props.disabled,\n        onPress = _this$props.onPress,\n        accessibilityLabel = _this$props.accessibilityLabel,\n        rest = _objectWithoutProperties(_this$props, [\"color\", \"icon\", \"disabled\", \"onPress\", \"accessibilityLabel\"]);\n      return React.createElement(IconButton, _extends({\n        onPress: onPress,\n        color: iconColor,\n        icon: icon,\n        disabled: disabled,\n        accessibilityLabel: accessibilityLabel,\n        animated: true\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }));\n    }\n  }]);\n  return AppbarAction;\n}(React.Component);\nAppbarAction.displayName = 'Appbar.Action';\nAppbarAction.defaultProps = {\n  size: 24\n};\nexport { AppbarAction as default };","map":{"version":3,"names":["React","color","black","IconButton","AppbarAction","_this$props","props","_this$props$color","iconColor","alpha","rgb","string","icon","disabled","onPress","accessibilityLabel","rest","_objectWithoutProperties","createElement","_extends","animated","__source","fileName","_jsxFileName","lineNumber","Component","displayName","defaultProps","size"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Appbar/AppbarAction.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { black } from '../../styles/colors';\nimport IconButton from '../IconButton';\nimport { IconSource } from '../Icon';\n\ntype Props = React.ComponentProps<typeof IconButton> & {\n  /**\n   *  Custom color for action icon.\n   */\n  color?: string;\n  /**\n   * Name of the icon to show.\n   */\n  icon: IconSource;\n  /**\n   * Optional icon size.\n   */\n  size?: number;\n  /**\n   * Whether the button is disabled. A disabled button is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * Accessibility label for the button. This is read by the screen reader when the user taps the button.\n   */\n  accessibilityLabel?: string;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component used to display an action item in the appbar.\n */\nexport default class AppbarAction extends React.Component<Props> {\n  static displayName = 'Appbar.Action';\n\n  static defaultProps = {\n    size: 24,\n  };\n\n  render() {\n    const {\n      color: iconColor = color(black)\n        .alpha(0.54)\n        .rgb()\n        .string(),\n      icon,\n      disabled,\n      onPress,\n      accessibilityLabel,\n      ...rest\n    } = this.props;\n\n    return (\n      <IconButton\n        onPress={onPress}\n        color={iconColor}\n        icon={icon}\n        disabled={disabled}\n        accessibilityLabel={accessibilityLabel}\n        animated\n        {...rest}\n      />\n    );\n  }\n}\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT;AACA,OAAOC,UAAP;IAkCqBC,Y;;;;;;;;6BAOV;MAAA,IAAAC,WAAA,GAWH,KAAKC,KAXF;QAAAC,iBAAA,GAAAF,WAAA,CAELJ,KAFK;QAEEO,SAFF,GAAAD,iBAAA,cAEcN,KAAK,CAACC,KAAD,CAAL,CAChBO,KADgB,CACV,IADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAFd,GAAAJ,iBAAA;QAMLK,IANK,GAAAP,WAAA,CAMLO,IANK;QAOLC,QAPK,GAAAR,WAAA,CAOLQ,QAPK;QAQLC,OARK,GAAAT,WAAA,CAQLS,OARK;QASLC,kBATK,GAAAV,WAAA,CASLU,kBATK;QAUFC,IAVE,GAAAC,wBAAA,CAAAZ,WAAA;MAaP,OACEL,KAAA,CAAAkB,aAAA,CAACf,UAAD,EAAAgB,QAAA;QACEL,OAAO,EAAEA,OADX;QAEEb,KAAK,EAAEO,SAFT;QAGEI,IAAI,EAAEA,IAHR;QAIEC,QAAQ,EAAEA,QAJZ;QAKEE,kBAAkB,EAAEA,kBALtB;QAMEK,QAAQ;MANV,GAOMJ,IAPN;QAAAK,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GADF;IAWD;;;EA/BuCxB,KAAK,CAACyB,S;AAA3BrB,Y,CACZsB,W,GAAc,e;AADFtB,Y,CAGZuB,Y,GAAe;EACpBC,IAAI,EAAE;AADc,C;SAHHxB,Y"},"metadata":{},"sourceType":"module","externalDependencies":[]}