{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButton.tsx\";\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport RadioButtonGroup, { RadioButtonContext } from \"./RadioButtonGroup\";\nimport RadioButtonAndroid from \"./RadioButtonAndroid\";\nimport RadioButtonIOS from \"./RadioButtonIOS\";\nimport { withTheme } from \"../core/theming\";\nvar RadioButton = function (_React$Component) {\n  _inherits(RadioButton, _React$Component);\n  function RadioButton() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, RadioButton);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RadioButton)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.handlePress = function (context) {\n      var onPress = _this.props.onPress;\n      var onValueChange = context ? context.onValueChange : function () {};\n      onPress ? onPress() : onValueChange(_this.props.value);\n    };\n    _this.isChecked = function (context) {\n      return context.value === _this.props.value ? 'checked' : 'unchecked';\n    };\n    return _this;\n  }\n  _createClass(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var Button = Platform.select({\n        default: RadioButtonAndroid,\n        ios: RadioButtonIOS\n      });\n      return React.createElement(RadioButtonContext.Consumer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        }\n      }, function (context) {\n        return React.createElement(Button, _extends({}, _this2.props, {\n          status: _this2.props.status || context && _this2.isChecked(context),\n          onPress: function onPress() {\n            return _this2.handlePress(context);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132\n          }\n        }));\n      });\n    }\n  }]);\n  return RadioButton;\n}(React.Component);\nRadioButton.Group = RadioButtonGroup;\nRadioButton.Android = RadioButtonAndroid;\nRadioButton.IOS = RadioButtonIOS;\nexport default withTheme(RadioButton);","map":{"version":3,"names":["React","Platform","RadioButtonGroup","RadioButtonContext","RadioButtonAndroid","RadioButtonIOS","withTheme","RadioButton","handlePress","context","onPress","_this","props","onValueChange","value","isChecked","_this2","Button","select","default","ios","createElement","Consumer","__source","fileName","_jsxFileName","lineNumber","_extends","status","Component","Group","Android","IOS"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/RadioButton.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform } from 'react-native';\nimport RadioButtonGroup, {\n  RadioButtonContext,\n  RadioButtonContextType,\n} from './RadioButtonGroup';\nimport RadioButtonAndroid, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  RadioButtonAndroid as _RadioButtonAndroid,\n} from './RadioButtonAndroid';\nimport RadioButtonIOS, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  RadioButtonIOS as _RadioButtonIOS,\n} from './RadioButtonIOS';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for unchecked radio.\n   */\n  uncheckedColor?: string;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.android.png\" />\n *     <figcaption>Android (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.android.png\" />\n *     <figcaption>Android (disabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>iOS (enabled)</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>iOS (disabled)</figcaption>\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { RadioButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     checked: 'first',\n *   };\n *\n *   render() {\n *     const { checked } = this.state;\n *\n *     return (\n *       <View>\n *         <RadioButton\n *           value=\"first\"\n *           status={checked === 'first' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'first' }); }}\n *         />\n *         <RadioButton\n *           value=\"second\"\n *           status={checked === 'second' ? 'checked' : 'unchecked'}\n *           onPress={() => { this.setState({ checked: 'second' }); }}\n *         />\n *       </View>\n *     );\n *   }\n * }\n * ```\n */\nclass RadioButton extends React.Component<Props> {\n  // @component ./RadioButtonGroup.tsx\n  static Group = RadioButtonGroup;\n\n  // @component ./RadioButtonAndroid.tsx\n  static Android = RadioButtonAndroid;\n\n  // @component ./RadioButtonIOS.tsx\n  static IOS = RadioButtonIOS;\n\n  handlePress = (context: RadioButtonContextType) => {\n    const { onPress } = this.props;\n    const onValueChange = context ? context.onValueChange : () => {};\n\n    onPress ? onPress() : onValueChange(this.props.value);\n  };\n\n  isChecked = (context: RadioButtonContextType) =>\n    context.value === this.props.value ? 'checked' : 'unchecked';\n\n  render() {\n    const Button = Platform.select({\n      default: RadioButtonAndroid,\n      ios: RadioButtonIOS,\n    });\n\n    return (\n      <RadioButtonContext.Consumer>\n        {context => (\n          <Button\n            {...this.props}\n            status={this.props.status || (context && this.isChecked(context))}\n            onPress={() => this.handlePress(context)}\n          />\n        )}\n      </RadioButtonContext.Consumer>\n    );\n  }\n}\n\nexport default withTheme(RadioButton);\n"],"mappings":";;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,QAAA;AACA,OAAOC,gBAAP,IACEC,kBADF;AAIA,OAAOC,kBAAP;AAIA,OAAOC,cAAP;AAIA,SAASC,SAAT;IAwFMC,W;;;;;;;;;;UAUJC,W,GAAc,UAACC,OAAD,EAAqC;MAAA,IACzCC,OADyC,GAC7BC,KAAA,CAAKC,KADwB,CACzCF,OADyC;MAEjD,IAAMG,aAAa,GAAGJ,OAAO,GAAGA,OAAO,CAACI,aAAX,GAA2B,YAAM,CAAE,CAAhE;MAEAH,OAAO,GAAGA,OAAO,EAAV,GAAeG,aAAa,CAACF,KAAA,CAAKC,KAAL,CAAWE,KAAZ,CAAnC;IACD,C;UAEDC,S,GAAY,UAACN,OAAD;MAAA,OACVA,OAAO,CAACK,KAAR,KAAkBH,KAAA,CAAKC,KAAL,CAAWE,KAA7B,GAAqC,SAArC,GAAiD,WADvC;IAAA,C;;;;;6BAGH;MAAA,IAAAE,MAAA;MACP,IAAMC,MAAM,GAAGhB,QAAQ,CAACiB,MAAT,CAAgB;QAC7BC,OAAO,EAAEf,kBADoB;QAE7BgB,GAAG,EAAEf;MAFwB,CAAhB,CAAf;MAKA,OACEL,KAAA,CAAAqB,aAAA,CAAClB,kBAAD,CAAoBmB,QAApB;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GACG,UAAAjB,OAAO;QAAA,OACNT,KAAA,CAAAqB,aAAA,CAACJ,MAAD,EAAAU,QAAA,KACMX,MAAI,CAACJ,KADX;UAEEgB,MAAM,EAAEZ,MAAI,CAACJ,KAAL,CAAWgB,MAAX,IAAsBnB,OAAO,IAAIO,MAAI,CAACD,SAAL,CAAeN,OAAf,CAF3C;UAGEC,OAAO,EAAE,SAAAA,QAAA;YAAA,OAAMM,MAAI,CAACR,WAAL,CAAiBC,OAAjB,CAAN;UAAA,CAHX;UAAAc,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;UAAA;QAAA,GADM;MAAA,CADV,CADF;IAWD;;;EArCuB1B,KAAK,CAAC6B,S;AAA1BtB,W,CAEGuB,K,GAAQ5B,gB;AAFXK,W,CAKGwB,O,GAAU3B,kB;AALbG,W,CAQGyB,G,GAAM3B,c;AAgCf,eAAeC,SAAS,CAACC,WAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}