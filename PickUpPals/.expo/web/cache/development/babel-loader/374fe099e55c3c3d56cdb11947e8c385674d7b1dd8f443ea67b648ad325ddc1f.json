{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/ToggleButton/ToggleButtonGroup.tsx\";\nimport * as React from 'react';\nexport var ToggleButtonGroupContext = React.createContext(null);\nvar ToggleButtonGroup = function (_React$Component) {\n  _inherits(ToggleButtonGroup, _React$Component);\n  function ToggleButtonGroup() {\n    _classCallCheck(this, ToggleButtonGroup);\n    return _possibleConstructorReturn(this, _getPrototypeOf(ToggleButtonGroup).apply(this, arguments));\n  }\n  _createClass(ToggleButtonGroup, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        value = _this$props.value,\n        onValueChange = _this$props.onValueChange,\n        children = _this$props.children;\n      return React.createElement(ToggleButtonGroupContext.Provider, {\n        value: {\n          value: value,\n          onValueChange: onValueChange\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        }\n      }, children);\n    }\n  }]);\n  return ToggleButtonGroup;\n}(React.Component);\nToggleButtonGroup.displayName = 'ToggleButton.Group';\nexport default ToggleButtonGroup;","map":{"version":3,"names":["React","ToggleButtonGroupContext","createContext","ToggleButtonGroup","_this$props","props","value","onValueChange","children","createElement","Provider","__source","fileName","_jsxFileName","lineNumber","Component","displayName"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/ToggleButton/ToggleButtonGroup.tsx"],"sourcesContent":["import * as React from 'react';\n\ntype Props = {\n  /**\n   * Function to execute on selection change.\n   */\n  onValueChange: (value: string) => void;\n  /**\n   * Value of the currently selected toggle button.\n   */\n  value: string;\n  /**\n   * React elements containing toggle buttons.\n   */\n  children: React.ReactNode;\n};\n\ntype ToggleButtonContextType = {\n  value: string;\n  onValueChange: (item: string) => void;\n};\n\nexport const ToggleButtonGroupContext = React.createContext<\n  ToggleButtonContextType\n>(null as any);\n\n/**\n * Toggle group allows to control a group of toggle buttons.</br>\n * It doesn't change the appearance of the toggle buttons. If you want to group them in a row, checkout <a href=\"/toggle-button-row.html\">`ToggleButton.Row`</a>.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { ToggleButton } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     value: 'left',\n *   };\n *\n *   render() {\n *     return(\n *       <ToggleButton.Group\n *         onValueChange={value => this.setState({ value })}\n *         value={this.state.value}\n *       >\n *           <ToggleButton icon=\"format-align-left\" value=\"left\" />\n *           <ToggleButton icon=\"format-align-right\" value=\"right\" />\n *       </ToggleButton.Group>\n *     )\n *   }\n * }\n *```\n */\nclass ToggleButtonGroup extends React.Component<Props> {\n  static displayName = 'ToggleButton.Group';\n\n  render() {\n    const { value, onValueChange, children } = this.props;\n\n    return (\n      <ToggleButtonGroupContext.Provider\n        value={{\n          value,\n          onValueChange,\n        }}\n      >\n        {children}\n      </ToggleButtonGroupContext.Provider>\n    );\n  }\n}\n\nexport default ToggleButtonGroup;\n"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAsBA,OAAO,IAAMC,wBAAwB,GAAGD,KAAK,CAACE,aAAN,CAEtC,IAFsC,CAAjC;IAiCDC,iB;;;;;;;;6BAGK;MAAA,IAAAC,WAAA,GACoC,KAAKC,KADzC;QACCC,KADD,GAAAF,WAAA,CACCE,KADD;QACQC,aADR,GAAAH,WAAA,CACQG,aADR;QACuBC,QADvB,GAAAJ,WAAA,CACuBI,QADvB;MAGP,OACER,KAAA,CAAAS,aAAA,CAACR,wBAAD,CAA0BS,QAA1B;QACEJ,KAAK,EAAE;UACLA,KAAK,EAALA,KADK;UAELC,aAAa,EAAbA;QAFK,CADT;QAAAI,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAMGN,QANH,CADF;IAUD;;;EAhB6BR,KAAK,CAACe,S;AAAhCZ,iB,CACGa,W,GAAc,oB;AAkBvB,eAAeb,iBAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}