{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Drawer/DrawerSection.tsx\";\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Divider from \"../Divider\";\nimport { withTheme } from \"../../core/theming\";\nvar DrawerSection = function (_React$Component) {\n  _inherits(DrawerSection, _React$Component);\n  function DrawerSection() {\n    _classCallCheck(this, DrawerSection);\n    return _possibleConstructorReturn(this, _getPrototypeOf(DrawerSection).apply(this, arguments));\n  }\n  _createClass(DrawerSection, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        title = _this$props.title,\n        theme = _this$props.theme,\n        style = _this$props.style,\n        rest = _objectWithoutProperties(_this$props, [\"children\", \"title\", \"theme\", \"style\"]);\n      var colors = theme.colors,\n        fonts = theme.fonts;\n      var titleColor = color(colors.text).alpha(0.54).rgb().string();\n      var font = fonts.medium;\n      return React.createElement(View, _extends({\n        style: [styles.container, style]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      }), title && React.createElement(View, {\n        style: styles.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, React.createElement(Text, {\n        numberOfLines: 1,\n        style: _objectSpread({\n          color: titleColor\n        }, font, {\n          marginLeft: 16\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, title)), children, React.createElement(Divider, {\n        style: styles.divider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        }\n      }));\n    }\n  }]);\n  return DrawerSection;\n}(React.Component);\nDrawerSection.displayName = 'Drawer.Section';\nvar styles = StyleSheet.create({\n  container: {\n    marginBottom: 4\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center'\n  },\n  divider: {\n    marginTop: 4\n  }\n});\nexport default withTheme(DrawerSection);","map":{"version":3,"names":["color","React","View","StyleSheet","Text","Divider","withTheme","DrawerSection","_this$props","props","children","title","theme","style","rest","_objectWithoutProperties","colors","fonts","titleColor","text","alpha","rgb","string","font","medium","createElement","_extends","styles","container","__source","fileName","_jsxFileName","lineNumber","titleContainer","numberOfLines","_objectSpread","marginLeft","divider","Component","displayName","create","marginBottom","height","justifyContent","marginTop"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Drawer/DrawerSection.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, ViewStyle, StyleSheet, StyleProp } from 'react-native';\nimport Text from '../Typography/Text';\nimport Divider from '../Divider';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Title to show as the header for the section.\n   */\n  title?: string;\n  /**\n   * Content of the `Drawer.Section`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component to group content inside a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     active: 'first',\n *   };\n *\n *   render() {\n *     const { active } = this.state;\n *\n *     return (\n *       <Drawer.Section title=\"Some title\">\n *         <Drawer.Item\n *           label=\"First Item\"\n *           active={active === 'first'}\n *           onPress={() => { this.setState({ active: 'first' }); }}\n *         />\n *         <Drawer.Item\n *           label=\"Second Item\"\n *           active={active === 'second'}\n *           onPress={() => { this.setState({ active: 'second' }); }}\n *         />\n *      </Drawer.Section>\n *     );\n *   }\n * }\n * ```\n */\nclass DrawerSection extends React.Component<Props> {\n  static displayName = 'Drawer.Section';\n\n  render() {\n    const { children, title, theme, style, ...rest } = this.props;\n    const { colors, fonts } = theme;\n    const titleColor = color(colors.text)\n      .alpha(0.54)\n      .rgb()\n      .string();\n    const font = fonts.medium;\n\n    return (\n      <View style={[styles.container, style]} {...rest}>\n        {title && (\n          <View style={styles.titleContainer}>\n            <Text\n              numberOfLines={1}\n              style={{ color: titleColor, ...font, marginLeft: 16 }}\n            >\n              {title}\n            </Text>\n          </View>\n        )}\n        {children}\n        <Divider style={styles.divider} />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 4,\n  },\n  titleContainer: {\n    height: 40,\n    justifyContent: 'center',\n  },\n  divider: {\n    marginTop: 4,\n  },\n});\n\nexport default withTheme(DrawerSection);\n"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AACA,OAAOC,IAAP;AACA,OAAOC,OAAP;AACA,SAASC,SAAT;IAqDMC,a;;;;;;;;6BAGK;MAAA,IAAAC,WAAA,GAC4C,KAAKC,KADjD;QACCC,QADD,GAAAF,WAAA,CACCE,QADD;QACWC,KADX,GAAAH,WAAA,CACWG,KADX;QACkBC,KADlB,GAAAJ,WAAA,CACkBI,KADlB;QACyBC,KADzB,GAAAL,WAAA,CACyBK,KADzB;QACmCC,IADnC,GAAAC,wBAAA,CAAAP,WAAA;MAAA,IAECQ,MAFD,GAEmBJ,KAFnB,CAECI,MAFD;QAESC,KAFT,GAEmBL,KAFnB,CAESK,KAFT;MAGP,IAAMC,UAAU,GAAGlB,KAAK,CAACgB,MAAM,CAACG,IAAR,CAAL,CAChBC,KADgB,CACV,IADU,EAEhBC,GAFgB,GAGhBC,MAHgB,EAAnB;MAIA,IAAMC,IAAI,GAAGN,KAAK,CAACO,MAAnB;MAEA,OACEvB,KAAA,CAAAwB,aAAA,CAACvB,IAAD,EAAAwB,QAAA;QAAMb,KAAK,EAAE,CAACc,MAAM,CAACC,SAAR,EAAmBf,KAAnB;MAAb,GAA4CC,IAA5C;QAAAe,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,IACGrB,KAAK,IACJV,KAAA,CAAAwB,aAAA,CAACvB,IAAD;QAAMW,KAAK,EAAEc,MAAM,CAACM,cAApB;QAAAJ,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GACE/B,KAAA,CAAAwB,aAAA,CAACrB,IAAD;QACE8B,aAAa,EAAE,CADjB;QAEErB,KAAK,EAAAsB,aAAA;UAAInC,KAAK,EAAEkB;QAAX,GAA0BK,IAA1B;UAAgCa,UAAU,EAAE;QAA5C,EAFP;QAAAP,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAIGrB,KAJH,CADF,CAFJ,EAWGD,QAXH,EAYET,KAAA,CAAAwB,aAAA,CAACpB,OAAD;QAASQ,KAAK,EAAEc,MAAM,CAACU,OAAvB;QAAAR,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,EAZF,CADF;IAgBD;;;EA5ByB/B,KAAK,CAACqC,S;AAA5B/B,a,CACGgC,W,GAAc,gB;AA8BvB,IAAMZ,MAAM,GAAGxB,UAAU,CAACqC,MAAX,CAAkB;EAC/BZ,SAAS,EAAE;IACTa,YAAY,EAAE;EADL,CADoB;EAI/BR,cAAc,EAAE;IACdS,MAAM,EAAE,EADM;IAEdC,cAAc,EAAE;EAFF,CAJe;EAQ/BN,OAAO,EAAE;IACPO,SAAS,EAAE;EADJ;AARsB,CAAlB,CAAf;AAaA,eAAetC,SAAS,CAACC,aAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}