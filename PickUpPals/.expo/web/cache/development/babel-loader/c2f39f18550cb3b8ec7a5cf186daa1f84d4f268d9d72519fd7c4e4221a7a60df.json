{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Appbar/Appbar.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport AppbarContent from \"./AppbarContent\";\nimport AppbarAction from \"./AppbarAction\";\nimport AppbarBackAction from \"./AppbarBackAction\";\nimport AppbarHeader from \"./AppbarHeader\";\nimport Surface from \"../Surface\";\nimport { withTheme } from \"../../core/theming\";\nimport { black, white } from \"../../styles/colors\";\nimport overlay from \"../../styles/overlay\";\nexport var DEFAULT_APPBAR_HEIGHT = 56;\nvar Appbar = function (_React$Component) {\n  _inherits(Appbar, _React$Component);\n  function Appbar() {\n    _classCallCheck(this, Appbar);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Appbar).apply(this, arguments));\n  }\n  _createClass(Appbar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        children = _this$props.children,\n        dark = _this$props.dark,\n        style = _this$props.style,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"children\", \"dark\", \"style\", \"theme\"]);\n      var colors = theme.colors,\n        isDarkTheme = theme.dark,\n        mode = theme.mode;\n      var _ref = StyleSheet.flatten(style) || {},\n        customBackground = _ref.backgroundColor,\n        _ref$elevation = _ref.elevation,\n        elevation = _ref$elevation === void 0 ? 4 : _ref$elevation,\n        restStyle = _objectWithoutProperties(_ref, [\"backgroundColor\", \"elevation\"]);\n      var isDark;\n      var backgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n      if (typeof dark === 'boolean') {\n        isDark = dark;\n      } else {\n        isDark = backgroundColor === 'transparent' ? false : !color(backgroundColor).isLight();\n      }\n      var shouldCenterContent = false;\n      var shouldAddLeftSpacing = false;\n      var shouldAddRightSpacing = false;\n      if (Platform.OS === 'ios') {\n        var hasAppbarContent = false;\n        var leftItemsCount = 0;\n        var rightItemsCount = 0;\n        React.Children.forEach(children, function (child) {\n          if (React.isValidElement(child)) {\n            if (child.type === AppbarContent) {\n              hasAppbarContent = true;\n            } else if (hasAppbarContent) {\n              rightItemsCount++;\n            } else {\n              leftItemsCount++;\n            }\n          }\n        });\n        shouldCenterContent = hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n        shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n        shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n      }\n      return React.createElement(Surface, _extends({\n        style: [{\n          backgroundColor: backgroundColor\n        }, styles.appbar, {\n          elevation: elevation\n        }, restStyle]\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        }\n      }), shouldAddLeftSpacing ? React.createElement(View, {\n        style: styles.spacing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        }\n      }) : null, React.Children.toArray(children).filter(function (child) {\n        return child != null && typeof child !== 'boolean';\n      }).map(function (child, i) {\n        if (!React.isValidElement(child) || ![AppbarContent, AppbarAction, AppbarBackAction].includes(child.type)) {\n          return child;\n        }\n        var props = {\n          color: typeof child.props.color !== 'undefined' ? child.props.color : isDark ? white : black\n        };\n        if (child.type === AppbarContent) {\n          props.style = [i !== 0 && {\n            marginLeft: 8\n          }, shouldCenterContent && {\n            alignItems: 'center'\n          }, child.props.style];\n        }\n        return React.cloneElement(child, props);\n      }), shouldAddRightSpacing ? React.createElement(View, {\n        style: styles.spacing,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        }\n      }) : null);\n    }\n  }]);\n  return Appbar;\n}(React.Component);\nAppbar.Content = AppbarContent;\nAppbar.Action = AppbarAction;\nAppbar.BackAction = AppbarBackAction;\nAppbar.Header = AppbarHeader;\nvar styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4\n  },\n  spacing: {\n    width: 48\n  }\n});\nexport default withTheme(Appbar);","map":{"version":3,"names":["React","View","Platform","StyleSheet","color","AppbarContent","AppbarAction","AppbarBackAction","AppbarHeader","Surface","withTheme","black","white","overlay","DEFAULT_APPBAR_HEIGHT","Appbar","_this$props","props","children","dark","style","theme","rest","_objectWithoutProperties","colors","isDarkTheme","mode","_ref","flatten","customBackground","backgroundColor","_ref$elevation","elevation","restStyle","isDark","surface","primary","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","OS","hasAppbarContent","leftItemsCount","rightItemsCount","Children","forEach","child","isValidElement","type","createElement","_extends","styles","appbar","__source","fileName","_jsxFileName","lineNumber","spacing","toArray","filter","map","i","includes","marginLeft","alignItems","cloneElement","Component","Content","Action","BackAction","Header","create","height","flexDirection","paddingHorizontal","width"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Appbar/Appbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport AppbarContent, {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  AppbarContent as _AppbarContent,\n} from './AppbarContent';\nimport AppbarAction from './AppbarAction';\nimport AppbarBackAction from './AppbarBackAction';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport AppbarHeader, { AppbarHeader as _AppbarHeader } from './AppbarHeader';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport { Theme } from '../../types';\nimport overlay from '../../styles/overlay';\n\ntype Props = Partial<React.ComponentProps<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * export default class MyComponent extends React.Component {\n *   render() {\n *     return (\n *       <Appbar style={styles.bottom}>\n *         <Appbar.Action icon=\"archive\" onPress={() => console.log('Pressed archive')} />\n *         <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *         <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *         <Appbar.Action icon=\"delete\" onPress={() => console.log('Pressed delete')} />\n *       </Appbar>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nclass Appbar extends React.Component<Props> {\n  // @component ./AppbarContent.tsx\n  static Content = AppbarContent;\n  // @component ./AppbarAction.tsx\n  static Action = AppbarAction;\n  // @component ./AppbarBackAction.tsx\n  static BackAction = AppbarBackAction;\n  // @component ./AppbarHeader.tsx\n  static Header = AppbarHeader;\n\n  render() {\n    const { children, dark, style, theme, ...rest } = this.props;\n\n    const { colors, dark: isDarkTheme, mode } = theme;\n    const {\n      backgroundColor: customBackground,\n      elevation = 4,\n      ...restStyle\n    }: ViewStyle = StyleSheet.flatten(style) || {};\n\n    let isDark: boolean;\n\n    const backgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n    if (typeof dark === 'boolean') {\n      isDark = dark;\n    } else {\n      isDark =\n        backgroundColor === 'transparent'\n          ? false\n          : !color(backgroundColor).isLight();\n    }\n\n    let shouldCenterContent = false;\n    let shouldAddLeftSpacing = false;\n    let shouldAddRightSpacing = false;\n    if (Platform.OS === 'ios') {\n      let hasAppbarContent = false;\n      let leftItemsCount = 0;\n      let rightItemsCount = 0;\n\n      React.Children.forEach(children, child => {\n        if (React.isValidElement(child)) {\n          if (child.type === AppbarContent) {\n            hasAppbarContent = true;\n          } else if (hasAppbarContent) {\n            rightItemsCount++;\n          } else {\n            leftItemsCount++;\n          }\n        }\n      });\n\n      shouldCenterContent =\n        hasAppbarContent && (leftItemsCount < 2 && rightItemsCount < 2);\n      shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n      shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n    }\n    return (\n      <Surface\n        //@ts-ignore\n        style={[{ backgroundColor }, styles.appbar, { elevation }, restStyle]}\n        {...rest}\n      >\n        {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n        {React.Children.toArray(children)\n          .filter(child => child != null && typeof child !== 'boolean')\n          .map((child, i) => {\n            if (\n              !React.isValidElement(child) ||\n              ![\n                AppbarContent,\n                AppbarAction,\n                AppbarBackAction,\n                // @ts-ignore\n              ].includes(child.type)\n            ) {\n              return child;\n            }\n\n            const props: { color?: string; style?: StyleProp<ViewStyle> } = {\n              color:\n                typeof child.props.color !== 'undefined'\n                  ? child.props.color\n                  : isDark\n                  ? white\n                  : black,\n            };\n\n            if (child.type === AppbarContent) {\n              props.style = [\n                // Since content is not first item, add extra left margin\n                i !== 0 && { marginLeft: 8 },\n                shouldCenterContent && { alignItems: 'center' },\n                child.props.style,\n              ];\n            }\n            return React.cloneElement(child, props);\n          })}\n        {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n      </Surface>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}