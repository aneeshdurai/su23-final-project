{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Modal.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport SafeAreaView from 'react-native-safe-area-view';\nimport Surface from \"./Surface\";\nimport { withTheme } from \"../core/theming\";\nvar Modal = function (_React$Component) {\n  _inherits(Modal, _React$Component);\n  function Modal() {\n    var _getPrototypeOf2;\n    var _this;\n    _classCallCheck(this, Modal);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Modal)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      opacity: new Animated.Value(_this.props.visible ? 1 : 0),\n      rendered: _this.props.visible\n    };\n    _this._handleBack = function () {\n      if (_this.props.dismissable) {\n        _this._hideModal();\n      }\n      return true;\n    };\n    _this._showModal = function () {\n      var scale = _this.props.theme.animation.scale;\n      BackHandler.removeEventListener('hardwareBackPress', _this._handleBack);\n      BackHandler.addEventListener('hardwareBackPress', _this._handleBack);\n      Animated.timing(_this.state.opacity, {\n        toValue: 1,\n        duration: scale * 280,\n        easing: Easing.ease,\n        useNativeDriver: true\n      }).start();\n    };\n    _this._hideModal = function () {\n      var scale = _this.props.theme.animation.scale;\n      BackHandler.removeEventListener('hardwareBackPress', _this._handleBack);\n      Animated.timing(_this.state.opacity, {\n        toValue: 0,\n        duration: scale * 280,\n        easing: Easing.ease,\n        useNativeDriver: true\n      }).start(function (_ref) {\n        var finished = _ref.finished;\n        if (!finished) {\n          return;\n        }\n        if (_this.props.visible && _this.props.onDismiss) {\n          _this.props.onDismiss();\n        }\n        if (_this.props.visible) {\n          _this._showModal();\n        } else {\n          _this.setState({\n            rendered: false\n          });\n        }\n      });\n    };\n    return _this;\n  }\n  _createClass(Modal, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.visible !== this.props.visible) {\n        if (this.props.visible) {\n          this._showModal();\n        } else {\n          this._hideModal();\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.rendered) return null;\n      var _this$props = this.props,\n        children = _this$props.children,\n        dismissable = _this$props.dismissable,\n        theme = _this$props.theme,\n        contentContainerStyle = _this$props.contentContainerStyle;\n      var colors = theme.colors;\n      return React.createElement(Animated.View, {\n        pointerEvents: this.props.visible ? 'auto' : 'none',\n        accessibilityViewIsModal: true,\n        accessibilityLiveRegion: \"polite\",\n        style: StyleSheet.absoluteFill,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        onPress: dismissable ? this._hideModal : undefined,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.backdrop, {\n          backgroundColor: colors.backdrop,\n          opacity: this.state.opacity\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        }\n      })), React.createElement(SafeAreaView, {\n        style: styles.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        }\n      }, React.createElement(Surface, {\n        style: [{\n          opacity: this.state.opacity\n        }, styles.content, contentContainerStyle],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        }\n      }, children)));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.visible && !prevState.rendered) {\n        return {\n          rendered: true\n        };\n      }\n      return null;\n    }\n  }]);\n  return Modal;\n}(React.Component);\nModal.defaultProps = {\n  dismissable: true,\n  visible: false\n};\nexport default withTheme(Modal);\nvar styles = StyleSheet.create({\n  backdrop: {\n    flex: 1\n  },\n  wrapper: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    justifyContent: 'center'\n  }),\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["React","Animated","BackHandler","Easing","StyleSheet","TouchableWithoutFeedback","SafeAreaView","Surface","withTheme","Modal","state","opacity","Value","_this","props","visible","rendered","_handleBack","dismissable","_hideModal","_showModal","scale","theme","animation","removeEventListener","addEventListener","timing","toValue","duration","easing","ease","useNativeDriver","start","_ref","finished","onDismiss","setState","prevProps","_this$props","children","contentContainerStyle","colors","createElement","View","pointerEvents","accessibilityViewIsModal","accessibilityLiveRegion","style","absoluteFill","__source","fileName","_jsxFileName","lineNumber","onPress","undefined","styles","backdrop","backgroundColor","wrapper","content","nextProps","prevState","Component","defaultProps","create","flex","_objectSpread","absoluteFillObject","justifyContent"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Modal.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  BackHandler,\n  Easing,\n  StyleProp,\n  StyleSheet,\n  TouchableWithoutFeedback,\n  ViewStyle,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport Surface from './Surface';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Props = {\n  /**\n   * Determines whether clicking outside the modal dismiss it.\n   */\n  dismissable?: boolean;\n  /**\n   * Callback that is called when the user dismisses the modal.\n   */\n  onDismiss?: () => void;\n  /**\n   * Determines Whether the modal is visible.\n   */\n  visible: boolean;\n  /**\n   * Content of the `Modal`.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the content of the modal\n   */\n  contentContainerStyle?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  opacity: Animated.Value;\n  rendered: boolean;\n};\n\n/**\n * The Modal component is a simple way to present content above an enclosing view.\n * To render the `Modal` above other components, you'll need to wrap it with the [`Portal`](portal.html) component.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Modal, Portal, Text, Button, Provider } from 'react-native-paper';\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     visible: false,\n *   };\n *\n *   _showModal = () => this.setState({ visible: true });\n *   _hideModal = () => this.setState({ visible: false });\n *\n *   render() {\n *     const { visible } = this.state;\n *     return (\n *       <Provider>\n *          <Portal>\n *            <Modal visible={visible} onDismiss={this._hideModal}>\n *              <Text>Example Modal</Text>\n *            </Modal>\n *            <Button\n *              style={{ marginTop: 30 }}\n *              onPress={this._showModal}\n *            >\n *              Show\n *            </Button>\n *          </Portal>\n *       </Provider>\n *     );\n *   }\n * }\n * ```\n */\n\nclass Modal extends React.Component<Props, State> {\n  static defaultProps = {\n    dismissable: true,\n    visible: false,\n  };\n\n  static getDerivedStateFromProps(nextProps: Props, prevState: State) {\n    if (nextProps.visible && !prevState.rendered) {\n      return {\n        rendered: true,\n      };\n    }\n\n    return null;\n  }\n\n  state = {\n    opacity: new Animated.Value(this.props.visible ? 1 : 0),\n    rendered: this.props.visible,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        this._showModal();\n      } else {\n        this._hideModal();\n      }\n    }\n  }\n\n  _handleBack = () => {\n    if (this.props.dismissable) {\n      this._hideModal();\n    }\n    return true;\n  };\n\n  _showModal = () => {\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n    BackHandler.addEventListener('hardwareBackPress', this._handleBack);\n    Animated.timing(this.state.opacity, {\n      toValue: 1,\n      duration: scale * 280,\n      easing: Easing.ease,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  _hideModal = () => {\n    const {\n      theme: {\n        animation: { scale },\n      },\n    } = this.props;\n\n    BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n    Animated.timing(this.state.opacity, {\n      toValue: 0,\n      duration: scale * 280,\n      easing: Easing.ease,\n      useNativeDriver: true,\n    }).start(({ finished }) => {\n      if (!finished) {\n        return;\n      }\n      if (this.props.visible && this.props.onDismiss) {\n        this.props.onDismiss();\n      }\n      if (this.props.visible) {\n        this._showModal();\n      } else {\n        this.setState({\n          rendered: false,\n        });\n      }\n    });\n  };\n\n  componentWillUnmount() {\n    BackHandler.removeEventListener('hardwareBackPress', this._handleBack);\n  }\n\n  render() {\n    if (!this.state.rendered) return null;\n\n    const { children, dismissable, theme, contentContainerStyle } = this.props;\n    const { colors } = theme;\n    return (\n      <Animated.View\n        pointerEvents={this.props.visible ? 'auto' : 'none'}\n        accessibilityViewIsModal\n        accessibilityLiveRegion=\"polite\"\n        style={StyleSheet.absoluteFill}\n      >\n        <TouchableWithoutFeedback\n          onPress={dismissable ? this._hideModal : undefined}\n        >\n          <Animated.View\n            style={[\n              styles.backdrop,\n              { backgroundColor: colors.backdrop, opacity: this.state.opacity },\n            ]}\n          />\n        </TouchableWithoutFeedback>\n        <SafeAreaView style={styles.wrapper}>\n          <Surface\n            style={\n              [\n                { opacity: this.state.opacity },\n                styles.content,\n                contentContainerStyle,\n              ] as StyleProp<ViewStyle>\n            }\n          >\n            {children}\n          </Surface>\n        </SafeAreaView>\n      </Animated.View>\n    );\n  }\n}\n\nexport default withTheme(Modal);\n\nconst styles = StyleSheet.create({\n  backdrop: {\n    flex: 1,\n  },\n  wrapper: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n  },\n  content: {\n    backgroundColor: 'transparent',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}