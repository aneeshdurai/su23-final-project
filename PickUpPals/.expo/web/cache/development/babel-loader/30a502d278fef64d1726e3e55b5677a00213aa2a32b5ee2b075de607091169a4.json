{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport BackButton from \"./components/BackButton\";\nimport { theme } from \"./core/theme\";\nimport Toast from \"./components/Toast\";\nimport Logs from \"./components/small_log\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function RegisterScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n  var _useState3 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(\"\"),\n    _useState10 = _slicedToArray(_useState9, 2),\n    error = _useState10[0],\n    setError = _useState10[1];\n  var _useState11 = useState({\n      value: \"\",\n      error: \"\"\n    }),\n    _useState12 = _slicedToArray(_useState11, 2),\n    bio = _useState12[0],\n    setBio = _useState12[1];\n  var capitalizeFirstLetter = function capitalizeFirstLetter(text) {\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  };\n  var _onSignUpPressed = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      navigation.navigate(\"CreateGameScreen\");\n      if (loading) return;\n      if (emailError || passwordError || nameError) {\n        return;\n      }\n      setLoading(true);\n      setLoading(false);\n    });\n    return function _onSignUpPressed() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsxs(Background, {\n    children: [_jsx(Text, {\n      style: styles.bigText,\n      children: \"Bio\"\n    }), _jsx(View, {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      children: _jsx(Logs, {})\n    }), _jsx(Logo, {}), _jsx(TextInput, {\n      label: \"Introduce Yourself\",\n      returnKeyType: \"next\",\n      value: bio.value,\n      onChangeText: function onChangeText(text) {\n        return setBio({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!bio.error,\n      errorText: bio.error,\n      autoCapitalize: \"none\",\n      multiline: true,\n      numberOfLines: 4,\n      style: styles.bioInput\n    }), _jsx(TextInput, {\n      label: \"Social Media (optional)\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      autoCapitalize: \"none\"\n    }), _jsx(Button, {\n      loading: loading,\n      mode: \"contained\",\n      onPress: _onSignUpPressed,\n      style: styles.button,\n      children: \"Complete Profile\"\n    }), _jsx(View, {\n      style: styles.row,\n      children: _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"LoginScreen\");\n        }\n      })\n    }), _jsx(Toast, {\n      message: error,\n      onDismiss: function onDismiss() {\n        return setError(\"\");\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  bioInput: {\n    height: 100,\n    marginTop: 10\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  },\n  bigText: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20\n  },\n  subText: {\n    fontSize: 18,\n    textAlign: 'center',\n    marginTop: 10\n  }\n});\nexport default memo(RegisterScreen);","map":{"version":3,"names":["React","memo","useState","View","Text","StyleSheet","TouchableOpacity","Background","Logo","Header","Button","TextInput","BackButton","theme","Toast","Logs","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_ref","navigation","_useState","value","error","_useState2","_slicedToArray","name","setName","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","_useState9","_useState10","setError","_useState11","_useState12","bio","setBio","capitalizeFirstLetter","text","charAt","toUpperCase","slice","toLowerCase","_onSignUpPressed","_ref2","_asyncToGenerator","navigate","emailError","passwordError","nameError","apply","arguments","children","style","styles","bigText","position","top","left","label","returnKeyType","onChangeText","errorText","autoCapitalize","multiline","numberOfLines","bioInput","mode","onPress","button","row","message","onDismiss","create","color","colors","secondary","height","marginTop","flexDirection","link","fontWeight","primary","fontSize","textAlign","subText"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/BioScreen.js"],"sourcesContent":["import React, { memo, useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport BackButton from \"./components/BackButton\";\nimport { theme } from \"./core/theme\";\nimport Toast from \"./components/Toast\";\nimport Logs from \"./components/small_log\";\n\nconst RegisterScreen = ({ navigation }) => {\n\n  const [name, setName] = useState({ value: \"\", error: \"\" });\n  const [email, setEmail] = useState({ value: \"\", error: \"\" });\n  const [password, setPassword] = useState({ value: \"\", error: \"\" });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [bio, setBio] = useState({ value: \"\", error: \"\" });\n\n  const capitalizeFirstLetter = (text) => {\n    return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  }; \n\n  const _onSignUpPressed = async () => {\n    navigation.navigate(\"CreateGameScreen\");\n    if (loading) return;\n\n    if (emailError || passwordError || nameError) {\n      return;\n    }\n\n    setLoading(true);\n\n    \n\n\n\n    setLoading(false);\n  };\n\n  return (\n    <Background>\n\n      <Text style={styles.bigText}>Bio</Text>\n\n      <View style={{ position: 'absolute', top: 0, left: 0 }}>\n      <Logs />\n      </View>\n\n     \n\n      <Logo />\n\n\n\n\n\n  \n\n      \n\n     \n      <TextInput\n        label=\"Introduce Yourself\"\n        returnKeyType=\"next\"\n        value={bio.value}\n        onChangeText={text => setBio({ value: text, error: \"\" })}\n        error={!!bio.error}\n        errorText={bio.error}\n        autoCapitalize=\"none\"\n        multiline         // Allow multiple lines\n        numberOfLines={4} // Show 4 lines at once\n        style={styles.bioInput}  // Add some styling for this input\n      />\n\n      <TextInput\n        label=\"Social Media (optional)\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        autoCapitalize=\"none\"\n      />\n\n      <Button\n        loading={loading}\n        mode=\"contained\"\n        onPress={_onSignUpPressed}\n        style={styles.button}\n      >\n        Complete Profile\n      </Button>\n\n      <View style={styles.row}>\n        <TouchableOpacity onPress={() => navigation.navigate(\"LoginScreen\")}>\n        </TouchableOpacity>\n      </View>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n    </Background>\n  );\n};\n\nconst styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },bioInput: {\n    height: 100,    // Give more height\n    marginTop: 10,  // Some margin to separate from the above content\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }, bigText: {\n    fontSize: 32,      // Choose any size that looks \"big\" to you\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginTop: 20     // Some margin to separate from the top content\n  },\n  \n  subText: {\n    fontSize: 18,     // Choose an appropriate size for the subtitle\n    textAlign: 'center',\n    marginTop: 10     // Some margin to separate from the bigText\n  }\n});\n\nexport default memo(RegisterScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}