{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/RadioButtonIOS.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport Icon from \"./Icon\";\nimport TouchableRipple from \"./TouchableRipple\";\nimport { withTheme } from \"../core/theming\";\nvar RadioButtonIOS = function (_React$Component) {\n  _inherits(RadioButtonIOS, _React$Component);\n  function RadioButtonIOS() {\n    _classCallCheck(this, RadioButtonIOS);\n    return _possibleConstructorReturn(this, _getPrototypeOf(RadioButtonIOS).apply(this, arguments));\n  }\n  _createClass(RadioButtonIOS, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        disabled = _this$props.disabled,\n        onPress = _this$props.onPress,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"disabled\", \"onPress\", \"theme\"]);\n      var checkedColor = disabled ? theme.colors.disabled : this.props.color || theme.colors.accent;\n      var rippleColor;\n      var checked = this.props.status === 'checked';\n      if (disabled) {\n        rippleColor = color(theme.colors.text).alpha(0.16).rgb().string();\n      } else {\n        rippleColor = color(checkedColor).fade(0.32).rgb().string();\n      }\n      return React.createElement(TouchableRipple, _extends({}, rest, {\n        borderless: true,\n        rippleColor: rippleColor,\n        onPress: disabled ? undefined : function () {\n          onPress && onPress();\n        },\n        accessibilityTraits: disabled ? ['button', 'disabled'] : 'button',\n        accessibilityComponentType: checked ? 'radiobutton_checked' : 'radiobutton_unchecked',\n        accessibilityRole: \"button\",\n        accessibilityStates: disabled ? ['disabled'] : [],\n        accessibilityLiveRegion: \"polite\",\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        }\n      }), React.createElement(View, {\n        style: {\n          opacity: checked ? 1 : 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, React.createElement(Icon, {\n        allowFontScaling: false,\n        source: \"check\",\n        size: 24,\n        color: checkedColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        }\n      })));\n    }\n  }]);\n  return RadioButtonIOS;\n}(React.Component);\nRadioButtonIOS.displayName = 'RadioButton.IOS';\nvar styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6\n  }\n});\nexport default withTheme(RadioButtonIOS);\nexport { RadioButtonIOS };","map":{"version":3,"names":["React","StyleSheet","View","color","Icon","TouchableRipple","withTheme","RadioButtonIOS","_this$props","props","disabled","onPress","theme","rest","_objectWithoutProperties","checkedColor","colors","accent","rippleColor","checked","status","text","alpha","rgb","string","fade","createElement","_extends","borderless","undefined","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","accessibilityLiveRegion","style","styles","container","__source","fileName","_jsxFileName","lineNumber","opacity","allowFontScaling","source","size","Component","displayName","create","borderRadius","padding"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/RadioButtonIOS.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport color from 'color';\nimport Icon from './Icon';\nimport TouchableRipple from './TouchableRipple';\nimport { withTheme } from '../core/theming';\nimport { Theme, $RemoveChildren } from '../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Value of the radio button\n   */\n  value: string;\n  /**\n   * Status of radio button.\n   */\n  status?: 'checked' | 'unchecked';\n  /**\n   * Whether radio is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  /**\n   * Custom color for radio.\n   */\n  color?: string;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Radio buttons allow the selection a single option from a set.\n * This component follows platform guidelines for iOS.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img src=\"screenshots/radio-enabled.ios.png\" />\n *     <figcaption>Enabled</figcaption>\n *   </figure>\n *   <figure>\n *     <img src=\"screenshots/radio-disabled.ios.png\" />\n *     <figcaption>Disabled</figcaption>\n *   </figure>\n * </div>\n */\nclass RadioButtonIOS extends React.Component<Props> {\n  static displayName = 'RadioButton.IOS';\n\n  render() {\n    const { disabled, onPress, theme, ...rest } = this.props;\n\n    const checkedColor = disabled\n      ? theme.colors.disabled\n      : this.props.color || theme.colors.accent;\n\n    let rippleColor;\n\n    const checked = this.props.status === 'checked';\n\n    if (disabled) {\n      rippleColor = color(theme.colors.text)\n        .alpha(0.16)\n        .rgb()\n        .string();\n    } else {\n      rippleColor = color(checkedColor)\n        .fade(0.32)\n        .rgb()\n        .string();\n    }\n    return (\n      <TouchableRipple\n        {...rest}\n        borderless\n        rippleColor={rippleColor}\n        onPress={\n          disabled\n            ? undefined\n            : () => {\n                onPress && onPress();\n              }\n        }\n        accessibilityTraits={disabled ? ['button', 'disabled'] : 'button'}\n        accessibilityComponentType={\n          checked ? 'radiobutton_checked' : 'radiobutton_unchecked'\n        }\n        accessibilityRole=\"button\"\n        accessibilityStates={disabled ? ['disabled'] : []}\n        accessibilityLiveRegion=\"polite\"\n        style={styles.container}\n      >\n        <View style={{ opacity: checked ? 1 : 0 }}>\n          <Icon\n            allowFontScaling={false}\n            source=\"check\"\n            size={24}\n            color={checkedColor}\n          />\n        </View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderRadius: 18,\n    padding: 6,\n  },\n});\n\nexport default withTheme(RadioButtonIOS);\n\n// @component-docs ignore-next-line\nexport { RadioButtonIOS };\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP;AACA,OAAOC,eAAP;AACA,SAASC,SAAT;IA6CMC,c;;;;;;;;6BAGK;MAAA,IAAAC,WAAA,GACuC,KAAKC,KAD5C;QACCC,QADD,GAAAF,WAAA,CACCE,QADD;QACWC,OADX,GAAAH,WAAA,CACWG,OADX;QACoBC,KADpB,GAAAJ,WAAA,CACoBI,KADpB;QAC8BC,IAD9B,GAAAC,wBAAA,CAAAN,WAAA;MAGP,IAAMO,YAAY,GAAGL,QAAQ,GACzBE,KAAK,CAACI,MAAN,CAAaN,QADY,GAEzB,KAAKD,KAAL,CAAWN,KAAX,IAAoBS,KAAK,CAACI,MAAN,CAAaC,MAFrC;MAIA,IAAIC,WAAJ;MAEA,IAAMC,OAAO,GAAG,KAAKV,KAAL,CAAWW,MAAX,KAAsB,SAAtC;MAEA,IAAIV,QAAJ,EAAc;QACZQ,WAAW,GAAGf,KAAK,CAACS,KAAK,CAACI,MAAN,CAAaK,IAAd,CAAL,CACXC,KADW,CACL,IADK,EAEXC,GAFW,GAGXC,MAHW,EAAd;MAID,CALD,MAKO;QACLN,WAAW,GAAGf,KAAK,CAACY,YAAD,CAAL,CACXU,IADW,CACN,IADM,EAEXF,GAFW,GAGXC,MAHW,EAAd;MAID;MACD,OACExB,KAAA,CAAA0B,aAAA,CAACrB,eAAD,EAAAsB,QAAA,KACMd,IADN;QAEEe,UAAU,MAFZ;QAGEV,WAAW,EAAEA,WAHf;QAIEP,OAAO,EACLD,QAAQ,GACJmB,SADI,GAEJ,YAAM;UACJlB,OAAO,IAAIA,OAAO,EAAlB;QACD,CATT;QAWEmB,mBAAmB,EAAEpB,QAAQ,GAAG,CAAC,QAAD,EAAW,UAAX,CAAH,GAA4B,QAX3D;QAYEqB,0BAA0B,EACxBZ,OAAO,GAAG,qBAAH,GAA2B,uBAbtC;QAeEa,iBAAiB,EAAC,QAfpB;QAgBEC,mBAAmB,EAAEvB,QAAQ,GAAG,CAAC,UAAD,CAAH,GAAkB,EAhBjD;QAiBEwB,uBAAuB,EAAC,QAjB1B;QAkBEC,KAAK,EAAEC,MAAM,CAACC,SAlBhB;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,IAoBEzC,KAAA,CAAA0B,aAAA,CAACxB,IAAD;QAAMiC,KAAK,EAAE;UAAEO,OAAO,EAAEvB,OAAO,GAAG,CAAH,GAAO;QAAzB,CAAb;QAAAmB,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GACEzC,KAAA,CAAA0B,aAAA,CAACtB,IAAD;QACEuC,gBAAgB,EAAE,KADpB;QAEEC,MAAM,EAAC,OAFT;QAGEC,IAAI,EAAE,EAHR;QAIE1C,KAAK,EAAEY,YAJT;QAAAuB,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,EADF,CApBF,CADF;IA+BD;;;EAxD0BzC,KAAK,CAAC8C,S;AAA7BvC,c,CACGwC,W,GAAc,iB;AA0DvB,IAAMX,MAAM,GAAGnC,UAAU,CAAC+C,MAAX,CAAkB;EAC/BX,SAAS,EAAE;IACTY,YAAY,EAAE,EADL;IAETC,OAAO,EAAE;EAFA;AADoB,CAAlB,CAAf;AAOA,eAAe5C,SAAS,CAACC,cAAD,CAAxB;AAGA,SAASA,cAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}