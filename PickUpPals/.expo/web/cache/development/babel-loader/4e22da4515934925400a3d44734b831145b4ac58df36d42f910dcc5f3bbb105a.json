{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Drawer/DrawerItem.tsx\";\nimport color from 'color';\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"../Typography/Text\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport { withTheme } from \"../../core/theming\";\nvar DrawerItem = function (_React$Component) {\n  _inherits(DrawerItem, _React$Component);\n  function DrawerItem() {\n    _classCallCheck(this, DrawerItem);\n    return _possibleConstructorReturn(this, _getPrototypeOf(DrawerItem).apply(this, arguments));\n  }\n  _createClass(DrawerItem, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        icon = _this$props.icon,\n        label = _this$props.label,\n        active = _this$props.active,\n        theme = _this$props.theme,\n        style = _this$props.style,\n        onPress = _this$props.onPress,\n        rest = _objectWithoutProperties(_this$props, [\"icon\", \"label\", \"active\", \"theme\", \"style\", \"onPress\"]);\n      var colors = theme.colors,\n        roundness = theme.roundness;\n      var backgroundColor = active ? color(colors.primary).alpha(0.12).rgb().string() : 'transparent';\n      var contentColor = active ? colors.primary : color(colors.text).alpha(0.68).rgb().string();\n      var font = theme.fonts.medium;\n      var labelMargin = icon ? 32 : 0;\n      return React.createElement(View, _extends({}, rest, {\n        style: [styles.container, {\n          backgroundColor: backgroundColor,\n          borderRadius: roundness\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }), React.createElement(TouchableRipple, {\n        borderless: true,\n        delayPressIn: 0,\n        onPress: onPress,\n        style: {\n          borderRadius: roundness\n        },\n        accessibilityTraits: active ? ['button', 'selected'] : 'button',\n        accessibilityComponentType: \"button\",\n        accessibilityRole: \"button\",\n        accessibilityStates: active ? ['selected'] : [],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        }\n      }, React.createElement(View, {\n        style: styles.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        }\n      }, icon ? React.createElement(Icon, {\n        source: icon,\n        size: 24,\n        color: contentColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        }\n      }) : null, React.createElement(Text, {\n        numberOfLines: 1,\n        style: [styles.label, _objectSpread({\n          color: contentColor\n        }, font, {\n          marginLeft: labelMargin\n        })],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, label))));\n    }\n  }]);\n  return DrawerItem;\n}(React.Component);\nDrawerItem.displayName = 'Drawer.Item';\nvar styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8\n  },\n  label: {\n    marginRight: 32\n  }\n});\nexport default withTheme(DrawerItem);","map":{"version":3,"names":["color","React","View","StyleSheet","Text","Icon","TouchableRipple","withTheme","DrawerItem","_this$props","props","icon","label","active","theme","style","onPress","rest","_objectWithoutProperties","colors","roundness","backgroundColor","primary","alpha","rgb","string","contentColor","text","font","fonts","medium","labelMargin","createElement","_extends","styles","container","borderRadius","__source","fileName","_jsxFileName","lineNumber","borderless","delayPressIn","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","wrapper","source","size","numberOfLines","_objectSpread","marginLeft","Component","displayName","create","marginHorizontal","marginVertical","flexDirection","alignItems","padding","marginRight"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Drawer/DrawerItem.tsx"],"sourcesContent":["import color from 'color';\nimport * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport Text from '../Typography/Text';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple';\nimport { withTheme } from '../../core/theming';\nimport { Theme } from '../../types';\n\ntype Props = {\n  /**\n   * The label text of the item.\n   */\n  label: string;\n  /**\n   * Icon to display for the `DrawerItem`.\n   */\n  icon?: IconSource;\n  /**\n   * Whether to highlight the drawer item as active.\n   */\n  active?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * A component used to show an action item with an icon and a label in a navigation drawer.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Drawer } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Drawer.Item label=\"First Item\" />\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass DrawerItem extends React.Component<Props> {\n  static displayName = 'Drawer.Item';\n\n  render() {\n    const { icon, label, active, theme, style, onPress, ...rest } = this.props;\n    const { colors, roundness } = theme;\n    const backgroundColor = active\n      ? color(colors.primary)\n          .alpha(0.12)\n          .rgb()\n          .string()\n      : 'transparent';\n    const contentColor = active\n      ? colors.primary\n      : color(colors.text)\n          .alpha(0.68)\n          .rgb()\n          .string();\n    const font = theme.fonts.medium;\n    const labelMargin = icon ? 32 : 0;\n\n    return (\n      <View\n        {...rest}\n        style={[\n          styles.container,\n          { backgroundColor, borderRadius: roundness },\n          style,\n        ]}\n      >\n        <TouchableRipple\n          borderless\n          delayPressIn={0}\n          onPress={onPress}\n          style={{ borderRadius: roundness }}\n          accessibilityTraits={active ? ['button', 'selected'] : 'button'}\n          accessibilityComponentType=\"button\"\n          accessibilityRole=\"button\"\n          accessibilityStates={active ? ['selected'] : []}\n        >\n          <View style={styles.wrapper}>\n            {icon ? (\n              <Icon source={icon} size={24} color={contentColor} />\n            ) : null}\n            <Text\n              numberOfLines={1}\n              style={[\n                styles.label,\n                {\n                  color: contentColor,\n                  ...font,\n                  marginLeft: labelMargin,\n                },\n              ]}\n            >\n              {label}\n            </Text>\n          </View>\n        </TouchableRipple>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    marginHorizontal: 10,\n    marginVertical: 4,\n  },\n  wrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    padding: 8,\n  },\n  label: {\n    marginRight: 32,\n  },\n});\n\nexport default withTheme(DrawerItem);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}