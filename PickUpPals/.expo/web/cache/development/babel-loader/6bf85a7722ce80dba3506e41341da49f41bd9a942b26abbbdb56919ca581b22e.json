{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/DataTable/DataTableRow.tsx\";\nimport * as React from 'react';\nimport color from 'color';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableRipple from \"../TouchableRipple\";\nimport { black, white } from \"../../styles/colors\";\nimport { withTheme } from \"../../core/theming\";\nvar DataTableRow = function (_React$Component) {\n  _inherits(DataTableRow, _React$Component);\n  function DataTableRow() {\n    _classCallCheck(this, DataTableRow);\n    return _possibleConstructorReturn(this, _getPrototypeOf(DataTableRow).apply(this, arguments));\n  }\n  _createClass(DataTableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        onPress = _this$props.onPress,\n        style = _this$props.style,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"onPress\", \"style\", \"theme\"]);\n      var borderBottomColor = color(theme.dark ? white : black).alpha(0.12).rgb().string();\n      return React.createElement(TouchableRipple, _extends({}, rest, {\n        onPress: onPress,\n        style: [styles.container, {\n          borderBottomColor: borderBottomColor\n        }, style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        }\n      }), React.createElement(View, {\n        style: styles.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }, this.props.children));\n    }\n  }]);\n  return DataTableRow;\n}(React.Component);\nDataTableRow.displayName = 'DataTable.Row';\nvar styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row'\n  }\n});\nexport default withTheme(DataTableRow);\nexport { DataTableRow };","map":{"version":3,"names":["React","color","StyleSheet","View","TouchableRipple","black","white","withTheme","DataTableRow","_this$props","props","onPress","style","theme","rest","_objectWithoutProperties","borderBottomColor","dark","alpha","rgb","string","createElement","_extends","styles","container","__source","fileName","_jsxFileName","lineNumber","content","children","Component","displayName","create","borderStyle","borderBottomWidth","hairlineWidth","minHeight","paddingHorizontal","flex","flexDirection"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/DataTable/DataTableRow.tsx"],"sourcesContent":["import * as React from 'react';\nimport color from 'color';\nimport { StyleSheet, StyleProp, View, ViewStyle } from 'react-native';\nimport TouchableRipple from '../TouchableRipple';\nimport { black, white } from '../../styles/colors';\nimport { withTheme } from '../../core/theming';\nimport { Theme, $RemoveChildren } from '../../types';\n\ntype Props = $RemoveChildren<typeof TouchableRipple> & {\n  /**\n   * Content of the `DataTableRow`.\n   */\n  children: React.ReactNode;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: () => void;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\nclass DataTableRow extends React.Component<Props> {\n  static displayName = 'DataTable.Row';\n\n  render() {\n    const { onPress, style, theme, ...rest } = this.props;\n    const borderBottomColor = color(theme.dark ? white : black)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    return (\n      <TouchableRipple\n        {...rest}\n        onPress={onPress}\n        style={[styles.container, { borderBottomColor }, style]}\n      >\n        <View style={styles.content}>{this.props.children}</View>\n      </TouchableRipple>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    borderStyle: 'solid',\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    minHeight: 48,\n    paddingHorizontal: 16,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n  },\n});\n\nexport default withTheme(DataTableRow);\n\n// @component-docs ignore-next-line\nexport { DataTableRow };\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AACA,OAAOC,eAAP;AACA,SAASC,KAAT,EAAgBC,KAAhB;AACA,SAASC,SAAT;IAmBMC,Y;;;;;;;;6BAGK;MAAA,IAAAC,WAAA,GACoC,KAAKC,KADzC;QACCC,OADD,GAAAF,WAAA,CACCE,OADD;QACUC,KADV,GAAAH,WAAA,CACUG,KADV;QACiBC,KADjB,GAAAJ,WAAA,CACiBI,KADjB;QAC2BC,IAD3B,GAAAC,wBAAA,CAAAN,WAAA;MAEP,IAAMO,iBAAiB,GAAGf,KAAK,CAACY,KAAK,CAACI,IAAN,GAAaX,KAAb,GAAqBD,KAAtB,CAAL,CACvBa,KADuB,CACjB,IADiB,EAEvBC,GAFuB,GAGvBC,MAHuB,EAA1B;MAKA,OACEpB,KAAA,CAAAqB,aAAA,CAACjB,eAAD,EAAAkB,QAAA,KACMR,IADN;QAEEH,OAAO,EAAEA,OAFX;QAGEC,KAAK,EAAE,CAACW,MAAM,CAACC,SAAR,EAAmB;UAAER,iBAAiB,EAAjBA;QAAF,CAAnB,EAA0CJ,KAA1C,CAHT;QAAAa,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,IAKE5B,KAAA,CAAAqB,aAAA,CAAClB,IAAD;QAAMS,KAAK,EAAEW,MAAM,CAACM,OAApB;QAAAJ,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GAA8B,KAAKlB,KAAL,CAAWoB,QAAzC,CALF,CADF;IASD;;;EAnBwB9B,KAAK,CAAC+B,S;AAA3BvB,Y,CACGwB,W,GAAc,e;AAqBvB,IAAMT,MAAM,GAAGrB,UAAU,CAAC+B,MAAX,CAAkB;EAC/BT,SAAS,EAAE;IACTU,WAAW,EAAE,OADJ;IAETC,iBAAiB,EAAEjC,UAAU,CAACkC,aAFrB;IAGTC,SAAS,EAAE,EAHF;IAITC,iBAAiB,EAAE;EAJV,CADoB;EAO/BT,OAAO,EAAE;IACPU,IAAI,EAAE,CADC;IAEPC,aAAa,EAAE;EAFR;AAPsB,CAAlB,CAAf;AAaA,eAAejC,SAAS,CAACC,YAAD,CAAxB;AAGA,SAASA,YAAT"},"metadata":{},"sourceType":"module","externalDependencies":[]}