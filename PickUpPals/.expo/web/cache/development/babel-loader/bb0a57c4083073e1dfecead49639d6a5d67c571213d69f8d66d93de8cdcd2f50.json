{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/Surface.tsx\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport shadow from \"../styles/shadow\";\nimport { withTheme } from \"../core/theming\";\nimport overlay from \"../styles/overlay\";\nvar Surface = function (_React$Component) {\n  _inherits(Surface, _React$Component);\n  function Surface() {\n    _classCallCheck(this, Surface);\n    return _possibleConstructorReturn(this, _getPrototypeOf(Surface).apply(this, arguments));\n  }\n  _createClass(Surface, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        style = _this$props.style,\n        theme = _this$props.theme,\n        rest = _objectWithoutProperties(_this$props, [\"style\", \"theme\"]);\n      var flattenedStyles = StyleSheet.flatten(style) || {};\n      var _flattenedStyles$elev = flattenedStyles.elevation,\n        elevation = _flattenedStyles$elev === void 0 ? 4 : _flattenedStyles$elev;\n      var isDarkTheme = theme.dark,\n        mode = theme.mode,\n        colors = theme.colors;\n      return React.createElement(Animated.View, _extends({}, rest, {\n        style: [{\n          backgroundColor: isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.surface\n        }, elevation && shadow(elevation), style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        }\n      }));\n    }\n  }]);\n  return Surface;\n}(React.Component);\nexport default withTheme(Surface);","map":{"version":3,"names":["React","Animated","StyleSheet","shadow","withTheme","overlay","Surface","_this$props","props","style","theme","rest","_objectWithoutProperties","flattenedStyles","flatten","_flattenedStyles$elev","elevation","isDarkTheme","dark","mode","colors","createElement","View","_extends","backgroundColor","surface","__source","fileName","_jsxFileName","lineNumber","Component"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/Surface.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View, StyleProp, ViewStyle } from 'react-native';\nimport shadow from '../styles/shadow';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\nimport overlay from '../styles/overlay';\n\ntype Props = React.ComponentProps<typeof View> & {\n  /**\n   * Content of the `Surface`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\n/**\n * Surface is a basic container that can give depth to an element with elevation shadow.\n * On dark theme with `adaptive` mode, surface is constructed by also placing a semi-transparent white overlay over a component surface.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations.\n * Overlay and/or shadow can be applied by specifying the `elevation` property both on Android and iOS.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-1.png\" />\n *   <img src=\"screenshots/surface-2.png\" />\n *   <img src=\"screenshots/surface-3.png\" />\n * </div>\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/surface-dark-1.png\" />\n *   <img src=\"screenshots/surface-dark-2.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Surface, Text } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *   <Surface style={styles.surface}>\n *      <Text>Surface</Text>\n *   </Surface>\n * );\n *\n * export default MyComponent;\n *\n * const styles = StyleSheet.create({\n *   surface: {\n *     padding: 8,\n *     height: 80,\n *     width: 80,\n *     alignItems: 'center',\n *     justifyContent: 'center',\n *     elevation: 4,\n *   },\n * });\n * ```\n */\nclass Surface extends React.Component<Props> {\n  render() {\n    const { style, theme, ...rest } = this.props;\n    const flattenedStyles = StyleSheet.flatten(style) || {};\n    const { elevation = 4 }: ViewStyle = flattenedStyles;\n    const { dark: isDarkTheme, mode, colors } = theme;\n    return (\n      <Animated.View\n        {...rest}\n        style={[\n          {\n            backgroundColor:\n              isDarkTheme && mode === 'adaptive'\n                ? overlay(elevation, colors.surface)\n                : colors.surface,\n          },\n          elevation && shadow(elevation),\n          style,\n        ]}\n      />\n    );\n  }\n}\nexport default withTheme(Surface);\n"],"mappings":";;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AACA,OAAOC,MAAP;AACA,SAASC,SAAT;AAEA,OAAOC,OAAP;IAyDMC,O;;;;;;;;6BACK;MAAA,IAAAC,WAAA,GAC2B,KAAKC,KADhC;QACCC,KADD,GAAAF,WAAA,CACCE,KADD;QACQC,KADR,GAAAH,WAAA,CACQG,KADR;QACkBC,IADlB,GAAAC,wBAAA,CAAAL,WAAA;MAEP,IAAMM,eAAe,GAAGX,UAAU,CAACY,OAAX,CAAmBL,KAAnB,KAA6B,EAArD;MAFO,IAAAM,qBAAA,GAG8BF,eAH9B,CAGCG,SAHD;QAGCA,SAHD,GAAAD,qBAAA,cAGa,CAHb,GAAAA,qBAAA;MAAA,IAIOE,WAJP,GAIqCP,KAJrC,CAICQ,IAJD;QAIoBC,IAJpB,GAIqCT,KAJrC,CAIoBS,IAJpB;QAI0BC,MAJ1B,GAIqCV,KAJrC,CAI0BU,MAJ1B;MAKP,OACEpB,KAAA,CAAAqB,aAAA,CAACpB,QAAD,CAAUqB,IAAV,EAAAC,QAAA,KACMZ,IADN;QAEEF,KAAK,EAAE,CACL;UACEe,eAAe,EACbP,WAAW,IAAIE,IAAI,KAAK,UAAxB,GACId,OAAO,CAACW,SAAD,EAAYI,MAAM,CAACK,OAAnB,CADX,GAEIL,MAAM,CAACK;QAJf,CADK,EAOLT,SAAS,IAAIb,MAAM,CAACa,SAAD,CAPd,EAQLP,KARK,CAFT;QAAAiB,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,GADF;IAeD;;;EArBmB7B,KAAK,CAAC8B,S;AAuB5B,eAAe1B,SAAS,CAACE,OAAD,CAAxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}