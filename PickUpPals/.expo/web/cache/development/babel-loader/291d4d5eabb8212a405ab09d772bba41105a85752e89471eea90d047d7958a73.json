{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/objectSpread\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/BottomNavigation.tsx\";\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport SafeAreaView from 'react-native-safe-area-view';\nimport color from 'color';\nimport overlay from \"../styles/overlay\";\nimport Icon from \"./Icon\";\nimport Surface from \"./Surface\";\nimport Badge from \"./Badge\";\nimport TouchableRipple from \"./TouchableRipple\";\nimport Text from \"./Typography/Text\";\nimport { black, white } from \"../styles/colors\";\nimport { withTheme } from \"../core/theming\";\nvar MIN_RIPPLE_SCALE = 0.001;\nvar MIN_TAB_WIDTH = 96;\nvar MAX_TAB_WIDTH = 168;\nvar BAR_HEIGHT = 56;\nvar FAR_FAR_AWAY = 9999;\nvar Touchable = TouchableRipple.supported ? TouchableRipple : function (_ref) {\n  var style = _ref.style,\n    children = _ref.children,\n    borderless = _ref.borderless,\n    centered = _ref.centered,\n    rippleColor = _ref.rippleColor,\n    rest = _objectWithoutProperties(_ref, [\"style\", \"children\", \"borderless\", \"centered\", \"rippleColor\"]);\n  return React.createElement(TouchableWithoutFeedback, _extends({}, rest, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260\n    }\n  }), React.createElement(View, {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261\n    }\n  }, children));\n};\nvar SceneComponent = function (_React$PureComponent) {\n  _inherits(SceneComponent, _React$PureComponent);\n  function SceneComponent() {\n    _classCallCheck(this, SceneComponent);\n    return _possibleConstructorReturn(this, _getPrototypeOf(SceneComponent).apply(this, arguments));\n  }\n  _createClass(SceneComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n        component = _this$props.component,\n        rest = _objectWithoutProperties(_this$props, [\"component\"]);\n      return React.createElement(component, rest);\n    }\n  }]);\n  return SceneComponent;\n}(React.PureComponent);\nvar BottomNavigation = function (_React$Component) {\n  _inherits(BottomNavigation, _React$Component);\n  _createClass(BottomNavigation, null, [{\n    key: \"SceneMap\",\n    value: function SceneMap(scenes) {\n      return function (_ref2) {\n        var route = _ref2.route,\n          jumpTo = _ref2.jumpTo;\n        return React.createElement(SceneComponent, {\n          key: route.key,\n          component: scenes[route.key ? route.key : ''],\n          route: route,\n          jumpTo: jumpTo,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          }\n        });\n      };\n    }\n  }, {\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var _nextProps$navigation = nextProps.navigationState,\n        index = _nextProps$navigation.index,\n        routes = _nextProps$navigation.routes;\n      var tabs = routes.map(function (_, i) {\n        return prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0);\n      });\n      var offsets = routes.map(function (_, i) {\n        return prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1);\n      });\n      var nextState = {\n        tabs: tabs,\n        offsets: offsets\n      };\n      if (index !== prevState.current) {\n        _extends(nextState, {\n          current: index,\n          previous: prevState.current,\n          loaded: prevState.loaded.includes(index) ? prevState.loaded : [].concat(_toConsumableArray(prevState.loaded), [index])\n        });\n      }\n      return nextState;\n    }\n  }]);\n  function BottomNavigation(props) {\n    var _this;\n    _classCallCheck(this, BottomNavigation);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BottomNavigation).call(this, props));\n    _this._handleKeyboardShow = function () {\n      return _this.setState({\n        keyboard: true\n      }, function () {\n        return Animated.timing(_this.state.visible, {\n          toValue: 0,\n          duration: 150,\n          useNativeDriver: true\n        }).start();\n      });\n    };\n    _this._handleKeyboardHide = function () {\n      return Animated.timing(_this.state.visible, {\n        toValue: 1,\n        duration: 100,\n        useNativeDriver: true\n      }).start(function () {\n        _this.setState({\n          keyboard: false\n        });\n      });\n    };\n    _this._animateToCurrentIndex = function () {\n      var shifting = _this._isShifting();\n      var _this$props$navigatio = _this.props.navigationState,\n        routes = _this$props$navigatio.routes,\n        index = _this$props$navigatio.index;\n      _this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n      Animated.parallel([Animated.timing(_this.state.ripple, {\n        toValue: 1,\n        duration: shifting ? 400 : 0,\n        useNativeDriver: true\n      })].concat(_toConsumableArray(routes.map(function (_, i) {\n        return Animated.timing(_this.state.tabs[i], {\n          toValue: i === index ? 1 : 0,\n          duration: shifting ? 150 : 75,\n          useNativeDriver: true\n        });\n      })))).start(function (_ref3) {\n        var finished = _ref3.finished;\n        _this.state.tabs.map(function (tab, i) {\n          return tab.setValue(i === index ? 1 : 0);\n        });\n        _this.state.index.setValue(index);\n        _this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n        if (finished) {\n          _this.state.offsets.forEach(function (offset, i) {\n            if (i === index) {\n              offset.setValue(0);\n            } else {\n              offset.setValue(1);\n            }\n          });\n        }\n      });\n    };\n    _this._handleLayout = function (e) {\n      var layout = _this.state.layout;\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n      if (height === layout.height && width === layout.width) {\n        return;\n      }\n      _this.setState({\n        layout: {\n          height: height,\n          width: width,\n          measured: true\n        }\n      });\n    };\n    _this._handleTabPress = function (index) {\n      var _this$props2 = _this.props,\n        navigationState = _this$props2.navigationState,\n        onTabPress = _this$props2.onTabPress,\n        onIndexChange = _this$props2.onIndexChange;\n      if (onTabPress) {\n        onTabPress({\n          route: navigationState.routes[index]\n        });\n      }\n      if (index !== navigationState.index) {\n        onIndexChange(index);\n      }\n    };\n    _this._jumpTo = function (key) {\n      var index = _this.props.navigationState.routes.findIndex(function (route) {\n        return route.key === key;\n      });\n      _this.props.onIndexChange(index);\n    };\n    _this._isShifting = function () {\n      return typeof _this.props.shifting === 'boolean' ? _this.props.shifting : _this.props.navigationState.routes.length > 3;\n    };\n    var _index = _this.props.navigationState.index;\n    _this.state = {\n      visible: new Animated.Value(1),\n      tabs: [],\n      offsets: [],\n      index: new Animated.Value(_index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: {\n        height: 0,\n        width: 0,\n        measured: false\n      },\n      current: _index,\n      previous: 0,\n      loaded: [_index],\n      keyboard: false\n    };\n    return _this;\n  }\n  _createClass(BottomNavigation, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._animateToCurrentIndex();\n      if (Platform.OS === 'ios') {\n        Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n      if (prevProps.navigationState.index === this.props.navigationState.index) {\n        return;\n      }\n      this.state.offsets.forEach(function (offset, i) {\n        if (i === _this2.props.navigationState.index || i === prevProps.navigationState.index) {\n          offset.setValue(0);\n        }\n      });\n      this._animateToCurrentIndex();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (Platform.OS === 'ios') {\n        Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n      } else {\n        Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n        Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props3 = this.props,\n        navigationState = _this$props3.navigationState,\n        renderScene = _this$props3.renderScene,\n        renderIcon = _this$props3.renderIcon,\n        renderLabel = _this$props3.renderLabel,\n        _this$props3$getLabel = _this$props3.getLabelText,\n        getLabelText = _this$props3$getLabel === void 0 ? function (_ref4) {\n          var route = _ref4.route;\n          return route.title;\n        } : _this$props3$getLabel,\n        _this$props3$getBadge = _this$props3.getBadge,\n        getBadge = _this$props3$getBadge === void 0 ? function (_ref5) {\n          var route = _ref5.route;\n          return route.badge;\n        } : _this$props3$getBadge,\n        _this$props3$getColor = _this$props3.getColor,\n        getColor = _this$props3$getColor === void 0 ? function (_ref6) {\n          var route = _ref6.route;\n          return route.color;\n        } : _this$props3$getColor,\n        _this$props3$getAcces = _this$props3.getAccessibilityLabel,\n        getAccessibilityLabel = _this$props3$getAcces === void 0 ? function (_ref7) {\n          var route = _ref7.route;\n          return route.accessibilityLabel;\n        } : _this$props3$getAcces,\n        _this$props3$getTestI = _this$props3.getTestID,\n        getTestID = _this$props3$getTestI === void 0 ? function (_ref8) {\n          var route = _ref8.route;\n          return route.testID;\n        } : _this$props3$getTestI,\n        activeColor = _this$props3.activeColor,\n        inactiveColor = _this$props3.inactiveColor,\n        keyboardHidesNavigationBar = _this$props3.keyboardHidesNavigationBar,\n        barStyle = _this$props3.barStyle,\n        labeled = _this$props3.labeled,\n        style = _this$props3.style,\n        theme = _this$props3.theme;\n      var _this$state = this.state,\n        layout = _this$state.layout,\n        loaded = _this$state.loaded;\n      var routes = navigationState.routes;\n      var colors = theme.colors,\n        isDarkTheme = theme.dark,\n        mode = theme.mode;\n      var shifting = this._isShifting();\n      var _ref9 = StyleSheet.flatten(barStyle) || {},\n        customBackground = _ref9.backgroundColor,\n        _ref9$elevation = _ref9.elevation,\n        elevation = _ref9$elevation === void 0 ? 4 : _ref9$elevation;\n      var approxBackgroundColor = customBackground ? customBackground : isDarkTheme && mode === 'adaptive' ? overlay(elevation, colors.surface) : colors.primary;\n      var backgroundColor = shifting ? this.state.index.interpolate({\n        inputRange: routes.map(function (_, i) {\n          return i;\n        }),\n        outputRange: routes.map(function (route) {\n          return getColor({\n            route: route\n          }) || approxBackgroundColor;\n        })\n      }) : approxBackgroundColor;\n      var isDark = !color(approxBackgroundColor).isLight();\n      var textColor = isDark ? white : black;\n      var activeTintColor = typeof activeColor !== 'undefined' ? activeColor : textColor;\n      var inactiveTintColor = typeof inactiveColor !== 'undefined' ? inactiveColor : color(textColor).alpha(0.5).rgb().string();\n      var touchColor = color(activeColor || activeTintColor).alpha(0.12).rgb().string();\n      var maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n      var tabWidth = Math.min(layout.width * 4 / routes.length, maxTabWidth);\n      return React.createElement(View, {\n        style: [styles.container, style],\n        pointerEvents: layout.measured ? 'auto' : 'none',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 634\n        }\n      }, React.createElement(View, {\n        style: [styles.content, {\n          backgroundColor: colors.background\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        }\n      }, routes.map(function (route, index) {\n        if (!loaded.includes(index)) {\n          return null;\n        }\n        var opacity = _this3.state.tabs[index];\n        var top = _this3.state.offsets[index].interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, FAR_FAR_AWAY]\n        });\n        var focused = navigationState.index === index;\n        return React.createElement(Animated.View, {\n          key: route.key,\n          pointerEvents: focused ? 'auto' : 'none',\n          accessibilityElementsHidden: !focused,\n          importantForAccessibility: focused ? 'auto' : 'no-hide-descendants',\n          style: [StyleSheet.absoluteFill, {\n            opacity: opacity\n          }],\n          collapsable: false,\n          removeClippedSubviews: Platform.OS === 'ios' ? navigationState.index !== index : true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 654\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.content, {\n            top: top\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669\n          }\n        }, renderScene({\n          route: route,\n          jumpTo: _this3._jumpTo\n        })));\n      })), React.createElement(Surface, {\n        style: [styles.bar, keyboardHidesNavigationBar ? {\n          transform: [{\n            translateY: this.state.visible.interpolate({\n              inputRange: [0, 1],\n              outputRange: [this.state.layout.height, 0]\n            })\n          }],\n          position: this.state.keyboard ? 'absolute' : null\n        } : null, barStyle],\n        pointerEvents: keyboardHidesNavigationBar && this.state.keyboard ? 'none' : 'auto',\n        onLayout: this._handleLayout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 679\n        }\n      }, React.createElement(Animated.View, {\n        style: [styles.barContent, {\n          backgroundColor: backgroundColor\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 707\n        }\n      }, React.createElement(SafeAreaView, {\n        forceInset: {\n          top: 'never',\n          bottom: 'always'\n        },\n        style: [styles.items, {\n          maxWidth: maxTabWidth * routes.length\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 708\n        }\n      }, shifting ? React.createElement(Animated.View, {\n        pointerEvents: \"none\",\n        style: [styles.ripple, {\n          top: BAR_HEIGHT / 2 - layout.width / 8,\n          left: navigationState.index * tabWidth + tabWidth / 2 - layout.width / 8,\n          height: layout.width / 4,\n          width: layout.width / 4,\n          borderRadius: layout.width / 2,\n          backgroundColor: getColor({\n            route: routes[navigationState.index]\n          }),\n          transform: [{\n            scale: this.state.ripple.interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, 8]\n            })\n          }],\n          opacity: this.state.ripple.interpolate({\n            inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n            outputRange: [0, 0, 1, 1]\n          })\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 713\n        }\n      }) : null, routes.map(function (route, index) {\n        var focused = navigationState.index === index;\n        var active = _this3.state.tabs[index];\n        var scale = labeled && shifting ? active.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.5, 1]\n        }) : 1;\n        var translateY = labeled ? shifting ? active.interpolate({\n          inputRange: [0, 1],\n          outputRange: [7, 0]\n        }) : 0 : 7;\n        var activeOpacity = active;\n        var inactiveOpacity = active.interpolate({\n          inputRange: [0, 1],\n          outputRange: [1, 0]\n        });\n        var badge = getBadge({\n          route: route\n        });\n        return React.createElement(Touchable, {\n          key: route.key,\n          borderless: true,\n          centered: true,\n          rippleColor: touchColor,\n          onPress: function onPress() {\n            return _this3._handleTabPress(index);\n          },\n          testID: getTestID({\n            route: route\n          }),\n          accessibilityLabel: getAccessibilityLabel({\n            route: route\n          }),\n          accessibilityTraits: focused ? ['button', 'selected'] : 'button',\n          accessibilityComponentType: \"button\",\n          accessibilityRole: \"button\",\n          accessibilityStates: ['selected'],\n          style: styles.item,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 783\n          }\n        }, React.createElement(View, {\n          pointerEvents: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 799\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.iconContainer, {\n            transform: [{\n              translateY: translateY\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 800\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.iconWrapper, {\n            opacity: activeOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806\n          }\n        }, renderIcon ? renderIcon({\n          route: route,\n          focused: true,\n          color: activeTintColor\n        }) : React.createElement(Icon, {\n          source: route.icon,\n          color: activeTintColor,\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 819\n          }\n        })), React.createElement(Animated.View, {\n          style: [styles.iconWrapper, {\n            opacity: inactiveOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 826\n          }\n        }, renderIcon ? renderIcon({\n          route: route,\n          focused: false,\n          color: inactiveTintColor\n        }) : React.createElement(Icon, {\n          source: route.icon,\n          color: inactiveTintColor,\n          size: 24,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 839\n          }\n        })), React.createElement(View, {\n          style: [styles.badgeContainer, {\n            right: (badge != null && typeof badge !== 'boolean' ? String(badge).length * -2 : 0) - 2\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 846\n          }\n        }, typeof badge === 'boolean' ? React.createElement(Badge, {\n          visible: badge,\n          size: 8,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 858\n          }\n        }) : React.createElement(Badge, {\n          visible: badge != null,\n          size: 16,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 860\n          }\n        }, badge))), labeled ? React.createElement(Animated.View, {\n          style: [styles.labelContainer, {\n            transform: [{\n              scale: scale\n            }]\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 867\n          }\n        }, React.createElement(Animated.View, {\n          style: [styles.labelWrapper, {\n            opacity: activeOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 873\n          }\n        }, renderLabel ? renderLabel({\n          route: route,\n          focused: true,\n          color: activeTintColor\n        }) : React.createElement(Text, {\n          style: [styles.label, {\n            color: activeTintColor\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 886\n          }\n        }, getLabelText({\n          route: route\n        }))), shifting ? null : React.createElement(Animated.View, {\n          style: [styles.labelWrapper, {\n            opacity: inactiveOpacity\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 897\n          }\n        }, renderLabel ? renderLabel({\n          route: route,\n          focused: false,\n          color: inactiveTintColor\n        }) : React.createElement(Text, {\n          style: [styles.label, {\n            color: inactiveTintColor\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 910\n          }\n        }, getLabelText({\n          route: route\n        })))) : React.createElement(View, {\n          style: styles.labelContainer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 923\n          }\n        })));\n      })))));\n    }\n  }]);\n  return BottomNavigation;\n}(React.Component);\nBottomNavigation.defaultProps = {\n  labeled: true,\n  keyboardHidesNavigationBar: true\n};\nexport default withTheme(BottomNavigation);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  content: {\n    flex: 1\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden'\n  },\n  items: {\n    flexDirection: 'row',\n    width: '100%'\n  },\n  item: {\n    flex: 1,\n    paddingVertical: 6\n  },\n  ripple: {\n    position: 'absolute'\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center'\n  },\n  iconWrapper: _objectSpread({}, StyleSheet.absoluteFillObject, {\n    alignItems: 'center'\n  }),\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2\n  },\n  labelWrapper: _objectSpread({}, StyleSheet.absoluteFillObject),\n  label: _objectSpread({\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent'\n  }, Platform.OS === 'web' ? {\n    whiteSpace: 'nowrap'\n  } : null),\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2\n  }\n});","map":{"version":3,"names":["React","View","Animated","TouchableWithoutFeedback","StyleSheet","Platform","Keyboard","SafeAreaView","color","overlay","Icon","Surface","Badge","TouchableRipple","Text","black","white","withTheme","MIN_RIPPLE_SCALE","MIN_TAB_WIDTH","MAX_TAB_WIDTH","BAR_HEIGHT","FAR_FAR_AWAY","Touchable","supported","_ref","style","children","borderless","centered","rippleColor","rest","_objectWithoutProperties","createElement","_extends","__source","fileName","_jsxFileName","lineNumber","SceneComponent","_this$props","props","component","PureComponent","BottomNavigation","scenes","_ref2","route","jumpTo","key","nextProps","prevState","_nextProps$navigation","navigationState","index","routes","tabs","map","_","i","Value","offsets","nextState","current","previous","loaded","includes","concat","_toConsumableArray","_this","_classCallCheck","_possibleConstructorReturn","_getPrototypeOf","call","_handleKeyboardShow","setState","keyboard","timing","state","visible","toValue","duration","useNativeDriver","start","_handleKeyboardHide","_animateToCurrentIndex","shifting","_isShifting","_this$props$navigatio","ripple","setValue","parallel","_ref3","finished","tab","forEach","offset","_handleLayout","e","layout","_e$nativeEvent$layout","nativeEvent","height","width","measured","_handleTabPress","_this$props2","onTabPress","onIndexChange","_jumpTo","findIndex","length","_index","touch","OS","addListener","prevProps","_this2","removeListener","_this3","_this$props3","renderScene","renderIcon","renderLabel","_this$props3$getLabel","getLabelText","_ref4","title","_this$props3$getBadge","getBadge","_ref5","badge","_this$props3$getColor","getColor","_ref6","_this$props3$getAcces","getAccessibilityLabel","_ref7","accessibilityLabel","_this$props3$getTestI","getTestID","_ref8","testID","activeColor","inactiveColor","keyboardHidesNavigationBar","barStyle","labeled","theme","_this$state","colors","isDarkTheme","dark","mode","_ref9","flatten","customBackground","backgroundColor","_ref9$elevation","elevation","approxBackgroundColor","surface","primary","interpolate","inputRange","outputRange","isDark","isLight","textColor","activeTintColor","inactiveTintColor","alpha","rgb","string","touchColor","maxTabWidth","tabWidth","Math","min","styles","container","pointerEvents","content","background","opacity","top","focused","accessibilityElementsHidden","importantForAccessibility","absoluteFill","collapsable","removeClippedSubviews","bar","transform","translateY","position","onLayout","barContent","forceInset","bottom","items","maxWidth","left","borderRadius","scale","active","activeOpacity","inactiveOpacity","onPress","accessibilityTraits","accessibilityComponentType","accessibilityRole","accessibilityStates","item","iconContainer","iconWrapper","source","icon","size","badgeContainer","right","String","labelContainer","labelWrapper","label","Component","defaultProps","create","flex","overflow","alignItems","flexDirection","paddingVertical","marginTop","marginHorizontal","alignSelf","_objectSpread","absoluteFillObject","paddingBottom","fontSize","textAlign","whiteSpace"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/BottomNavigation.tsx"],"sourcesContent":["/* eslint-disable react/no-multi-comp */\n\nimport * as React from 'react';\nimport {\n  View,\n  Animated,\n  TouchableWithoutFeedback,\n  StyleSheet,\n  StyleProp,\n  Platform,\n  Keyboard,\n  ViewStyle,\n  LayoutChangeEvent,\n} from 'react-native';\nimport SafeAreaView from 'react-native-safe-area-view';\nimport color from 'color';\nimport overlay from '../styles/overlay';\nimport Icon, { IconSource } from './Icon';\nimport Surface from './Surface';\nimport Badge from './Badge';\nimport TouchableRipple from './TouchableRipple';\nimport Text from './Typography/Text';\nimport { black, white } from '../styles/colors';\nimport { withTheme } from '../core/theming';\nimport { Theme } from '../types';\n\ntype Route = {\n  key: string;\n  title?: string;\n  icon?: IconSource;\n  badge?: string | number | boolean;\n  color?: string;\n  accessibilityLabel?: string;\n  testID?: string;\n};\n\ntype NavigationState = {\n  index: number;\n  routes: Route[];\n};\n\ntype Props = {\n  /**\n   * Whether the shifting style is used, the active tab appears wider and the inactive tabs won't have a label.\n   * By default, this is `true` when you have more than 3 tabs.\n   */\n  shifting?: boolean;\n  /**\n   * Whether to show labels in tabs. When `false`, only icons will be displayed.\n   */\n  labeled?: boolean;\n  /**\n   * State for the bottom navigation. The state should contain the following properties:\n   *\n   * - `index`: a number reprsenting the index of the active route in the `routes` array\n   * - `routes`: an array containing a list of route objects used for rendering the tabs\n   *\n   * Each route object should contain the following properties:\n   *\n   * - `key`: a unique key to identify the route (required)\n   * - `title`: title of the route to use as the tab label\n   * - `icon`: icon to use as the tab icon, can be a string, an image source or a react component\n   * - `color`: color to use as background color for shifting bottom navigation\n   * - `badge`: badge to show on the tab icon, can be `true` to show a dot, `string` or `number` to show text.\n   * - `accessibilityLabel`: accessibility label for the tab button\n   * - `testID`: test id for the tab button\n   *\n   * Example:\n   *\n   * ```js\n   * {\n   *   index: 1,\n   *   routes: [\n   *     { key: 'music', title: 'Music', icon: 'queue-music', color: '#3F51B5' },\n   *     { key: 'albums', title: 'Albums', icon: 'album', color: '#009688' },\n   *     { key: 'recents', title: 'Recents', icon: 'history', color: '#795548' },\n   *     { key: 'purchased', title: 'Purchased', icon: 'shopping-cart', color: '#607D8B' },\n   *   ]\n   * }\n   * ```\n   *\n   * `BottomNavigation` is a controlled component, which means the `index` needs to be updated via the `onIndexChange` callback.\n   */\n  navigationState: NavigationState;\n  /**\n   * Callback which is called on tab change, receives the index of the new tab as argument.\n   * The navigation state needs to be updated when it's called, otherwise the change is dropped.\n   */\n  onIndexChange: (index: number) => void;\n  /**\n   * Callback which returns a react element to render as the page for the tab. Receives an object containing the route as the argument:\n   *\n   * ```js\n   * renderScene = ({ route, jumpTo }) => {\n   *   switch (route.key) {\n   *     case 'music':\n   *       return <MusicRoute jumpTo={jumpTo} />;\n   *     case 'albums':\n   *       return <AlbumsRoute jumpTo={jumpTo} />;\n   *   }\n   * }\n   * ```\n   *\n   * Pages are lazily rendered, which means that a page will be rendered the first time you navigate to it.\n   * After initial render, all the pages stay rendered to preserve their state.\n   *\n   * You need to make sure that your individual routes implement a `shouldComponentUpdate` to improve the performance.\n   * To make it easier to specify the components, you can use the `SceneMap` helper:\n   *\n   * ```js\n   * renderScene = BottomNavigation.SceneMap({\n   *   music: MusicRoute,\n   *   albums: AlbumsRoute,\n   * });\n   * ```\n   *\n   * Specifying the components this way is easier and takes care of implementing a `shouldComponentUpdate` method.\n   * Each component will receive the current route and a `jumpTo` method as it's props.\n   * The `jumpTo` method can be used to navigate to other tabs programmatically:\n   *\n   * ```js\n   * this.props.jumpTo('albums')\n   * ```\n   */\n  renderScene: (props: {\n    route: Route;\n    jumpTo: (key: string) => void;\n  }) => React.ReactNode | null;\n  /**\n   * Callback which returns a React Element to be used as tab icon.\n   */\n  renderIcon?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Callback which React Element to be used as tab label.\n   */\n  renderLabel?: (props: {\n    route: Route;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  /**\n   * Get label text for the tab, uses `route.title` by default. Use `renderLabel` to replace label component.\n   */\n  getLabelText?: (props: { route: Route }) => string;\n  /**\n   * Get accessibility label for the tab button. This is read by the screen reader when the user taps the tab.\n   * Uses `route.accessibilityLabel` by default.\n   */\n  getAccessibilityLabel?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get the id to locate this tab button in tests, uses `route.testID` by default.\n   */\n  getTestID?: (props: { route: Route }) => string | undefined;\n  /**\n   * Get badge for the tab, uses `route.badge` by default.\n   */\n  getBadge?: (props: { route: Route }) => boolean | number | string | undefined;\n  /**\n   * Get color for the tab, uses `route.color` by default.\n   */\n  getColor?: (props: { route: Route }) => string | undefined;\n  /**\n   * Function to execute on tab press. It receives the route for the pressed tab, useful for things like scroll to top.\n   */\n  onTabPress?: (props: { route: Route }) => void;\n  /**\n   * Custom color for icon and label in the active tab.\n   */\n  activeColor?: string;\n  /**\n   * Custom color for icon and label in the inactive tab.\n   */\n  inactiveColor?: string;\n  /**\n   * Whether the bottom navigation bar is hidden when keyboard is shown.\n   * On Android, this works best when [`windowSoftInputMode`](https://developer.android.com/guide/topics/manifest/activity-element#wsoft) is set to `adjustResize`.\n   */\n  keyboardHidesNavigationBar?: boolean;\n  /**\n   * Style for the bottom navigation bar.\n   * You can set a bottom padding here if you have a translucent navigation bar on Android:\n   *\n   * ```js\n   * barStyle={{ paddingBottom: 48 }}\n   * ```\n   */\n  barStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: Theme;\n};\n\ntype State = {\n  /**\n   * Visibility of the navigation bar, visible state is 1 and invisible is 0.\n   */\n  visible: Animated.Value;\n  /**\n   * Active state of individual tab items, active state is 1 and inactve state is 0.\n   */\n  tabs: Animated.Value[];\n  /**\n   * The top offset for each tab item to position it offscreen.\n   * Placing items offscreen helps to save memory usage for inactive screens with removeClippedSubviews.\n   * We use animated values for this to prevent unnecesary re-renders.\n   */\n  offsets: Animated.Value[];\n  /**\n   * Index of the currently active tab. Used for setting the background color.\n   * Use don't use the color as an animated value directly, because `setValue` seems to be buggy with colors.\n   */\n  index: Animated.Value;\n  /**\n   * Animation for the touch, used to determine it's scale and opacity.\n   */\n  touch: Animated.Value;\n  /**\n   * Animation for the background color ripple, used to determine it's scale and opacity.\n   */\n  ripple: Animated.Value;\n  /**\n   * Layout of the navigation bar. The width is used to determine the size and position of the ripple.\n   */\n  layout: { height: number; width: number; measured: boolean };\n  /**\n   * Currently active index. Used only for getDerivedStateFromProps.\n   */\n  current: number;\n  /**\n   * Previously active index. Used to determine the position of the ripple.\n   */\n  previous: number;\n  /**\n   * List of loaded tabs, tabs will be loaded when navigated to.\n   */\n  loaded: number[];\n  /**\n   * Trak whether the keyboard is visible to show and hide the navigation bar.\n   */\n  keyboard: boolean;\n};\n\nconst MIN_RIPPLE_SCALE = 0.001; // Minimum scale is not 0 due to bug with animation\nconst MIN_TAB_WIDTH = 96;\nconst MAX_TAB_WIDTH = 168;\nconst BAR_HEIGHT = 56;\nconst FAR_FAR_AWAY = 9999;\n\n// @ts-ignore\nconst Touchable = TouchableRipple.supported\n  ? TouchableRipple\n  : // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    ({ style, children, borderless, centered, rippleColor, ...rest }: any) => (\n      <TouchableWithoutFeedback {...rest}>\n        <View style={style}>{children}</View>\n      </TouchableWithoutFeedback>\n    );\n\nclass SceneComponent extends React.PureComponent<any> {\n  render() {\n    const { component, ...rest } = this.props;\n    return React.createElement(component, rest);\n  }\n}\n\n/**\n * Bottom navigation provides quick navigation between top-level views of an app with a bottom navigation bar.\n * It is primarily designed for use on mobile.\n *\n * For integration with React Navigation, you can use [react-navigation-material-bottom-tab-navigator](https://github.com/react-navigation/react-navigation-material-bottom-tab-navigator).\n *\n * By default Bottom navigation uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/bottom-navigation.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { BottomNavigation, Text } from 'react-native-paper';\n *\n * const MusicRoute = () => <Text>Music</Text>;\n *\n * const AlbumsRoute = () => <Text>Albums</Text>;\n *\n * const RecentsRoute = () => <Text>Recents</Text>;\n *\n * export default class MyComponent extends React.Component {\n *   state = {\n *     index: 0,\n *     routes: [\n *       { key: 'music', title: 'Music', icon: 'queue-music' },\n *       { key: 'albums', title: 'Albums', icon: 'album' },\n *       { key: 'recents', title: 'Recents', icon: 'history' },\n *     ],\n *   };\n *\n *   _handleIndexChange = index => this.setState({ index });\n *\n *   _renderScene = BottomNavigation.SceneMap({\n *     music: MusicRoute,\n *     albums: AlbumsRoute,\n *     recents: RecentsRoute,\n *   });\n *\n *   render() {\n *     return (\n *       <BottomNavigation\n *         navigationState={this.state}\n *         onIndexChange={this._handleIndexChange}\n *         renderScene={this._renderScene}\n *       />\n *     );\n *   }\n * }\n * ```\n */\nclass BottomNavigation extends React.Component<Props, State> {\n  /**\n   * Function which takes a map of route keys to components.\n   * Pure components are used to minmize re-rendering of the pages.\n   * This drastically improves the animation performance.\n   */\n  static SceneMap(scenes: {\n    [key: string]: React.ComponentType<{\n      route: Route;\n      jumpTo: (key: string) => void;\n    }>;\n  }) {\n    return ({\n      route,\n      jumpTo,\n    }: {\n      route: Route;\n      jumpTo: (key: string) => void;\n    }) => (\n      <SceneComponent\n        key={route.key}\n        component={scenes[route.key ? route.key : '']}\n        route={route}\n        jumpTo={jumpTo}\n      />\n    );\n  }\n\n  static defaultProps = {\n    labeled: true,\n    keyboardHidesNavigationBar: true,\n  };\n\n  static getDerivedStateFromProps(nextProps: any, prevState: State) {\n    const { index, routes } = nextProps.navigationState;\n\n    // Re-create animated values if routes have been added/removed\n    // Preserve previous animated values if they exist, so we don't break animations\n    const tabs = routes.map(\n      // focused === 1, unfocused === 0\n      (_: any, i: number) =>\n        prevState.tabs[i] || new Animated.Value(i === index ? 1 : 0)\n    );\n    const offsets = routes.map(\n      // offscreen === 1, normal === 0\n      (_: any, i: number) =>\n        prevState.offsets[i] || new Animated.Value(i === index ? 0 : 1)\n    );\n\n    const nextState = {\n      tabs,\n      offsets,\n    };\n\n    if (index !== prevState.current) {\n      /* $FlowFixMe */\n      Object.assign(nextState, {\n        // Store the current index in state so that we can later check if the index has changed\n        current: index,\n        previous: prevState.current,\n        // Set the current tab to be loaded if it was not loaded before\n        loaded: prevState.loaded.includes(index)\n          ? prevState.loaded\n          : [...prevState.loaded, index],\n      });\n    }\n\n    return nextState;\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    const { index } = this.props.navigationState;\n\n    this.state = {\n      visible: new Animated.Value(1),\n      tabs: [],\n      offsets: [],\n      index: new Animated.Value(index),\n      ripple: new Animated.Value(MIN_RIPPLE_SCALE),\n      touch: new Animated.Value(MIN_RIPPLE_SCALE),\n      layout: { height: 0, width: 0, measured: false },\n      current: index,\n      previous: 0,\n      loaded: [index],\n      keyboard: false,\n    };\n  }\n\n  componentDidMount() {\n    // Workaround for native animated bug in react-native@^0.57\n    // Context: https://github.com/callstack/react-native-paper/pull/637\n    this._animateToCurrentIndex();\n\n    if (Platform.OS === 'ios') {\n      Keyboard.addListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.addListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.addListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.navigationState.index === this.props.navigationState.index) {\n      return;\n    }\n\n    // Reset offsets of previous and current tabs before animation\n    this.state.offsets.forEach((offset, i) => {\n      if (\n        i === this.props.navigationState.index ||\n        i === prevProps.navigationState.index\n      ) {\n        offset.setValue(0);\n      }\n    });\n\n    this._animateToCurrentIndex();\n  }\n\n  componentWillUnmount() {\n    if (Platform.OS === 'ios') {\n      Keyboard.removeListener('keyboardWillShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardWillHide', this._handleKeyboardHide);\n    } else {\n      Keyboard.removeListener('keyboardDidShow', this._handleKeyboardShow);\n      Keyboard.removeListener('keyboardDidHide', this._handleKeyboardHide);\n    }\n  }\n\n  _handleKeyboardShow = () =>\n    this.setState({ keyboard: true }, () =>\n      Animated.timing(this.state.visible, {\n        toValue: 0,\n        duration: 150,\n        useNativeDriver: true,\n      }).start()\n    );\n\n  _handleKeyboardHide = () =>\n    Animated.timing(this.state.visible, {\n      toValue: 1,\n      duration: 100,\n      useNativeDriver: true,\n    }).start(() => {\n      this.setState({ keyboard: false });\n    });\n\n  _animateToCurrentIndex = () => {\n    const shifting = this._isShifting();\n    const { routes, index } = this.props.navigationState;\n\n    // Reset the ripple to avoid glitch if it's currently animating\n    this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n    Animated.parallel([\n      Animated.timing(this.state.ripple, {\n        toValue: 1,\n        duration: shifting ? 400 : 0,\n        useNativeDriver: true,\n      }),\n      ...routes.map((_, i) =>\n        Animated.timing(this.state.tabs[i], {\n          toValue: i === index ? 1 : 0,\n          duration: shifting ? 150 : 75,\n          useNativeDriver: true,\n        })\n      ),\n    ]).start(({ finished }) => {\n      // Workaround a bug in native animations where this is reset after first animation\n      this.state.tabs.map((tab, i) => tab.setValue(i === index ? 1 : 0));\n\n      // Update the index to change bar's bacground color and then hide the ripple\n      this.state.index.setValue(index);\n      this.state.ripple.setValue(MIN_RIPPLE_SCALE);\n\n      if (finished) {\n        // Position all inactive screens offscreen to save memory usage\n        // Only do it when animation has finished to avoid glitches mid-transition if switching fast\n        this.state.offsets.forEach((offset, i) => {\n          if (i === index) {\n            offset.setValue(0);\n          } else {\n            offset.setValue(1);\n          }\n        });\n      }\n    });\n  };\n\n  _handleLayout = (e: LayoutChangeEvent) => {\n    const { layout } = this.state;\n    const { height, width } = e.nativeEvent.layout;\n\n    if (height === layout.height && width === layout.width) {\n      return;\n    }\n\n    this.setState({\n      layout: {\n        height,\n        width,\n        measured: true,\n      },\n    });\n  };\n\n  _handleTabPress = (index: number) => {\n    const { navigationState, onTabPress, onIndexChange } = this.props;\n\n    if (onTabPress) {\n      onTabPress({\n        route: navigationState.routes[index],\n      });\n    }\n\n    if (index !== navigationState.index) {\n      onIndexChange(index);\n    }\n  };\n\n  _jumpTo = (key: string) => {\n    const index = this.props.navigationState.routes.findIndex(\n      route => route.key === key\n    );\n\n    this.props.onIndexChange(index);\n  };\n\n  _isShifting = () =>\n    typeof this.props.shifting === 'boolean'\n      ? this.props.shifting\n      : this.props.navigationState.routes.length > 3;\n\n  render() {\n    const {\n      navigationState,\n      renderScene,\n      renderIcon,\n      renderLabel,\n      getLabelText = ({ route }: { route: Route }) => route.title,\n      getBadge = ({ route }: { route: Route }) => route.badge,\n      getColor = ({ route }: { route: Route }) => route.color,\n      getAccessibilityLabel = ({ route }: { route: Route }) =>\n        route.accessibilityLabel,\n      getTestID = ({ route }: { route: Route }) => route.testID,\n      activeColor,\n      inactiveColor,\n      keyboardHidesNavigationBar,\n      barStyle,\n      labeled,\n      style,\n      theme,\n    } = this.props;\n\n    const { layout, loaded } = this.state;\n    const { routes } = navigationState;\n    const { colors, dark: isDarkTheme, mode } = theme;\n\n    const shifting = this._isShifting();\n\n    const { backgroundColor: customBackground, elevation = 4 }: ViewStyle =\n      StyleSheet.flatten(barStyle) || {};\n\n    const approxBackgroundColor = customBackground\n      ? customBackground\n      : isDarkTheme && mode === 'adaptive'\n      ? overlay(elevation, colors.surface)\n      : colors.primary;\n\n    const backgroundColor = shifting\n      ? this.state.index.interpolate({\n          inputRange: routes.map((_, i) => i),\n          //@ts-ignore\n          outputRange: routes.map(\n            route => getColor({ route }) || approxBackgroundColor\n          ),\n        })\n      : approxBackgroundColor;\n\n    const isDark = !color(approxBackgroundColor).isLight();\n\n    const textColor = isDark ? white : black;\n    const activeTintColor =\n      typeof activeColor !== 'undefined' ? activeColor : textColor;\n    const inactiveTintColor =\n      typeof inactiveColor !== 'undefined'\n        ? inactiveColor\n        : color(textColor)\n            .alpha(0.5)\n            .rgb()\n            .string();\n\n    const touchColor = color(activeColor || activeTintColor)\n      .alpha(0.12)\n      .rgb()\n      .string();\n\n    const maxTabWidth = routes.length > 3 ? MIN_TAB_WIDTH : MAX_TAB_WIDTH;\n    const tabWidth = Math.min(\n      // Account for horizontal padding around the items\n      (layout.width * 4) / routes.length,\n      maxTabWidth\n    );\n\n    return (\n      <View\n        style={[styles.container, style]}\n        pointerEvents={layout.measured ? 'auto' : 'none'}\n      >\n        <View style={[styles.content, { backgroundColor: colors.background }]}>\n          {routes.map((route, index) => {\n            if (!loaded.includes(index)) {\n              // Don't render a screen if we've never navigated to it\n              return null;\n            }\n\n            const opacity = this.state.tabs[index];\n            const top = this.state.offsets[index].interpolate({\n              inputRange: [0, 1],\n              outputRange: [0, FAR_FAR_AWAY],\n            });\n\n            const focused = navigationState.index === index;\n\n            return (\n              <Animated.View\n                key={route.key}\n                pointerEvents={focused ? 'auto' : 'none'}\n                accessibilityElementsHidden={!focused}\n                importantForAccessibility={\n                  focused ? 'auto' : 'no-hide-descendants'\n                }\n                style={[StyleSheet.absoluteFill, { opacity }]}\n                collapsable={false}\n                removeClippedSubviews={\n                  // On iOS, set removeClippedSubviews to true only when not focused\n                  // This is an workaround for a bug where the clipped view never re-appears\n                  Platform.OS === 'ios' ? navigationState.index !== index : true\n                }\n              >\n                <Animated.View style={[styles.content, { top }]}>\n                  {renderScene({\n                    route,\n                    jumpTo: this._jumpTo,\n                  })}\n                </Animated.View>\n              </Animated.View>\n            );\n          })}\n        </View>\n        <Surface\n          style={\n            [\n              styles.bar,\n              keyboardHidesNavigationBar\n                ? {\n                    // When the keyboard is shown, slide down the navigation bar\n                    transform: [\n                      {\n                        translateY: this.state.visible.interpolate({\n                          inputRange: [0, 1],\n                          outputRange: [this.state.layout.height, 0],\n                        }),\n                      },\n                    ],\n                    // Absolutely position the navigation bar so that the content is below it\n                    // This is needed to avoid gap at bottom when the navigation bar is hidden\n                    position: this.state.keyboard ? 'absolute' : null,\n                  }\n                : null,\n              barStyle,\n            ] as StyleProp<ViewStyle>\n          }\n          pointerEvents={\n            keyboardHidesNavigationBar && this.state.keyboard ? 'none' : 'auto'\n          }\n          onLayout={this._handleLayout}\n        >\n          <Animated.View style={[styles.barContent, { backgroundColor }]}>\n            <SafeAreaView\n              forceInset={{ top: 'never', bottom: 'always' }}\n              style={[styles.items, { maxWidth: maxTabWidth * routes.length }]}\n            >\n              {shifting ? (\n                <Animated.View\n                  pointerEvents=\"none\"\n                  style={[\n                    styles.ripple,\n                    {\n                      // Since we have a single ripple, we have to reposition it so that it appears to expand from active tab.\n                      // We need to move it from the top to center of the navigation bar and from the left to the active tab.\n                      top: BAR_HEIGHT / 2 - layout.width / 8,\n                      left:\n                        navigationState.index * tabWidth +\n                        tabWidth / 2 -\n                        layout.width / 8,\n                      height: layout.width / 4,\n                      width: layout.width / 4,\n                      borderRadius: layout.width / 2,\n                      backgroundColor: getColor({\n                        route: routes[navigationState.index],\n                      }),\n                      transform: [\n                        {\n                          // Scale to twice the size  to ensure it covers the whole navigation bar\n                          scale: this.state.ripple.interpolate({\n                            inputRange: [0, 1],\n                            outputRange: [0, 8],\n                          }),\n                        },\n                      ],\n                      opacity: this.state.ripple.interpolate({\n                        inputRange: [0, MIN_RIPPLE_SCALE, 0.3, 1],\n                        outputRange: [0, 0, 1, 1],\n                      }),\n                    },\n                  ]}\n                />\n              ) : null}\n              {routes.map((route, index) => {\n                const focused = navigationState.index === index;\n                const active = this.state.tabs[index];\n\n                // Scale the label up\n                const scale =\n                  labeled && shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.5, 1],\n                      })\n                    : 1;\n\n                // Move down the icon to account for no-label in shifting and smaller label in non-shifting.\n                const translateY = labeled\n                  ? shifting\n                    ? active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [7, 0],\n                      })\n                    : 0\n                  : 7;\n\n                // We render the active icon and label on top of inactive ones and cross-fade them on change.\n                // This trick gives the illusion that we are animating between active and inactive colors.\n                // This is to ensure that we can use native driver, as colors cannot be animated with native driver.\n                const activeOpacity = active;\n                const inactiveOpacity = active.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [1, 0],\n                });\n\n                const badge = getBadge({ route });\n\n                return (\n                  <Touchable\n                    key={route.key}\n                    borderless\n                    centered\n                    rippleColor={touchColor}\n                    onPress={() => this._handleTabPress(index)}\n                    testID={getTestID({ route })}\n                    accessibilityLabel={getAccessibilityLabel({ route })}\n                    accessibilityTraits={\n                      focused ? ['button', 'selected'] : 'button'\n                    }\n                    accessibilityComponentType=\"button\"\n                    accessibilityRole=\"button\"\n                    accessibilityStates={['selected']}\n                    style={styles.item}\n                  >\n                    <View pointerEvents=\"none\">\n                      <Animated.View\n                        style={[\n                          styles.iconContainer,\n                          { transform: [{ translateY }] },\n                        ]}\n                      >\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: activeOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: true,\n                              color: activeTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={activeTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <Animated.View\n                          style={[\n                            styles.iconWrapper,\n                            { opacity: inactiveOpacity },\n                          ]}\n                        >\n                          {renderIcon ? (\n                            renderIcon({\n                              route,\n                              focused: false,\n                              color: inactiveTintColor,\n                            })\n                          ) : (\n                            <Icon\n                              source={route.icon as IconSource}\n                              color={inactiveTintColor}\n                              size={24}\n                            />\n                          )}\n                        </Animated.View>\n                        <View\n                          style={[\n                            styles.badgeContainer,\n                            {\n                              right:\n                                (badge != null && typeof badge !== 'boolean'\n                                  ? String(badge).length * -2\n                                  : 0) - 2,\n                            },\n                          ]}\n                        >\n                          {typeof badge === 'boolean' ? (\n                            <Badge visible={badge} size={8} />\n                          ) : (\n                            <Badge visible={badge != null} size={16}>\n                              {badge}\n                            </Badge>\n                          )}\n                        </View>\n                      </Animated.View>\n                      {labeled ? (\n                        <Animated.View\n                          style={[\n                            styles.labelContainer,\n                            { transform: [{ scale }] },\n                          ]}\n                        >\n                          <Animated.View\n                            style={[\n                              styles.labelWrapper,\n                              { opacity: activeOpacity },\n                            ]}\n                          >\n                            {renderLabel ? (\n                              renderLabel({\n                                route,\n                                focused: true,\n                                color: activeTintColor,\n                              })\n                            ) : (\n                              <Text\n                                style={[\n                                  styles.label,\n                                  { color: activeTintColor },\n                                ]}\n                              >\n                                {getLabelText({ route })}\n                              </Text>\n                            )}\n                          </Animated.View>\n                          {shifting ? null : (\n                            <Animated.View\n                              style={[\n                                styles.labelWrapper,\n                                { opacity: inactiveOpacity },\n                              ]}\n                            >\n                              {renderLabel ? (\n                                renderLabel({\n                                  route,\n                                  focused: false,\n                                  color: inactiveTintColor,\n                                })\n                              ) : (\n                                <Text\n                                  style={[\n                                    styles.label,\n                                    { color: inactiveTintColor },\n                                  ]}\n                                >\n                                  {getLabelText({ route })}\n                                </Text>\n                              )}\n                            </Animated.View>\n                          )}\n                        </Animated.View>\n                      ) : (\n                        <View style={styles.labelContainer} />\n                      )}\n                    </View>\n                  </Touchable>\n                );\n              })}\n            </SafeAreaView>\n          </Animated.View>\n        </Surface>\n      </View>\n    );\n  }\n}\n\nexport default withTheme(BottomNavigation);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  content: {\n    flex: 1,\n  },\n  bar: {\n    left: 0,\n    right: 0,\n    bottom: 0,\n    elevation: 4,\n  },\n  barContent: {\n    alignItems: 'center',\n    overflow: 'hidden',\n  },\n  items: {\n    flexDirection: 'row',\n    width: '100%',\n  },\n  item: {\n    flex: 1,\n    // Top padding is 6 and bottom padding is 10\n    // The extra 4dp bottom padding is offset by label's height\n    paddingVertical: 6,\n  },\n  ripple: {\n    position: 'absolute',\n  },\n  iconContainer: {\n    height: 24,\n    width: 24,\n    marginTop: 2,\n    marginHorizontal: 12,\n    alignSelf: 'center',\n  },\n  iconWrapper: {\n    ...StyleSheet.absoluteFillObject,\n    alignItems: 'center',\n  },\n  labelContainer: {\n    height: 16,\n    paddingBottom: 2,\n  },\n  labelWrapper: {\n    ...StyleSheet.absoluteFillObject,\n  },\n  label: {\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'transparent',\n    ...(Platform.OS === 'web'\n      ? {\n          whiteSpace: 'nowrap',\n        }\n      : null),\n  },\n  badgeContainer: {\n    position: 'absolute',\n    left: 0,\n    top: -2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}