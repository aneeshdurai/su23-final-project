{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { memo, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport BackButton from \"./components/BackButton\";\nimport { theme } from \"./core/theme\";\nimport Toast from \"./components/Toast\";\nimport firebase from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar LoginScreen = function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    error = _useState6[0],\n    setError = _useState6[1];\n  var auth = getAuth();\n  function login(username, password) {\n    signInWithEmailAndPassword(auth, username, password).then(function (userCredential) {\n      var user = userCredential.user;\n      navigation.navigate('CreateGameScreen');\n    }).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      setError(errorMessage);\n    });\n  }\n  function resetPassword(username) {\n    sendPasswordResetEmail(auth, username).then(function () {}).catch(function (error) {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  }\n  return _jsxs(Background, {\n    children: [_jsx(BackButton, {\n      goBack: function goBack() {\n        return navigation.navigate(\"HomeScreen\");\n      }\n    }), _jsx(View, {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n      },\n      children: _jsx(Logo, {})\n    }), _jsx(Header, {\n      children: \" Sign In \"\n    }), _jsx(TextInput, {\n      label: \"Email\",\n      returnKeyType: \"next\",\n      value: email.value,\n      onChangeText: function onChangeText(text) {\n        return setEmail({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!email.error,\n      errorText: email.error,\n      autoCapitalize: \"none\",\n      autoCompleteType: \"email\",\n      textContentType: \"emailAddress\",\n      keyboardType: \"email-address\"\n    }), _jsx(TextInput, {\n      label: \"Password\",\n      returnKeyType: \"done\",\n      value: password.value,\n      onChangeText: function onChangeText(text) {\n        return setPassword({\n          value: text,\n          error: \"\"\n        });\n      },\n      error: !!password.error,\n      errorText: password.error,\n      secureTextEntry: true,\n      autoCapitalize: \"none\"\n    }), _jsx(Button, {\n      mode: \"contained\",\n      onPress: function onPress() {\n        return login(email.value, password.value);\n      },\n      style: styles.button,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.row,\n      children: [_jsx(Text, {\n        style: styles.label,\n        children: \" Don't have an account? \"\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate(\"RegisterScreen\");\n        },\n        children: _jsx(Text, {\n          style: styles.link,\n          children: \"Create an Account\"\n        })\n      })]\n    }), _jsx(Toast, {\n      message: error,\n      onDismiss: function onDismiss() {\n        return setError(\"\");\n      }\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  label: {\n    color: theme.colors.secondary\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: \"row\",\n    marginTop: 4\n  },\n  link: {\n    fontWeight: \"bold\",\n    color: theme.colors.primary\n  }\n});\nexport default memo(LoginScreen);","map":{"version":3,"names":["React","memo","useState","View","Text","StyleSheet","TouchableOpacity","Background","Logo","Header","Button","TextInput","BackButton","theme","Toast","firebase","getAuth","signInWithEmailAndPassword","sendPasswordResetEmail","jsx","_jsx","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","_useState5","_useState6","error","setError","auth","login","username","then","userCredential","user","navigate","catch","errorCode","code","errorMessage","message","resetPassword","children","goBack","style","position","top","left","label","returnKeyType","value","onChangeText","text","errorText","autoCapitalize","autoCompleteType","textContentType","keyboardType","secureTextEntry","mode","onPress","styles","button","row","link","onDismiss","create","color","colors","secondary","marginTop","flexDirection","fontWeight","primary"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/LoginScreen.js"],"sourcesContent":["import React, { memo, useState } from \"react\";\nimport { View, Text, StyleSheet, TouchableOpacity } from \"react-native\";\nimport Background from \"./components/Background\";\nimport Logo from \"./components/Logo\";\nimport Header from \"./components/Header\";\nimport Button from \"./components/Button\";\nimport TextInput from \"./components/TextInput\";\nimport BackButton from \"./components/BackButton\";\nimport { theme } from \"./core/theme\";\nimport Toast from \"./components/Toast\";\nimport firebase from \"firebase/app\";\nimport { getAuth, signInWithEmailAndPassword, sendPasswordResetEmail } from \"firebase/auth\";\n\n\n\n\nconst LoginScreen = ({ navigation }) => {\n  /* Screen Requirements:\n      - AppBar\n      - Email & Password Text Input\n      - Submit Button\n      - Sign Up Button (goes to Sign Up screen)\n      - Reset Password Button\n      - Snackbar for Error Messages\n  \n    All UI components on this screen can be found in:\n      https://callstack.github.io/react-native-paper/\n\n    All authentication logic can be found at:\n      https://firebase.google.com/docs/auth/web/starts\n  */\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  //const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const auth = getAuth();\n\n  function login(username, password) {\n    signInWithEmailAndPassword(auth, username, password)\n    .then((userCredential) => {\n      // Signed in \n      const user = userCredential.user;\n      navigation.navigate('CreateGameScreen');\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      setError(errorMessage);\n    });\n    \n  }\n  \n  function resetPassword(username) {\n    sendPasswordResetEmail(auth, username)\n    .then(() => {\n    // Password reset email sent!\n    // ..\n    })\n    .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // ..\n    });\n  }\n  \n\n  return (\n    <Background>\n      <BackButton goBack={() => navigation.navigate(\"HomeScreen\")} />\n\n      <View style={{ position: 'absolute', top: 0, left: 0 }}>\n      <Logo />\n      </View>\n\n      <Header> Sign In </Header>\n\n      \n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email.value}\n        onChangeText={text => setEmail({ value: text, error: \"\" })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={password.value}\n        onChangeText={text => setPassword({ value: text, error: \"\" })}\n        error={!!password.error}\n        errorText={password.error}\n        secureTextEntry\n        autoCapitalize=\"none\"\n      />\n\n      <Button\n        //loading={loading}\n        mode=\"contained\"\n        onPress={() => login(email.value, password.value)}\n        style={styles.button}\n      >\n        Login\n      </Button>\n\n      <View style={styles.row}>\n        <Text style={styles.label}> Don't have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.navigate(\"RegisterScreen\")}>\n          <Text style={styles.link}>Create an Account</Text>\n        </TouchableOpacity>\n      </View>\n\n      <Toast message={error} onDismiss={() => setError(\"\")} />\n    </Background>\n  );\n\n}\n\n\nconst styles = StyleSheet.create({\n    label: {\n      color: theme.colors.secondary\n    },\n    button: {\n      marginTop: 24\n    },\n    row: {\n      flexDirection: \"row\",\n      marginTop: 4\n    },\n    link: {\n      fontWeight: \"bold\",\n      color: theme.colors.primary\n    }\n  });\n\nexport default memo(LoginScreen);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}