{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/trensik/dev/react-native-paper/src/components/MaterialCommunityIcon.tsx\";\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar MaterialCommunityIcons;\ntry {\n  MaterialCommunityIcons = require(\"@expo/vector-icons/MaterialCommunityIcons\").default;\n} catch (e) {\n  if (global.__expo && global.__expo.Icon && global.__expo.Icon.MaterialCommunityIcons) {\n    MaterialCommunityIcons = global.__expo.Icon.MaterialCommunityIcons;\n  } else {\n    var isErrorLogged = false;\n    MaterialCommunityIcons = function MaterialCommunityIcons(_ref) {\n      var name = _ref.name,\n        color = _ref.color,\n        size = _ref.size,\n        rest = _objectWithoutProperties(_ref, [\"name\", \"color\", \"size\"]);\n      if (!isErrorLogged) {\n        if (!/(Cannot find module|Module not found|Cannot resolve module)/.test(e.message)) {\n          console.error(e);\n        }\n        console.warn(\"Tried to use the icon '\" + name + \"' in a component from 'react-native-paper', but 'react-native-vector-icons' could not be loaded.\", \"To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.\");\n        isErrorLogged = true;\n      }\n      return React.createElement(Text, _extends({}, rest, {\n        style: [styles.icon, {\n          color: color,\n          fontSize: size\n        }],\n        pointerEvents: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        }\n      }), \"\\u25A1\");\n    };\n  }\n}\nexport var accessibilityProps = Platform.OS === 'web' ? {\n  role: 'img',\n  focusable: false\n} : {\n  accessibilityElementsHidden: true,\n  importantForAccessibility: 'no-hide-descendants'\n};\nvar defaultIcon = function defaultIcon(_ref2) {\n  var name = _ref2.name,\n    color = _ref2.color,\n    size = _ref2.size,\n    direction = _ref2.direction;\n  return React.createElement(MaterialCommunityIcons, _extends({\n    name: name,\n    color: color,\n    size: size,\n    style: [{\n      transform: [{\n        scaleX: direction === 'rtl' ? -1 : 1\n      }]\n    }, styles.icon],\n    pointerEvents: \"none\"\n  }, accessibilityProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent'\n  }\n});\nexport default defaultIcon;","map":{"version":3,"names":["React","StyleSheet","Text","Platform","MaterialCommunityIcons","require","default","e","global","__expo","Icon","isErrorLogged","_ref","name","color","size","rest","_objectWithoutProperties","test","message","console","error","warn","createElement","_extends","style","styles","icon","fontSize","pointerEvents","__source","fileName","_jsxFileName","lineNumber","accessibilityProps","OS","role","focusable","accessibilityElementsHidden","importantForAccessibility","defaultIcon","_ref2","direction","transform","scaleX","create","backgroundColor"],"sources":["/Users/aneesh/Desktop/cs160/su23-final-project/PickUpPals/node_modules/react-native-paper/lib/module/components/MaterialCommunityIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, Text, Platform } from 'react-native';\n\nexport type IconProps = {\n  name: string;\n  color: string;\n  size: number;\n  direction: 'rtl' | 'ltr';\n};\n\nlet MaterialCommunityIcons: any;\n\ntry {\n  // Optionally require vector-icons\n  MaterialCommunityIcons = require('react-native-vector-icons/MaterialCommunityIcons')\n    .default;\n} catch (e) {\n  if (\n    // @ts-ignore\n    global.__expo &&\n    // @ts-ignore\n    global.__expo.Icon &&\n    // @ts-ignore\n    global.__expo.Icon.MaterialCommunityIcons\n  ) {\n    // Snack doesn't properly bundle vector icons from subpath\n    // Use icons from the __expo global if available\n    // @ts-ignore\n    MaterialCommunityIcons = global.__expo.Icon.MaterialCommunityIcons;\n  } else {\n    let isErrorLogged = false;\n\n    // Fallback component for icons\n    // @ts-ignore\n    MaterialCommunityIcons = ({ name, color, size, ...rest }) => {\n      /* eslint-disable no-console */\n      if (!isErrorLogged) {\n        if (\n          !/(Cannot find module|Module not found|Cannot resolve module)/.test(\n            e.message\n          )\n        ) {\n          console.error(e);\n        }\n\n        console.warn(\n          `Tried to use the icon '${name}' in a component from 'react-native-paper', but 'react-native-vector-icons' could not be loaded.`,\n          `To remove this warning, try installing 'react-native-vector-icons' or use another method to specify icon: https://callstack.github.io/react-native-paper/icons.html.`\n        );\n\n        isErrorLogged = true;\n      }\n\n      return (\n        <Text\n          {...rest}\n          style={[styles.icon, { color, fontSize: size }]}\n          pointerEvents=\"none\"\n        >\n          â–¡\n        </Text>\n      );\n    };\n  }\n}\n\nexport const accessibilityProps =\n  Platform.OS === 'web'\n    ? {\n        role: 'img',\n        focusable: false,\n      }\n    : {\n        accessibilityElementsHidden: true,\n        importantForAccessibility: 'no-hide-descendants' as 'no-hide-descendants',\n      };\n\nconst defaultIcon = ({ name, color, size, direction }: IconProps) => (\n  <MaterialCommunityIcons\n    name={name}\n    color={color}\n    size={size}\n    style={[\n      {\n        transform: [{ scaleX: direction === 'rtl' ? -1 : 1 }],\n      },\n      styles.icon,\n    ]}\n    pointerEvents=\"none\"\n    {...accessibilityProps}\n  />\n);\n\nconst styles = StyleSheet.create({\n  icon: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport default defaultIcon;\n"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,QAAA;AASA,IAAIC,sBAAJ;AAEA,IAAI;EAEFA,sBAAsB,GAAGC,OAAO,6CAAP,CACtBC,OADH;AAED,CAAC,QAAOC,CAAP,EAAU;EACV,IAEEC,MAAM,CAACC,MAAP,IAEAD,MAAM,CAACC,MAAP,CAAcC,IAFd,IAIAF,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBN,sBANrB,EAOE;IAIAA,sBAAsB,GAAGI,MAAM,CAACC,MAAP,CAAcC,IAAd,CAAmBN,sBAA5C;EACD,CAZD,MAYO;IACL,IAAIO,aAAa,GAAG,KAApB;IAIAP,sBAAsB,GAAG,SAAAA,uBAAAQ,IAAA,EAAoC;MAAA,IAAjCC,IAAiC,GAAAD,IAAA,CAAjCC,IAAiC;QAA3BC,KAA2B,GAAAF,IAAA,CAA3BE,KAA2B;QAApBC,IAAoB,GAAAH,IAAA,CAApBG,IAAoB;QAAXC,IAAW,GAAAC,wBAAA,CAAAL,IAAA;MAE3D,IAAI,CAACD,aAAL,EAAoB;QAClB,IACE,CAAC,8DAA8DO,IAA9D,CACCX,CAAC,CAACY,OADH,CADH,EAIE;UACAC,OAAO,CAACC,KAAR,CAAcd,CAAd;QACD;QAEDa,OAAO,CAACE,IAAR,6BAC4BT,IAD5B;QAKAF,aAAa,GAAG,IAAhB;MACD;MAED,OACEX,KAAA,CAAAuB,aAAA,CAACrB,IAAD,EAAAsB,QAAA,KACMR,IADN;QAEES,KAAK,EAAE,CAACC,MAAM,CAACC,IAAR,EAAc;UAAEb,KAAK,EAALA,KAAF;UAASc,QAAQ,EAAEb;QAAnB,CAAd,CAFT;QAGEc,aAAa,EAAC,MAHhB;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;QAAA;MAAA,aADF;IASD,CA5BD;EA6BD;AACF;AAED,OAAO,IAAMC,kBAAkB,GAC7B/B,QAAQ,CAACgC,EAAT,KAAgB,KAAhB,GACI;EACEC,IAAI,EAAE,KADR;EAEEC,SAAS,EAAE;AAFb,CADJ,GAKI;EACEC,2BAA2B,EAAE,IAD/B;EAEEC,yBAAyB,EAAE;AAF7B,CANC;AAWP,IAAMC,WAAW,GAAG,SAAdA,WAAcA,CAAAC,KAAA;EAAA,IAAG5B,IAAH,GAAA4B,KAAA,CAAG5B,IAAH;IAASC,KAAT,GAAA2B,KAAA,CAAS3B,KAAT;IAAgBC,IAAhB,GAAA0B,KAAA,CAAgB1B,IAAhB;IAAsB2B,SAAtB,GAAAD,KAAA,CAAsBC,SAAtB;EAAA,OAClB1C,KAAA,CAAAuB,aAAA,CAACnB,sBAAD,EAAAoB,QAAA;IACEX,IAAI,EAAEA,IADR;IAEEC,KAAK,EAAEA,KAFT;IAGEC,IAAI,EAAEA,IAHR;IAIEU,KAAK,EAAE,CACL;MACEkB,SAAS,EAAE,CAAC;QAAEC,MAAM,EAAEF,SAAS,KAAK,KAAd,GAAsB,CAAC,CAAvB,GAA2B;MAArC,CAAD;IADb,CADK,EAILhB,MAAM,CAACC,IAJF,CAJT;IAUEE,aAAa,EAAC;EAVhB,GAWMK,kBAXN;IAAAJ,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;IAAA;EAAA,GADkB;AAAA,CAApB;AAgBA,IAAMP,MAAM,GAAGzB,UAAU,CAAC4C,MAAX,CAAkB;EAC/BlB,IAAI,EAAE;IACJmB,eAAe,EAAE;EADb;AADyB,CAAlB,CAAf;AAMA,eAAeN,WAAf"},"metadata":{},"sourceType":"module","externalDependencies":[]}